<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GigaSpaces.Core</name>
    </assembly>
    <members>
        <member name="T:GigaSpaces.Core.Cache.LocalCacheConfig">
            <summary>
            A configuration object use to configure creation of a local cache.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Cache.LocalCacheConfig.BatchSize">
            <summary>
            Gets or sets the local view batch size which will be used for synchronizing the view with the remote space.        
            Null value indicates that the default value will be used.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Cache.LocalCacheConfig.BatchTimeout">
            <summary>
            Gets or sets the local view batch timeout (i.e. maximum time the server will batch entries before updating the client.
            Null value indicates that the default value will be used.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Cache.LocalCacheConfig.MaxDisconnectionDuration">
            <summary>
            Gets or sets the maximum allowed duration to hold stale data in the view before restarting the view. This occurrs when the connection is lost
            with the remote space for the specified duration.
            Null value indicates that the default value will be used.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Change.AddRangeToCollectionOperation">
            <summary>
            Represents a change operation which correlate with a <see cref="M:GigaSpaces.Core.ChangeSet.AddRangeToCollection(System.String,System.Collections.Generic.IEnumerable{System.Object})"/> invocation.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Change.AddRangeToCollectionOperation.Name">
            <summary>
            The name of the operation.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Change.AddRangeToCollectionOperation.Represents(GigaSpaces.Core.IChangeOperation)">
            <summary>
            Returns whether this operation type represents the given change operation.
            </summary>
            <param name="changeOperation">the change operation to check.</param>
            <returns>true if this operation type represents the given change operation.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Change.AddRangeToCollectionOperation.GetPath(GigaSpaces.Core.IChangeOperation)">
            <summary>
            Returns the path the operation changed.
            </summary>
            <param name="changeOperation">the change operation to extract data from.</param>
            <returns>The path the operation changed.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Change.AddRangeToCollectionOperation.GetItems(GigaSpaces.Core.IChangeOperation)">
            <summary>
            Returns the item that was added to the collection.
            </summary>
            <param name="changeOperation">the change operation to extract data from.</param>
            <returns>The item that was added to the collection.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Change.AddRangeToCollectionOperation.IsChanged(GigaSpaces.Core.IChangeOperationResult)">
            <summary>
            Returns whether the collection was changed by this operation.
            </summary>
            <param name="changeOperationResult">Change operation result.</param>
            <returns>whether the collection was changed by this operation.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Change.AddRangeToCollectionOperation.GetNewSize(GigaSpaces.Core.IChangeOperationResult)">
            <summary>
            Returns the size of the collection after the operation that was applied.
            </summary>
            <param name="changeOperationResult">Change operation result.</param>
            <returns>The size of the collection after the operation that was applied.</returns>
        </member>
        <member name="T:GigaSpaces.Core.Change.AddToCollectionOperation">
            <summary>
            Represents a change operation which correlate with a <see cref="M:GigaSpaces.Core.ChangeSet.AddToCollection(System.String,System.Object)"/> invocation.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Change.AddToCollectionOperation.Name">
            <summary>
            The name of the operation.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Change.AddToCollectionOperation.Represents(GigaSpaces.Core.IChangeOperation)">
            <summary>
            Returns whether this operation type represents the given change operation.
            </summary>
            <param name="changeOperation">the change operation to check.</param>
            <returns>true if this operation type represents the given change operation.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Change.AddToCollectionOperation.GetPath(GigaSpaces.Core.IChangeOperation)">
            <summary>
            Returns the path the operation changed.
            </summary>
            <param name="changeOperation">the change operation to extract data from.</param>
            <returns>The path the operation changed.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Change.AddToCollectionOperation.GetItem(GigaSpaces.Core.IChangeOperation)">
            <summary>
            Returns the item that was added to the collection.
            </summary>
            <param name="changeOperation">the change operation to extract data from.</param>
            <returns>The item that was added to the collection.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Change.AddToCollectionOperation.IsChanged(GigaSpaces.Core.IChangeOperationResult)">
            <summary>
            Returns whether the collection was changed by this operation.
            </summary>
            <param name="changeOperationResult">Change operation result.</param>
            <returns>whether the collection was changed by this add operation.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Change.AddToCollectionOperation.GetNewSize(GigaSpaces.Core.IChangeOperationResult)">
            <summary>
            Returns the size of the collection after the operation that was applied.
            </summary>
            <param name="changeOperationResult">Change operation result.</param>
            <returns>The size of the collection after the operation that was applied.</returns>
        </member>
        <member name="T:GigaSpaces.Core.Change.Extensions.ChangeExtension">
            <summary>
            Extensions for the <see cref="T:GigaSpaces.Core.ISpaceProxy"/> which simplify common change API usage patterns.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Change.Extensions.ChangeExtension.AddAndGet``1(GigaSpaces.Core.ISpaceProxy,GigaSpaces.Core.IdQuery{``0},System.String,System.Int32)">
            <summary>
            Atomically adds the given value to the current value of an entry's property.
            </summary>
            <typeparam name="T">the type of the entry.</typeparam>
            <param name="spaceProxy">the proxy to the space which stores the entry.</param>
            <param name="idQuery">id the query which is used to locate the entry.</param>
            <param name="path">the path to the number property which is being modified.</param>
            <param name="delta">the value to add.</param>        
            <returns>the updated value, null of no matching entry found for the given id query. Therefore you must use the 
            primitive nullable types as the result value (e.g. int?/long?) otherwise you may get an exception if no entry was found.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Change.Extensions.ChangeExtension.AddAndGet``1(GigaSpaces.Core.ISpaceProxy,GigaSpaces.Core.IdQuery{``0},System.String,System.Int32,GigaSpaces.Core.ITransaction,GigaSpaces.Core.ChangeModifiers,System.TimeSpan)">
            <summary>
            Atomically adds the given value to the current value of an entry's property.
            </summary>
            <typeparam name="T">the type of the entry.</typeparam>
            <param name="spaceProxy">the proxy to the space which stores the entry.</param>
            <param name="idQuery">id the query which is used to locate the entry.</param>
            <param name="path">the path to the number property which is being modified.</param>
            <param name="delta">the value to add.</param>
            <param name="transaction">the transaction to use (null if no transaction is used).</param>
            <param name="modifiers">the change modifiers to use.</param>
            <param name="timeout">time to wait if the entry is locked under a transaction.</param>
            <returns>the updated value, null of no matching entry found for the given id query. Therefore you must use the 
            primitive nullable types as the result value (e.g. int?/long?) otherwise you may get an exception if no entry was found.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Change.Extensions.ChangeExtension.AddAndGet``1(GigaSpaces.Core.ISpaceProxy,GigaSpaces.Core.IdQuery{``0},System.String,System.Int64)">
            <summary>
            Atomically adds the given value to the current value of an entry's property.
            </summary>
            <typeparam name="T">the type of the entry.</typeparam>
            <param name="spaceProxy">the proxy to the space which stores the entry.</param>
            <param name="idQuery">id the query which is used to locate the entry.</param>
            <param name="path">the path to the number property which is being modified.</param>
            <param name="delta">the value to add.</param>        
            <returns>the updated value, null of no matching entry found for the given id query. Therefore you must use the 
            primitive nullable types as the result value (e.g. int?/long?) otherwise you may get an exception if no entry was found.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Change.Extensions.ChangeExtension.AddAndGet``1(GigaSpaces.Core.ISpaceProxy,GigaSpaces.Core.IdQuery{``0},System.String,System.Int64,GigaSpaces.Core.ITransaction,GigaSpaces.Core.ChangeModifiers,System.TimeSpan)">
            <summary>
            Atomically adds the given value to the current value of an entry's property.
            </summary>
            <typeparam name="T">the type of the entry.</typeparam>
            <param name="spaceProxy">the proxy to the space which stores the entry.</param>
            <param name="idQuery">id the query which is used to locate the entry.</param>
            <param name="path">the path to the number property which is being modified.</param>
            <param name="delta">the value to add.</param>
            <param name="transaction">the transaction to use (null if no transaction is used).</param>
            <param name="modifiers">the change modifiers to use.</param>
            <param name="timeout">time to wait if the entry is locked under a transaction.</param>
            <returns>the updated value, null of no matching entry found for the given id query. Therefore you must use the 
            primitive nullable types as the result value (e.g. int?/long?) otherwise you may get an exception if no entry was found.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Change.Extensions.ChangeExtension.AddAndGet``1(GigaSpaces.Core.ISpaceProxy,GigaSpaces.Core.IdQuery{``0},System.String,System.Double)">
            <summary>
            Atomically adds the given value to the current value of an entry's property.
            </summary>
            <typeparam name="T">the type of the entry.</typeparam>
            <param name="spaceProxy">the proxy to the space which stores the entry.</param>
            <param name="idQuery">id the query which is used to locate the entry.</param>
            <param name="path">the path to the number property which is being modified.</param>
            <param name="delta">the value to add.</param>        
            <returns>the updated value, null of no matching entry found for the given id query. Therefore you must use the 
            primitive nullable types as the result value (e.g. int?/long?) otherwise you may get an exception if no entry was found.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Change.Extensions.ChangeExtension.AddAndGet``1(GigaSpaces.Core.ISpaceProxy,GigaSpaces.Core.IdQuery{``0},System.String,System.Double,GigaSpaces.Core.ITransaction,GigaSpaces.Core.ChangeModifiers,System.TimeSpan)">
            <summary>
            Atomically adds the given value to the current value of an entry's property.
            </summary>
            <typeparam name="T">the type of the entry.</typeparam>
            <param name="spaceProxy">the proxy to the space which stores the entry.</param>
            <param name="idQuery">id the query which is used to locate the entry.</param>
            <param name="path">the path to the number property which is being modified.</param>
            <param name="delta">the value to add.</param>
            <param name="transaction">the transaction to use (null if no transaction is used).</param>
            <param name="modifiers">the change modifiers to use.</param>
            <param name="timeout">time to wait if the entry is locked under a transaction.</param>
            <returns>the updated value, null of no matching entry found for the given id query. Therefore you must use the 
            primitive nullable types as the result value (e.g. int?/long?) otherwise you may get an exception if no entry was found.</returns>
        </member>
        <member name="T:GigaSpaces.Core.Change.IncrementOperation">
            <summary>
            Represents a change operation which correlate with a <see cref="M:GigaSpaces.Core.ChangeSet.Increment(System.String,System.Int32)"/> or <see cref="M:GigaSpaces.Core.ChangeSet.Decrement(System.String,System.Int32)"/> invocation.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Change.IncrementOperation.Name">
            <summary>
            The name of the operation.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Change.IncrementOperation.Represents(GigaSpaces.Core.IChangeOperation)">
            <summary>
            Returns whether this operation type represents the given change operation.
            </summary>
            <param name="changeOperation">the change operation to check.</param>
            <returns>true if this operation type represents the given change operation.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Change.IncrementOperation.GetPath(GigaSpaces.Core.IChangeOperation)">
            <summary>
            Returns the path the operation changed.
            </summary>
            <param name="changeOperation">the change operation to extract data from.</param>
            <returns>The path the operation changed.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Change.IncrementOperation.GetDelta(GigaSpaces.Core.IChangeOperation)">
            <summary>
            Returns the delta that was incremented (negative for decrement operation).
            </summary>
            <param name="changeOperation">the change operation to extract data from.</param>
            <returns>The delta that was incremented (negative for decrement operation).</returns>
        </member>
        <member name="M:GigaSpaces.Core.Change.IncrementOperation.GetNewValue(GigaSpaces.Core.IChangeOperationResult)">
            <summary>
            Returns the new value of the property after the increment operation was applied.
            </summary>
            <param name="changeOperationResult">Change operation result.</param>
            <returns>The new value of the property after the increment operation was applied</returns>
        </member>
        <member name="T:GigaSpaces.Core.Change.RemoveFromCollectionOperation">
            <summary>
            Represents a change operation which correlate with a <see cref="M:GigaSpaces.Core.ChangeSet.RemoveFromCollection(System.String,System.Object)"/> invocation.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Change.RemoveFromCollectionOperation.Name">
            <summary>
            The name of the operation.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Change.RemoveFromCollectionOperation.Represents(GigaSpaces.Core.IChangeOperation)">
            <summary>
            Returns whether this operation type represents the given change operation.
            </summary>
            <param name="changeOperation">the change operation to check.</param>
            <returns>true if this operation type represents the given change operation.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Change.RemoveFromCollectionOperation.GetPath(GigaSpaces.Core.IChangeOperation)">
            <summary>
            Returns the path the operation changed.
            </summary>
            <param name="changeOperation">the change operation to extract data from.</param>
            <returns>The path the operation changed.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Change.RemoveFromCollectionOperation.GetItem(GigaSpaces.Core.IChangeOperation)">
            <summary>
            Returns the item that was added to the collection.
            </summary>
            <param name="changeOperation">the change operation to extract data from.</param>
            <returns>The item that was added to the collection.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Change.RemoveFromCollectionOperation.IsChanged(GigaSpaces.Core.IChangeOperationResult)">
            <summary>
            Returns whether the collection was changed by this operation.
            </summary>
            <param name="changeOperationResult">Change operation result.</param>
            <returns>whether the collection was changed by this add operation.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Change.RemoveFromCollectionOperation.GetNewSize(GigaSpaces.Core.IChangeOperationResult)">
            <summary>
            Returns the size of the collection after the operation that was applied.
            </summary>
            <param name="changeOperationResult">Change operation result.</param>
            <returns>The size of the collection after the operation that was applied.</returns>
        </member>
        <member name="T:GigaSpaces.Core.Change.RemoveFromDictionaryOperation">
            <summary>
            Represents a change operation which correlate with a <see cref="M:GigaSpaces.Core.ChangeSet.RemoveFromDictionary(System.String,System.Object)"/> invocation.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Change.RemoveFromDictionaryOperation.Name">
            <summary>
            The name of the operation.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Change.RemoveFromDictionaryOperation.Represents(GigaSpaces.Core.IChangeOperation)">
            <summary>
            Returns whether this operation type represents the given change operation.
            </summary>
            <param name="changeOperation">the change operation to check.</param>
            <returns>true if this operation type represents the given change operation.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Change.RemoveFromDictionaryOperation.GetPath(GigaSpaces.Core.IChangeOperation)">
            <summary>
            Returns the path the operation changed.
            </summary>
            <param name="changeOperation">the change operation to extract data from.</param>
            <returns>The path the operation changed.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Change.RemoveFromDictionaryOperation.GetKey(GigaSpaces.Core.IChangeOperation)">
            <summary>
            Returns the key that was set.
            </summary>
            <param name="changeOperation">the change operation to extract data from.</param>
            <returns>The key that was set.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Change.RemoveFromDictionaryOperation.GetRemovedValue(GigaSpaces.Core.IChangeOperationResult)">
            <summary>
            Returns the value associated with this key which was removed.
            </summary>
            <param name="changeOperationResult">Change operation result.</param>
            <returns>The value associated with this key which was removed.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Change.RemoveFromDictionaryOperation.GetNewSize(GigaSpaces.Core.IChangeOperationResult)">
            <summary>
            Returns the size of the dictionary after the operation that was applied.
            </summary>
            <param name="changeOperationResult">Change operation result.</param>
            <returns>The size of the dictionary after the operation that was applied.</returns>
        </member>
        <member name="T:GigaSpaces.Core.Change.SetInDictionaryOperation">
            <summary>
            Represents a change operation which correlate with a <see cref="M:GigaSpaces.Core.ChangeSet.SetInDictionary(System.String,System.Object,System.Object)"/> invocation.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Change.SetInDictionaryOperation.Name">
            <summary>
            The name of the operation.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Change.SetInDictionaryOperation.Represents(GigaSpaces.Core.IChangeOperation)">
            <summary>
            Returns whether this operation type represents the given change operation.
            </summary>
            <param name="changeOperation">the change operation to check.</param>
            <returns>true if this operation type represents the given change operation.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Change.SetInDictionaryOperation.GetPath(GigaSpaces.Core.IChangeOperation)">
            <summary>
            Returns the path the operation changed.
            </summary>
            <param name="changeOperation">the change operation to extract data from.</param>
            <returns>The path the operation changed.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Change.SetInDictionaryOperation.GetKey(GigaSpaces.Core.IChangeOperation)">
            <summary>
            Returns the key that was set.
            </summary>
            <param name="changeOperation">the change operation to extract data from.</param>
            <returns>The key that was set.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Change.SetInDictionaryOperation.GetValue(GigaSpaces.Core.IChangeOperation)">
            <summary>
            Returns value that was set for the given key.
            </summary>
            <param name="changeOperation">the change operation to extract data from.</param>
            <returns>The value that was set for the given key.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Change.SetInDictionaryOperation.GetPreviousValue(GigaSpaces.Core.IChangeOperationResult)">
            <summary>
            Returns the previous value associated with this key or null if none exists.
            </summary>
            <param name="changeOperationResult">Change operation result.</param>
            <returns>The previous value associated with this key or null if none exists.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Change.SetInDictionaryOperation.GetNewSize(GigaSpaces.Core.IChangeOperationResult)">
            <summary>
            Returns the size of the dictionary after the operation that was applied.
            </summary>
            <param name="changeOperationResult">Change operation result.</param>
            <returns>The size of the dictionary after the operation that was applied.</returns>
        </member>
        <member name="T:GigaSpaces.Core.Change.SetOperation">
            <summary>
            Represents a change operation which correlate with a <see cref="M:GigaSpaces.Core.ChangeSet.Set(System.String,System.Object)"/> invocation.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Change.SetOperation.Name">
            <summary>
            The name of the operation.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Change.SetOperation.Represents(GigaSpaces.Core.IChangeOperation)">
            <summary>
            Returns whether this operation type represents the given change operation.
            </summary>
            <param name="changeOperation">the change operation to check.</param>
            <returns>true if this operation type represents the given change operation.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Change.SetOperation.GetPath(GigaSpaces.Core.IChangeOperation)">
            <summary>
            Returns the path the operation changed.
            </summary>
            <param name="changeOperation">the change operation to extract data from.</param>
            <returns>The path the operation changed.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Change.SetOperation.GetValue(GigaSpaces.Core.IChangeOperation)">
            <summary>
            Returns the value that was set.
            </summary>
            <param name="changeOperation">the change operation to extract data from.</param>
            <returns>The value that was set.</returns>
        </member>
        <member name="T:GigaSpaces.Core.Change.UnsetOperation">
            <summary>
            Represents a change operation which correlate with a <see cref="M:GigaSpaces.Core.ChangeSet.Unset(System.String)"/> invocation.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Change.UnsetOperation.Name">
            <summary>
            The name of the operation.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Change.UnsetOperation.Represents(GigaSpaces.Core.IChangeOperation)">
            <summary>
            Returns whether this operation type represents the given change operation.
            </summary>
            <param name="changeOperation">the change operation to check.</param>
            <returns>true if this operation type represents the given change operation.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Change.UnsetOperation.GetPath(GigaSpaces.Core.IChangeOperation)">
            <summary>
            Returns the path the operation changed.
            </summary>
            <param name="changeOperation">the change operation to extract data from.</param>
            <returns>The path the operation changed.</returns>
        </member>
        <member name="T:GigaSpaces.Core.IChangeOperation">
            <summary>
            A single change applied on a <see cref="T:GigaSpaces.Core.ChangeSet"/> when using a change operation on an object.
            See the following operations to obtain the relevant constant values in order to extract the data from the change operation
            <pre>
            <see cref="T:GigaSpaces.Core.Change.IncrementOperation"/>
            <see cref="T:GigaSpaces.Core.Change.AddToCollectionOperation"/>
            <see cref="T:GigaSpaces.Core.Change.AddRangeToCollectionOperation"/>
            <see cref="T:GigaSpaces.Core.Change.RemoveFromCollectionOperation"/>
            <see cref="T:GigaSpaces.Core.Change.SetInDictionaryOperation"/>
            <see cref="T:GigaSpaces.Core.Change.RemoveFromDictionaryOperation"/>
            <see cref="T:GigaSpaces.Core.Change.SetOperation"/>
            <see cref="T:GigaSpaces.Core.Change.UnsetOperation"/>    
            </pre>
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.IChangeOperation.Name">
            <summary>
            Gets the name of the operation
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ISpaceCopyResult">
            <summary>
            Encapsulates information about the result of a copy operation.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ISpaceCopyResult.SourceUrl">
            <summary>
            Gets the Url of the space from where all data have been copied.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ISpaceCopyResult.Exception">
            <summary>
            If the copy operation failed, gets the exception that cauesed the failure.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ISpaceCopyResult.TotalCopiedObjects">
            <summary>
            Gets the total number of copied objects.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ISpaceCopyResult.TotalEntriesBlockedByFilter">
            <summary>
            Gets the total number of entries which were blocked by a replication input filter.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ISpaceCopyResult.TotalCopiedEntries">
            <summary>
            Returns a mapping between classes names and the number of copied entries.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ISpaceCopyResult.DuplicateEntries">
            <summary>
            Returns a mapping between UIDs which exist in both spaces and their class names.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ISpaceRuntimeInfo">
            <summary>
            Encapsulates runtime information about types currently in use by the space.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ISpaceRuntimeInfo.Types">
            <summary>
            Gets all the types in the space.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ITypeRuntimeInfo">
            <summary>
            Encapsulates runtime information about a type in use by the space.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ITypeRuntimeInfo.SpaceTypeName">
            <summary>
            Type name in the space.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ITypeRuntimeInfo.NumberOfEntries">
            <summary>
            Number of instances of the type in the space.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ITypeRuntimeInfo.NumberOfTemplates">
            <summary>
            Number of templates of the type currently registered in the space.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.AbstractEventArgsRemotePbsObject">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.AbstractRemotePbsObject">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.AbstractRemotePbsObject.#ctor(System.Boolean)">
            <summary>
            For internal use.
            </summary>
            <param name="dynamicProxy">dummy variable to seperate implicit dynamic proxy creation of this object then
            explicit user creation</param>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Agent.InstantiationMode">
            <summary>
            Specifies the instantiation mode of a process that is managed by a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgent"/>.
            
            <seealso cref="T:GigaSpaces.Core.Admin.ServiceGrid.Agent.IAgentProcessDetails"/>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Admin.ServiceGrid.Agent.InstantiationMode.Local">
            <summary>
            The process is managed locally.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Admin.ServiceGrid.Agent.InstantiationMode.Global">
            <summary>
            The process is managed globally, all the grid service agents will make sure there are always
            exactly the specified number of instances of this process alive in the system.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Agent.GridServiceAgentAddedEventArgs">
            <summary>
            Provides data for <see cref="E:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgents.GridServiceAgentAdded"/> event.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Agent.GridServiceAgentAddedEventArgs.GridServiceAgent">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgent"/> that was added.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Agent.GridServiceAgentRemovedEventArgs">
            <summary>
            Provides data for <see cref="E:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgents.GridServiceAgentRemoved"/> event.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Agent.GridServiceAgentRemovedEventArgs.GridServiceAgent">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgent"/> that was removed.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Agent.GridServiceContainerOptions">
            <summary>
            <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainer"/> process options to be started by the
            <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgent"/>.
             
            <seealso cref="M:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgent.StartGridService(GigaSpaces.Core.Admin.ServiceGrid.Agent.GridServiceContainerOptions)"/>
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Agent.GridServiceContainerOptions.#ctor(System.Boolean)">
            <summary>
            For internal use.
            </summary>
            <param name="dynamicProxy">dummy variable to seperate implicit dynamic proxy creation of this object then
            explicit user creation</param>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Agent.GridServiceContainerOptions.#ctor">
            <summary>
            Constructs a new grid service container options. By default will use JVM process execution.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Agent.GridServiceContainerOptions.UseExecutable">
            <summary>
            Will cause the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainer"/> to be started using the corresponding executable file
            and not a pure Java process.
            </summary>		
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Agent.GridServiceContainerOptions.OverrideVmInputArguments">
            <summary>
            Will cause JVM options added using <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.Agent.GridServiceContainerOptions.VmInputArgument(System.String)"/> to override all the vm arguments
            that the JVM will start by default with.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Agent.GridServiceContainerOptions.VmInputArgument(System.String)">
            <summary>
            Will add a JVM level argument when the process is executed using pure JVM. For example, the memory
            can be controlled using <code>-Xmx512m</code>.
            </summary>
            <param name="vmInputArgument">argument to add.</param>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Agent.GridServiceContainerOptions.EnvironmentVariable(System.String,System.String)">
            <summary>
            Sets an environment variable that will be passed to forked process.
            </summary>
            <param name="name">variable name.</param>
            <param name="value">variable value.</param>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Agent.GridServiceContainerOptions.Options">
            <summary>
            Gets the agent process options that represents what was set on this GSC options.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Agent.GridServiceManagerOptions">
             <summary>
             <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManager"/> process options to be started by the
            	<see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgent"/>.
            
             <seealso cref="M:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgent.StartGridService(GigaSpaces.Core.Admin.ServiceGrid.Agent.GridServiceManagerOptions)"/>.
             </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Agent.GridServiceManagerOptions.#ctor(System.Boolean)">
            <summary>
            For internal use.
            </summary>
            <param name="dynamicProxy">dummy variable to seperate implicit dynamic proxy creation of this object then
            explicit user creation</param>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Agent.GridServiceManagerOptions.#ctor">
            <summary>
            Constructs a new grid service manager options. By default will use JVM process execution.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Agent.GridServiceManagerOptions.UseExecutable">
            <summary>
            Will cause the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManager"/> to be started using the corresponding executable file
            and not a pure Java process.
            </summary>		
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Agent.GridServiceManagerOptions.OverrideVmInputArguments">
            <summary>
            Will cause JVM options added using <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.Agent.GridServiceManagerOptions.VmInputArgument(System.String)"/> to override all the vm arguments
            that the JVM will start by default with.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Agent.GridServiceManagerOptions.VmInputArgument(System.String)">
            <summary>
            Will add a JVM level argument when the process is executed using pure JVM. For example, the memory
            can be controlled using <code>-Xmx512m</code>.
            </summary>
            <param name="vmInputArgument">argument to add.</param>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Agent.GridServiceManagerOptions.EnvironmentVariable(System.String,System.String)">
            <summary>
            Sets an environment variable that will be passed to forked process.
            </summary>
            <param name="name">variable name.</param>
            <param name="value">variable value.</param>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Agent.GridServiceManagerOptions.Options">
            <summary>
            Gets the agent process options that represents what was set on this GSM options.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Agent.GridServiceOptions">
            <summary>
            A generic process options.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Agent.GridServiceOptions.#ctor(System.Boolean)">
            <summary>
            For internal use.
            </summary>
            <param name="dynamicProxy">dummy variable to seperate implicit dynamic proxy creation of this object then
            explicit user creation</param>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Agent.GridServiceOptions.#ctor(System.String)">
            <summary>
            Constructs a new grid service options with the given process type. By default, will use JVM to start it.
            </summary>
            <param name="type">process type.</param>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Agent.GridServiceOptions.UseExecutable">
            <summary>
            Will use an executable to start the process, and not a pure JVM process.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Agent.GridServiceOptions.OverrideVmInputArguments">
            <summary>
            Will cause JVM options added using <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.Agent.GridServiceOptions.VmInputArgument(System.String)"/> to override all the vm arguments
            that the JVM will start by default with.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Agent.GridServiceOptions.VmInputArgument(System.String)">
            <summary>
            Will add a JVM level argument when the process is executed using pure JVM. For example, the memory
            can be controlled using <code>-Xmx512m</code>.
            </summary>
            <param name="vmInputArgument">argument to add.</param>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Agent.GridServiceOptions.OverrideArguments">
            <summary>
            Will cause the process arguments added using <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.Agent.GridServiceOptions.Argument(System.String)"/> to override any arguments defined
            in the process descriptor.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Agent.GridServiceOptions.Argument(System.String)">
            <summary>
            Will add a process level argument.
            </summary>
            <param name="argument">argument to add.</param>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Agent.GridServiceOptions.EnvironmentVariable(System.String,System.String)">
            <summary>
            Sets an environment variable that will be passed to forked process.
            </summary>
            <param name="name">variable name.</param>
            <param name="value">variable value.</param>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Agent.GridServiceOptions.Options">
            <summary>
            Gets the agent process options that represents what was set on this process options.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Agent.GSProcessOptions">
            <summary>
            A generic process options.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Agent.GSProcessOptions.#ctor(System.Boolean)">
            <summary>
            For internal use.
            </summary>
            <param name="dynamicProxy">dummy variable to seperate implicit dynamic proxy creation of this object then
            explicit user creation</param>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Agent.GSProcessOptions.#ctor(System.String)">
            <summary>
            Constructs a new grid service options with the given process type. By default, will use JVM to start it.
            </summary>
            <param name="type">process type.</param>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Agent.GSProcessOptions.UseExecutable">
            <summary>		
            Will cause the process to be started using the corresponding executable file
            and not a pure Java process.
            </summary>				
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Agent.GSProcessOptions.Type">
            <summary>
            Gets the process type.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Agent.GSProcessOptions.ExecutableArguments">
            <summary>
            Gets or sets the executable arguments.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Agent.GSProcessOptions.ExecutableAppendableArguments">
            <summary>
            Gets or sets the executable appendable arguments.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Agent.GSProcessOptions.VmArguments">
            <summary>
            Gets or sets the virtual machine arguments.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Agent.GSProcessOptions.VmAppendableArguments">
            <summary>
            Gets or sets the virtual machine appenadable arguments.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Agent.GSProcessOptions.VmInputArguments">
            <summary>
            Gets or sets the virtual machine input arguments.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Agent.GSProcessOptions.VmAppendableInputArguments">
            <summary>
            Gets or sets the virtual machine appenadable input arguments.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Agent.GSProcessOptions.EnvironmentVariables">
            <summary>
            Gets or sets the process environment variables.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Agent.IAgentProcessDetails">
            <summary>
            Provide details of a process which is managed by a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgent"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Agent.IAgentProcessDetails.AgentId">
            <summary>
            Gets the managing <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgent"/> id for this process.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Agent.IAgentProcessDetails.ProcessId">
            <summary>
            Gets the process id.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Agent.IAgentProcessDetails.ServiceType">
            <summary>
            Gets the process service type.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Agent.IAgentProcessDetails.Command">
            <summary>
            Gets the list of command that were used to create the process.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Agent.IAgentProcessDetails.InstantiationMode">
            <summary>
            Gets the instantiation mode of the process.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Agent.IAgentProcessesDetails">
            <summary>
            Provide details of all the processes a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgent"/> is managing.
            
            <seealso cref="T:GigaSpaces.Core.Admin.ServiceGrid.Agent.IAgentProcessDetails"/>
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Agent.IAgentProcessesDetails.AgentServiceID">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgent"/> service id.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Agent.IAgentProcessesDetails.ProcessDetails">
            <summary>
            Gets a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Agent.IAgentProcessDetails"/> list of all the processes this <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgent"/> is managing.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Agent.IAgentProcessesDetails.RequiredGlobalInstances">
            <summary>
            Gets a mapping of configured global instances the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgent"/> was started with.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Agent.LookupServiceOptions">
            <summary>
            <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.LookupService.ILookupService"/> process options to be started by the
            <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgent"/>.
             
            <seealso cref="M:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgent.StartGridService(GigaSpaces.Core.Admin.ServiceGrid.Agent.LookupServiceOptions)"/>
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Agent.LookupServiceOptions.#ctor(System.Boolean)">
            <summary>
            For internal use.
            </summary>
            <param name="dynamicProxy">dummy variable to seperate implicit dynamic proxy creation of this object then
            explicit user creation</param>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Agent.LookupServiceOptions.#ctor">
            <summary>
            Constructs a new lookup service options. By default will use JVM process execution.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Agent.LookupServiceOptions.UseExecutable">
            <summary>
            Will cause the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.LookupService.ILookupService"/> to be started using the corresponding executable file
            and not a pure Java process.
            </summary>		
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Agent.LookupServiceOptions.OverrideVmInputArguments">
            <summary>
            Will cause JVM options added using <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.Agent.LookupServiceOptions.VmInputArgument(System.String)"/> to override all the vm arguments
            that the JVM will start by default with.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Agent.LookupServiceOptions.VmInputArgument(System.String)">
            <summary>
            Will add a JVM level argument when the process is executed using pure JVM. For example, the memory
            can be controlled using <code>-Xmx512m</code>.
            </summary>
            <param name="vmInputArgument">argument to add.</param>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Agent.LookupServiceOptions.EnvironmentVariable(System.String,System.String)">
            <summary>
            Sets an environment variable that will be passed to forked process.
            </summary>
            <param name="name">variable name.</param>
            <param name="value">variable value.</param>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Agent.LookupServiceOptions.Options">
            <summary>
            Gets the agent process options that represents what was set on this GSC options.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Container.GridServiceContainerAddedEventArgs">
            <summary>
            Provides data for <see cref="E:GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainers.GridServiceContainerAdded"/> event.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Container.GridServiceContainerAddedEventArgs.GridServiceContainer">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainer"/> that was added.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Container.GridServiceContainerRemovedEventArgs">
            <summary>
            Provides data for <see cref="E:GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainers.GridServiceContainerRemoved"/> event.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Container.GridServiceContainerRemovedEventArgs.GridServiceContainer">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainer"/> that was removed.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainer">
            <summary>
            A Grid Service Container is a container for <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance"/>s
            allocated to it through the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManager"/> that manages it.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.IAgentGridComponent">
            <summary>
            An Agent grid component is a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.IGridComponent"/> that can be started by a
            <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgent"/>
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.IGridComponent">
            <summary>
            Grid Component is an element that can provide information on the machine it is running one, the transport
            it uses, the Operating system it is running on, and the virtual machine that started it.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.IDiscoverableComponent">
            <summary>
            A discoverable component is a component that is found from the lookup service.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.IDiscoverableComponent.Discovered">
            <summary>
            Returns true if the component is currently discovered from the lookup service.
            false if an event of component removal was sent from the lookup service.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.IAdminAware">
            <summary>
            A general interface implements by elements that can provide access to <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin"/>
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.IAdminAware.Admin">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin"/> associated with this element.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Machine.IMachineAware">
            <summary>
            Allows to get the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Machine.IMachine"/> the component is running on.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Machine.IMachineAware.Machine">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Machine.IMachine"/> the component is running on.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportAware">
            <summary>
            A grid component implements this interface if it can provide information regarding the transport
            it is using.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportAware.Transport">
            <summary>
            Gets the transport the grid component is using.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemAware">
            <summary>
            A grid components that is operating system aware allows to get the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystem"/> that it
            runs within.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemAware.OperatingSystem">
            <summary>
            Gets the operating system the grid component is running within.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineAware">
            <summary>
            A grid component implements this interface allowing to get the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachine"/> it is
            running within.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineAware.VirtualMachine">
            <summary>
            Gets the virtual machine the grid component is running within.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Zones.IZoneAware">
            <summary>
            A grid component implements this interface allowing to get the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Zones.IZone"/>s it is running
            within.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Zones.IZoneAware.Zones">
            <summary>
            Gets the zones the grid component is running within.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.IGridComponent.Uid">
            <summary>
            Gets the unique id of the grid component.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.IAgentGridComponent.Kill">
            <summary>
            Kills the grid component. The Grid Service Agent will not try to start it (as it does when abnormal
            termination of the component occurs).
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.IAgentGridComponent.Restart">
            <summary>
            Restarts the grid component. Completely killing the process of the component, and then starting it
            again.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.IAgentGridComponent.GridServiceAgent">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgent"/> that started the grid component.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.IAgentGridComponent.AgentId">
            <summary>
            Gets the agent id of the component.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Dump.IDumpProvider">
            <summary>
            Elements in the admin API that support dump operations. Allows to generate dump of the given element(s).
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Dump.IDumpProvider.GenerateDump(System.String)">
            <summary>
            Generates dump for all the provided dump processors. <b>Note, this will include a heap dump which
            can consume time and potentially be of very large size</b>                    
            </summary>
            <param name="cause">The cause that this dump was generated</param>        
            <returns>A dump result.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Dump.IDumpProvider.GenerateDump(System.String,System.String[])">
            <summary>
            Generates dump for the provided processors. The current list of processors include:
            <ul>
            <li><b>summary</b>: General summary information of the process.</li>
            <li><b>network</b>: Information on the network layer of the process and the OS network stats.</li>
            <li><b>thread</b>: Thread dump of the process.</li>
            <li><b>heap</b>: Heap dump of the process. <b>Note, this is a heavy operation and can produce very large dump files</b></li>
            <li><b>log</b>: Adds all the log files of the process to the dump file.</li>
            <li><b>processingUnits</b>: Dump of all the processing units (applicable only for GSCs) information.</li>
            </ul>       
            </summary>
            <param name="cause">The cause this dump was generated.</param>        
            <param name="processor">The list of processors to be used.</param>
            <returns>A dump result.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainer.WaitFor(System.Int32)">
            <summary>
            Waits for <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.SetDefaultTimeout(System.TimeSpan)"/> till the provided number of processing unit instances to run within the container.
            </summary>
            <param name="numberOfProcessingUnitInstances">The number of processing unit instances to wait for.</param>
            <returns>true if the number was reached, false if the timeout expired.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainer.WaitFor(System.Int32,System.TimeSpan)">
            <summary>
            Waits for timeout value for the given number of processing unit instances to run within the container.
            </summary>
            <param name="numberOfProcessingUnitInstances">The number of processing unit instances to wait for.</param>
            <param name="timeout">Time to wait.</param>
            <returns>true if the number was reached, false if the timeout expired.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainer.WaitFor(System.String,System.Int32)">
            <summary>
            Waits for <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.SetDefaultTimeout(System.TimeSpan)"/> till the given number of processing unit instances of the specified name to run within the container.
            </summary>
            <param name="processingUnitName">Processing unit name.</param>
            <param name="numberOfProcessingUnitInstances">The number of processing unit instances to wait for.</param>
            <returns>true if the number was reached, false if the timeout expired.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainer.WaitFor(System.String,System.Int32,System.TimeSpan)">
            <summary>
            Waits for timeout value for the given number of processing unit instances of the specified name
            to run within the container. 
            </summary>
            <param name="processingUnitName">Processing unit name.</param>
            <param name="numberOfProcessingUnitInstances">The number of processing unit instances to wait for.</param>
            <param name="timeout">Time to wait.</param>
            <returns>true if the number was reached, false if the timeout expired.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainer.GetProcessingUnitInstances(System.String)">
            <summary>
            Gets the processing unit instances of the specified name that are currently deployed within the grid service
            container.
            </summary>
            <param name="processingUnitName">Processing unit name.</param>
            <returns>Coresponding <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance"/> or null if there's no coresponding processing unit instance running in this container.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainer.Contains(GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance)">
            <summary>
            Returns whether the GSC contains the provided processing unit instance.
            </summary>
            <param name="processingUnitInstance">Processing unit name.</param>
            <returns>Whether the GSC contains the provided processing unit instance.</returns>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainer.ProcessingUnitInstances">
            <summary>
            Gets the processing unit instances that are currently deployed within the grid service container.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainer.ProcessingUnitInstanceAdded">
            <summary>
            Occurs when a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance"/> is added to this container.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainer.ProcessingUnitInstanceRemoved">
            <summary>
            Occurs when a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance"/> is removed from this container.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainers">
             <summary>
             Grid Service Containers hold all the different <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainer"/>s that are currently
             discovered.
            
             Provides simple means to get all the current containers, as well as as registering for
             container lifecycle (added and removed) events.
             </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainers.GetContainerByUID(System.String)">
             <summary>
             Returns a container based on its uid.
            
             <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.IGridComponent.Uid"/>
             </summary>
             <param name="uid"><see cref="P:GigaSpaces.Core.Admin.ServiceGrid.IGridComponent.Uid"/></param>
             <returns>Corresponding <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainer"/>.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainers.WaitFor(System.Int32)">
             <summary>
             Waits for <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.SetDefaultTimeout(System.TimeSpan)"/> till the provided number of containers are up. When passing 0, will
             wait till there are no more grid service containers.
            
             </summary>
             <param name="numberOfGridServiceContainers">The number of containers to wait for</param>
             <returns>true if the required number of containers were discovered, false if the timeout expired.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainers.WaitFor(System.Int32,System.TimeSpan)">
            <summary>
            Waits for the given timeout till the provided number of containers are up. When passing 0, will
            wait till there are no more grid service containers.
            </summary>
            <param name="numberOfGridServiceContainers">The number of containers to wait for</param>
            <param name="timeout">Time to wait.</param>
            <returns>true if the required number of containers were discovered, false if the timeout expired.</returns>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainers.Containers">
            <summary>
            Gets all the currently discovered containers.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainers.Uids">
            <summary>
            Gets a dictionary of grid service container with the key as the uid.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainers.Count">
            <summary>
            Gets the number of currently discovered containers.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainers.IsEmpty">
            <summary>
            States if there are no discovered containers.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainers.GridServiceContainerAdded">
            <summary>
            Occurs when a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainer"/> is added.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainers.GridServiceContainerRemoved">
            <summary>
            Occurs when a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainer"/> is removed.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Dump.DownloadEventArgs">
            <summary>
            Provides data for download progress event.
            <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.Dump.IDumpResult.Download(System.String,System.EventHandler{GigaSpaces.Core.Admin.ServiceGrid.Dump.DownloadEventArgs})"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Dump.DownloadEventArgs.FileName">
            <summary>
            Gets the name of the file that is currently being downloaded.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Dump.DownloadEventArgs.DumpName">
            <summary>
            Gets the dump name.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Dump.DownloadEventArgs.DownloadedBytes">
            <summary>
            Gets the number of bytes downloaded from the last call.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Dump.DownloadEventArgs.DumpProvider">
            <summary>
            Gets the dump provider that initiated this dump.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Dump.IDumpResult">
            <summary>
            A results of a dump operation. Allows to download the dump into a specific file.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Dump.IDumpResult.Download(System.String,System.EventHandler{GigaSpaces.Core.Admin.ServiceGrid.Dump.DownloadEventArgs})">
            <summary>
            Downloads the dump into the target file. Allowing to provide a listener to track the downloading process.
            </summary>
            <param name="target">Target file for the dump file.</param>
            <param name="listener">Listener to track the downloading process.</param>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Dump.IDumpResult.Download(System.String,System.String,System.EventHandler{GigaSpaces.Core.Admin.ServiceGrid.Dump.DownloadEventArgs})">
            <summary>
            Downloads the dump into the target file. Allowing to provide a listener to track the downloading process.
            </summary>
            <param name="targetDirectory">Target directory for the dump file.</param>
            <param name="fileName">File name.</param>
            <param name="listener">Listener to track the downloading process.</param>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Dump.IDumpResult.Name">
            <summary>
            Gets the name of the dump.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Dump.IDumpResult.DownloadSize">
            <summary>
            Gets the download size of the dump.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IBootstrapResult">
            <summary>
            A result of a bootstrap.
            <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGatewaySinkSource.BootstrapFromGatewayAndWait(System.TimeSpan)"/>
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IBootstrapResult.Succeeded">
            <summary>
            Gets whether the bootstrap operation has succeeded.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IBootstrapResult.FailureCause">
            <summary>
            Gets the failure cause for the bootstrap or <code>null</code> if the bootstrap succeeded.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGateway">
            <summary>
            A gateway is a composition of one or more of <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGatewayProcessingUnit"/>s, and it is in charge of 
            replication between different <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace"/>s. e.g. Replication between two sites over WAN.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGateway.WaitFor(System.Int32)">
            <summary>
            Waits for the default timeout specified by <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.SetDefaultTimeout(System.TimeSpan)"/> till 
            at least the provided number of Gateway Processing Unit Instances are up.
            </summary>
            <param name="numberOfGatewayProcessingUnits">Number of gateway processing unit to wait for.</param>
            <returns><code>true</code> if the specified number of gateway processing units are deployed, <code> false</code> otherwise;</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGateway.WaitFor(System.Int32,System.TimeSpan)">
            <summary>
            Waits for the specified timeout (in time interval) till at least the provided number of Gateway Processing Unit Instances are up.         
            </summary>
            <param name="numberOfGatewayProcessingUnits">Number of gateway processing unit to wait for.</param>
            <param name="timeout">Time to wait.</param>
            <returns><code>true</code> if the specified number of gateway processing units are deployed within the specified timeout, <code> false</code> otherwise;</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGateway.WaitForGatewayProcessingUnit(System.String)">
            <summary>
            Waits for the default timeout specified by  <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.SetDefaultTimeout(System.TimeSpan)"/> 
            till the processing unit of this gateway is identified as deployed.
            </summary>
            <param name="processingUnitName">Gateway processing unit name.</param>
            <returns>The matching <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGatewayProcessingUnit"/> or <code>null</code> if the processing unit is not deployed within the default timeout.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGateway.WaitForGatewayProcessingUnit(System.String,System.TimeSpan)">
            <summary>
            Waits for the specified timeout (in time interval) till the processing unit of this gateway is identified as deployed.
            </summary>
            <param name="processingUnitName">Gateway processing unit name.</param>
            <param name="timeout">Time to wait.</param>
            <returns>The matching <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGatewayProcessingUnit"/> or <code>null</code> if the processing unit is not deployed within the specified timeout.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGateway.GetGatewayProcessingUnit(System.String)">
            <summary>
            Gets the gateway processing unit for the given processing unit name.
            </summary>
            <param name="processingUnitName">Gateway processing unit name.</param>
            <returns>Matching deployed gateway processing unit or <code>null</code> if the gateway 
            processing unit is not currently discovered.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGateway.GetSink(System.String)">
            <summary>
            Gets a gateway sink which has a source gateway with the given name. 
            </summary>
            <param name="sourceGatewayName">The source gateway name to look for in a sink.</param>
            <returns>A <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGatewaySink"/> that has a source with the given gateway name or <code>null</code> if the gateway sink is 
            not currently discovered or this gateway has no sink with source gateway with the given name.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGateway.WaitForSink(System.String)">
            <summary>
            Waits for the default timeout specified by <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.SetDefaultTimeout(System.TimeSpan)"/> 
            till the gateway sink with the given source gateway name is identified as deployed.
            </summary>
            <param name="sourceGatewayName">The source gateway name to look for in a sink.</param>
            <returns>A <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGatewaySink"/> that has a source with the given gateway name or <code>null</code> 
            if the sink is not deployed within the default timeout.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGateway.WaitForSink(System.String,System.TimeSpan)">
            <summary>
            Waits for the specified timeout (in time interval) till the gateway sink with the given source gateway name is identified as deployed.
            </summary>
            <param name="sourceGatewayName">The source gateway name to look for in a sink.</param>
            <param name="timeout">Time to wait.</param>
            <returns>A <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGatewaySink"/> that has a source with the given gateway name or <code>null</code> 
            if the sink is not deployed within the specified timeout.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGateway.GetSinkSource(System.String)">
            <summary>
            Gets a sink source gateway with the given name.
            </summary>
            <param name="sourceGatewayName">The source gateway name to look for.</param>
            <returns>A <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGatewaySinkSource"/> for the given gateway name or <code>null</code> 
            if the sink source is not currently discovered or this gateway has no sink with source gateway with the given name.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGateway.WaitForSinkSource(System.String)">
            <summary>
            Waits for the default timeout specified by <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.SetDefaultTimeout(System.TimeSpan)"/> till 
            the gateway sink with the given source gateway name is identified as deployed. 
            </summary>
            <param name="sourceGatewayName">The source gateway name to look for.</param>
            <returns><see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGatewaySinkSource"/> for the given gateway name or <code>null</code> 
            if the sink source is not deployed within the default timeout.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGateway.WaitForSinkSource(System.String,System.TimeSpan)">
            <summary>
            Waits for the specified timeout (in time interval) till 
            the gateway sink with the given source gateway name is identified as deployed.
            </summary>
            <param name="sourceGatewayName">The source gateway name to look for.</param>
            <param name="timeout">Time to wait.</param>
            <returns><see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGatewaySinkSource"/> for the given gateway name or <code>null</code> 
            if the sink source is not deployed within the specified timeout.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGateway.GetDelegator(System.String)">
            <summary>
            Gets a gateway delegator which has a target gateway with the given name. 
            </summary>
            <param name="targetGatewayName">The target gateway name.</param>
            <returns><see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGatewayDelegator"/> which has a target gateway with the given name or <code>null</code> if the gateway delegator is 
            not currently discovered or this gateway has no target with target gateway with the given name.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGateway.WaitForDelegator(System.String)">
            <summary>
            Waits for the default timeout specified by <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.SetDefaultTimeout(System.TimeSpan)"/> till 
            the gateway delegator with the given target gateway name is identified as deployed.
            </summary>
            <param name="targetGatewayName">The target gateway name.</param>
            <returns><see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGatewayDelegator"/> which has a target gateway with the given name or <code>null</code> 
            if the delegator target is not deployed within the default timeout.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGateway.WaitForDelegator(System.String,System.TimeSpan)">
            <summary>
            Waits for the specified timeout (in time interval) till 
            the gateway delegator with the given target gateway name is identified as deployed.
            </summary>
            <param name="targetGatewayName">The target gateway name.</param>
            <param name="timeout">Time to wait.</param>
            <returns><see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGatewayDelegator"/> which has a target gateway with the given name or <code>null</code> 
            if the delegator target is not deployed within the specified timeout.</returns>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGateway.GatewayProcessingUnits">
            <summary>
            Gets all the currently deployed <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGatewayProcessingUnit"/>s.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGateway.Name">
            <summary>
            Gets the name which is used by the other gateways to locate this gateway.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGateway.Names">
            <summary>
            Gets a map of <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGatewayProcessingUnit"/> keyed by their respective names.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGateway.Count">
            <summary>
            Gets the number of deployed <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGatewayProcessingUnit"/>s which are part of this gateway.  
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGateway.IsEmpty">
            <summary>
            States if there are no discovered <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGatewayProcessingUnit"/>s which are part of this gateway.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGatewayDelegator">
            <summary>
            A gateway delegator is used to delegate outgoing replication packets to other gateways. Acts as a communication connector such that a local space 
            and relevant components need only to find the delegator locally in order to communicate with a remote gateway.
            Delegators can be chained together to create a multi-hop delegation between gateways. 
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGatewayDelegator.ContainsTarget(System.String)">
            <summary>
            Check whether this delegator has a target gateway with the specified gateway.
            </summary>
            <param name="targetGatewayName">Target gateway name.</param>
            <returns><code>true</code> if this delegator has a target gateway with the specified name; <code>false</code> otherwise.</returns>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGatewayDelegator.GatewayProcessingUnit">
            <summary>
            Gets the gateway this sink is part of.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGatewayDelegator.DelegationTargets">
            <summary>
            Gets all the delegation targets of this delegator. 
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGatewayDelegatorTarget">
            <summary>
            Represents a single delegation target
            <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGatewayDelegator"/>
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGatewayDelegatorTarget.Delegator">
            <summary>
            Gets the delegator this delegation target is part of. 
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGatewayDelegatorTarget.TargetGatewayName">
            <summary>
            Gets the delegated target gateway name.
            </summary>        
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGatewayDelegatorTarget.DelegateThroughOtherGateway">
            <summary>
            Gets whether the delegation is done via another delegator or if this delegator is connected
            directly to the target gateway. 
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGatewayDelegatorTarget.DelegateThroughGatewayName">
            <summary>
            Gets the name of the gateway delegator this delegator is connected to which routes communication to the target gateway. If this
            delegator is connected directly to the target gateway it will return <code>null</code>.
            <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGatewayDelegatorTarget.DelegateThroughOtherGateway"/>
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGatewayProcessingUnit">
            <summary>
            A Gateway Processing unit is the building block of a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGateway"/>. 
            It has one to one relationship with deployed <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit"/> which hosts this gateway component.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGatewayProcessingUnit.Gateway">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGateway"/> this gateway processing unit belongs to.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGatewayProcessingUnit.ProcessingUnit">
            <summary>
            Gets the hosting <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGatewayProcessingUnit.Sink">
            <summary>
            Gets the sink of this gateway or <code>null</code> if no sink exists in this gateway. 
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGatewayProcessingUnit.Delegator">
            <summary>
            Gets the delegator of this gateway or <code>null</code> if no delegator exists in this gateway.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGateways">
            <summary>
            Gateways holds all the different <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGateway"/>s that are currently discovered.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGateways.GetGateway(System.String)">
            <summary>
            Returns the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGateway"/> for the given gateway name. Returns <code>null</code> if the gateway
            is not currently discovered.
            </summary>
            <param name="gatewayName">The name of the desired gateway.</param>
            <returns><see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGateway"/> matching the given name.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGateways.WaitFor(System.String)">
            <summary>
            Waits for the default timeout specified by  <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.SetDefaultTimeout(System.TimeSpan)"/> till the gateway is identified as deployed. 
            </summary>
            <param name="gatewayName">The name of the desired gateway</param>
            <returns><see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGateway"/> matching the given name or <code>null</code> if the gateway is not deployed.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGateways.WaitFor(System.String,System.TimeSpan)">
            <summary>
            Waits for the specified timeout (in time interval) till the gateway is identified as deployed.
            </summary>
            <param name="gatewayName">The name of the desired gateway.</param>
            <param name="timeout">Time to wait.</param>
            <returns><see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGateway"/> matching the given name or <code>null</code> if the gateway is not deployed within the specified timeout.</returns>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGateways.Gateways">
            <summary>
            Gets all the currently discovered gateways. 
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGateways.Names">
            <summary>
            Gets a map of <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGateway"/> keyed by their respective names.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGateways.Count">
            <summary>
            Gets the number of currently discovered gateways.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGateways.IsEmpty">
            <summary>
            States if there are no discovered gateways.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGatewaySink">
            <summary>
            A sink is a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGatewayProcessingUnit"/> component which handles incoming replication from other gateways.
            The sink is also used to bootstrap a space from another space, and it takes part in both sides of the
            bootstrap process. It is used for initiating a bootstrap process and replicate incoming data of the
            bootstrap process to the local <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace"/>. 
            And it is used to respond to a remote bootstrap request by providing the relevant bootstrap data
            to the remote sink.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGatewaySink.EnableIncomingReplication">
            <summary>
            Enables incoming replication for this sink, only relevant if this sink <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGatewaySink.RequiresBootstrapOnStartup"/>
            and no bootstrap was executed yet, otherwise the sink incoming replication is already enabled. 
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGatewaySink.ContainsSource(System.String)">
            <summary>
            Returns <code>true</code> if this sink has a source gateway with the specified name; <code>false</code> otherwise.
            </summary>
            <param name="sourceGatewayName">The source gateway name to look for.</param>
            <returns><code>true</code> if this sink has a source gateway with the specified name; <code>false</code> otherwise.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGatewaySink.GetSourceByName(System.String)">
            <summary>
            Gets a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGatewaySinkSource"/> for the specified gateway name.
            </summary>
            <param name="sourceGatewayName">Source gateway name to look for.</param>
            <returns><see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGatewaySinkSource"/> for the specified gateway name or null if none exists.</returns>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGatewaySink.GatewayProcessingUnit">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGatewayProcessingUnit"/> this sink is part of.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGatewaySink.Sources">
            <summary>
            Gets the gateway sink sources of this sink. 
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGatewaySink.RequiresBootstrapOnStartup">
            <summary>
            Gets whether this sink is configured to require a bootstrap on startup.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGatewaySink.LocalSpaceUrl">
            <summary>
            Gets the url of the space this sink is replicating in to. 
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGatewaySinkSource">
            <summary>
            A sink source is the target end point of a remote <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGateway"/> which is replicating into this gateway's sink.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGatewaySinkSource.BootstrapFromGatewayAndWait">
            <summary>
            Bootstrap the local <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace"/> which is associated to this sink from a remote space.
            This bootstrap request will use default timeout set by <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.SetDefaultTimeout(System.TimeSpan)"/>
            A bootstrap request can only be executed if this sink <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGatewaySink.RequiresBootstrapOnStartup"/>.
            </summary>
            <returns>Bootstrap result</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGatewaySinkSource.BootstrapFromGatewayAndWait(System.TimeSpan)">
            <summary>
            Bootstrap the local <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace"/> which is associated to this sink from a remote space.
            This bootstrap request will use provided timeout.
            A bootstrap request can only be executed if this sink <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGatewaySink.RequiresBootstrapOnStartup"/>.
            </summary>
            <param name="timeout">Time to wait.</param>
            <returns>Bootstrap result</returns>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGatewaySinkSource.Sink">
            <summary>
            Gets the sink this source is part of.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Gateway.IGatewaySinkSource.SourceGatewayName">
            <summary>
            Gets the name of the remote gateway which this source acts as its end point.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgent">
            <summary>
            A Grid Service Agent is a process manager allowing to start and stop (on the operating system process level)
            processes (such as <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManager"/> , <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainer"/>
            and <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.LookupService.ILookupService"/>. It can also globally manage certain process type (a process type
            is a GSM for example), which means that when running X number of Grid Service Agents, at least N processes will
            run between them.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgent.StartGridService(GigaSpaces.Core.Admin.ServiceGrid.Agent.GridServiceManagerOptions)">
            <summary>
            Starts a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManager"/> based on the provided options.
            </summary>
            <param name="options">GSM options.</param>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgent.StartGridServiceAndWait(GigaSpaces.Core.Admin.ServiceGrid.Agent.GridServiceManagerOptions)">
            <summary>
            Starts a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManager"/> based on the provided options and waits
            for <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.SetDefaultTimeout(System.TimeSpan)"/> until it is discovered by the admin, which is then returned.
            </summary>
            <param name="options">GSM options.</param>
            <returns>Started <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManager"/> or null if timeout elapsed.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgent.StartGridServiceAndWait(GigaSpaces.Core.Admin.ServiceGrid.Agent.GridServiceManagerOptions,System.TimeSpan)">
            <summary>
            Starts a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManager"/> based on the provided options and waits
            for the given timeout until it is discovered by the admin, which is then returned.
            </summary>
            <param name="options">GSM options.</param>
            <param name="timeout">Time to wait.</param>
            <returns>Started <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManager"/> or null if timeout elapsed.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgent.StartGridService(GigaSpaces.Core.Admin.ServiceGrid.Agent.GridServiceContainerOptions)">
            <summary>
            Starts a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainer"/> based on the provided options.
            </summary>
            <param name="options">GSC options.</param>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgent.StartGridServiceAndWait(GigaSpaces.Core.Admin.ServiceGrid.Agent.GridServiceContainerOptions)">
            <summary>
            Starts a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainer"/> based on the provided options and waits
            for <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.SetDefaultTimeout(System.TimeSpan)"/> until it is discovered by the admin, which is then returned.
            </summary>
            <param name="options">GSC options.</param>
            <returns>Started <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainer"/> or null if timeout elapsed.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgent.StartGridServiceAndWait(GigaSpaces.Core.Admin.ServiceGrid.Agent.GridServiceContainerOptions,System.TimeSpan)">
            <summary>
            Starts a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainer"/> based on the provided options and waits
            for the given timeout until it is discovered by the admin, which is then returned.
            </summary>
            <param name="options">GSC options.</param>
            <param name="timeout">Time to wait.</param>
            <returns>Started <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainer"/> or null if timeout elapsed.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgent.StartGridService(GigaSpaces.Core.Admin.ServiceGrid.Agent.LookupServiceOptions)">
            <summary>
            Starts a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.LookupService.ILookupService"/> based on the provided options.
            </summary>
            <param name="options">LUS options.</param>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgent.StartGridServiceAndWait(GigaSpaces.Core.Admin.ServiceGrid.Agent.LookupServiceOptions)">
            <summary>
            Starts a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.LookupService.ILookupService"/> based on the provided options and waits
            for <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.SetDefaultTimeout(System.TimeSpan)"/> until it is discovered by the admin, which is then returned.
            </summary>
            <param name="options">LUS options.</param>
            <returns>Started <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.LookupService.ILookupService"/> or null if timeout elapsed.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgent.StartGridServiceAndWait(GigaSpaces.Core.Admin.ServiceGrid.Agent.LookupServiceOptions,System.TimeSpan)">
            <summary>
            Starts a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.LookupService.ILookupService"/> based on the provided options and waits
            for the given timeout until it is discovered by the admin, which is then returned.
            </summary>
            <param name="options">LUS options.</param>
            <param name="timeout">Time to wait.</param>
            <returns>Started <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.LookupService.ILookupService"/> or null if timeout elapsed.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgent.StartGridService(GigaSpaces.Core.Admin.ServiceGrid.Agent.GridServiceOptions)">
            <summary>
            Starts a generic process of a given type.
            </summary>
            <param name="options">Process options.</param>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgent.Shutdown">
            <summary>
            Shuts down the GSA.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgent.ProcessesDetails">
            <summary>
            Gets all the processes details this agent is currently running.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgents">
             <summary>
             Grid Service Agents hold all the different <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgent"/> that are currently
             discovered.
            
             Provides simple means to get all the current agents, as well as as registering for
             agent lifecycle (added and removed) events.
             </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgents.GetAgentByUID(System.String)">
            <summary>
            Returns an agent based on its uid.
            </summary>
            <param name="uid">Agent's uid.</param>
            <returns>Coresponding <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgent"/>.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgents.WaitForAtLeastOne">
            <summary>
            Waits for <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.SetDefaultTimeout(System.TimeSpan)"/> till at least one agent is discovered.
            </summary>
            <returns>discovered <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgent"/> or null if timeout elapsed.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgents.WaitForAtLeastOne(System.TimeSpan)">
            <summary>
            Waits for the given timeout till at least one agent is discovered.
            </summary>
            <param name="timeout">Time to wait.</param>
            <returns>discovered <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgent"/> or null if timeout elapsed.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgents.WaitFor(System.Int32)">
            <summary>
            Waits for <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.SetDefaultTimeout(System.TimeSpan)"/> till the provided number of agents are up.		 		 
            </summary>
            <param name="numberOfAgents">The number of agents to wait for.</param>
            <returns>true if the required number of agents were discovered, false if the timeout expired.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgents.WaitFor(System.Int32,System.TimeSpan)">
            <summary>
            Waits for the given timeout till the provided number of agents are up.
            </summary>
            <param name="numberOfAgents">The number of agents to wait for.</param>
            <param name="timeout">Time to wait.</param>
            <returns>true if the required number of agents were discovered, false if the timeout expired.</returns>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgents.Agents">
            <summary>
            Gets all the currently discovered agents.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgents.Uids">
            <summary>
            Gets a dictionary of grid service agent with the key as the uid.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgents.HostAddress">
            <summary>
            Gets a dictionary of grid service agent with the key as the host address it is running on.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgents.HostNames">
            <summary>
            Gets a dictionary of grid service agent with the key as the host name it is running on.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgents.Count">
            <summary>
            Gets the number of agents current discovered.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgents.IsEmpty">
            <summary>
            Gets if there are no agents.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgents.GridServiceAgentAdded">
            <summary>
            Occurs when a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgent"/> is added.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgents.GridServiceAgentRemoved">
            <summary>
            Occurs when a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgent"/> is removed.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin">
             <summary>
             The main interface for accessing Service Grid Admin API. Created using the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ServiceGridAdminBuilder"/>
             class.
            
             Provides access to the main elements in the Service Grid Admin API and in GigaSpaces such as the
             <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgents"/>, <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.LookupService.ILookupServices"/>,
             <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManagers"/>, <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainers"/>,
             <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnits"/>, and <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaces"/>.
            
             Also allows to change monitoring (not statistics) interval (works in a polling fashion) of state changing
             elements such as the processing unit, the Grid Service Agent, and the Space.
            
             Implements the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.IStatisticsMonitor"/> interface, allowing in one single
             call (<see cref="M:GigaSpaces.Core.Admin.ServiceGrid.IStatisticsMonitor.StartStatisticsMonitor"/>) to start statistics monitors on all the elements it manages (such as
             the {<see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaces"/>}, and <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachines"/>.
             </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.IStatisticsMonitor">
            <summary>
            Components implement this interface indicating that they can be monitored for statistics.
            Components will allow to get their respective statistics without being monitoring (while caching
            the calls for the provided statistics interval).
            Monitoring statistics is only required when wanting to receive statistics change events.
            The statistics interval controls either for how long the latest statistics call will be cached, or,
            when monitoring is enabled, the interval the statistics will be pooled. Its default value is 5 seconds.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.IStatisticsMonitor.SetStatisticsInterval(System.TimeSpan)">
            <summary>
            Sets the statistics interval, automatically updating the monitoring scheduled tasks if
            monitoring is enabled.
            </summary>
            <param name="interval">Specify the statistics sampling interval.</param>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.IStatisticsMonitor.SetStatisticsHistorySize(System.Int32)">
            <summary>
            Sets the number of history statistics record to store.
            </summary>
            <param name="historySize">Number of history statistics record to store.</param>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.IStatisticsMonitor.StartStatisticsMonitor">
            <summary>
            Starts the statistics monitor, starting a scheduled monitor that polls for statistics. Monitoring
            is required only when wanting to receive statistics change events.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.IStatisticsMonitor.StopStatisticsMonitor">
            <summary>
            Stops the statistics monitor.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.IStatisticsMonitor.Monitoring">
            <summary>
            Gets whether statistics are currently being monitored.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.SetProcessingUnitMonitorInterval(System.TimeSpan)">
            <summary>
            Sets the processing unit monitor (not statistics) interval. The monitor basically
            checks the status of each processing unit (<see cref="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.Status"/>}
            among other things.     
            
            Defaults to 1 second.
            </summary>
            <param name="interval">The interval to use.</param>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.SetAgentProcessessMonitorInterval(System.TimeSpan)">
             <summary>
             Sets the Grid Service Agent processes monitor (not statistics) interval. The monitor
             basically updates the list of processes the agent manages (<see cref="P:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgent.ProcessesDetails"/>).
            
             Defaults to 5 seconds.		
             </summary>
             <param name="interval">The interval to use.</param>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.SetSpaceMonitorInterval(System.TimeSpan)">
             <summary>
             Sets the Space monitor (not statistics) interval. The monitor checks each space instance and updates
             its different status (such as the replication status).
            
             Defaults to 1 second.
             </summary>
             <param name="interval">The interval to use.</param>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.SetSchedulerCorePoolSize(System.Int32)">
            <summary>
             The Admin uses a shared scheduler thread pool to perform *all* scheduled operations (monitoring,
            statistics monitoring). The number of threads used can be set here.     
            Defaults to 10 threads.    
            </summary>
            <param name="coreThreads">The number of threads the shared scheduler thread pool will use.</param>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.SetDefaultTimeout(System.TimeSpan)">
            <summary>
            The default timeout to be used for operations that have a wait for mechanism, i.e. operations
            with overloaded methods containing (..., TimeSpan timeout). If not set, the
            default is wait for ever.
            </summary>
            <param name="timeout">The timeout value to be used as the default operation timeout if non was provided.</param>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.Groups">
            <summary>
            Gets the lookup groups this admin uses.
            <seealso cref="P:GigaSpaces.Core.Admin.ServiceGrid.ServiceGridAdminBuilder.Groups"/>
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.Locators">
            <summary>
            Gets the lookup locators this admin uses.
            <seealso cref="P:GigaSpaces.Core.Admin.ServiceGrid.ServiceGridAdminBuilder.Locators"/>
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.GridServiceAgents">
            <summary>
            Gets the discovered grid service agents.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.LookupServices">
            <summary>
            Gets the discovered lookup services
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.GridServiceManagers">
            <summary>
            Gets the discovered service managers.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.GridServiceContainers">
            <summary>
            Gets the discovered containers.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.Machines">
            <summary>
            Gets the discovered machines.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.Zones">
            <summary>
            Gets the discovered zones.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.Transports">
            <summary>
            Gets the discovered transports.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.VirtualMachines">
            <summary>
            Gets the discovered virtual machines.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.OperatingSystems">
            <summary>
            Gets the discovered operating systems.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.ProcessingUnits">
            <summary>
            Gets the discovered processing units.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.Spaces">
            <summary>
            Gets the discovered spaces.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.Gateways">
            <summary>
            Gets the discovered gateways.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.LookupService.ILookupLocator">
            <summary>
            Details of a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.LookupService.ILookupService"/> locator.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.LookupService.ILookupLocator.Port">
            <summary>
            Gets the locator's port.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.LookupService.ILookupLocator.Host">
            <summary>
            Gets the locator's host.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.LookupService.ILookupService">
            <summary>
            A lookup service acts a lookup server where different grid components register and maintain
            a lease against. It provides the ability to discover these grid components.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.LookupService.ILookupService.LookupGroups">
            <summary>
            Gets the lookup groups this lookup service is associated to.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.LookupService.ILookupService.LookupLocator">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.LookupService.ILookupLocator"/> of this lookup service.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.LookupService.ILookupServices">
             <summary>
             Lookup Services hold all the different <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.LookupService.ILookupService"/>s that are currently
             discovered.
            
             Provides simple means to get all the current lus, as well as as registering for
             lus lifecycle (added and removed) events.
             </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.LookupService.ILookupServices.GetLookupServiceByUID(System.String)">
             <summary>
             Returns a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.LookupService.ILookupService"/> based on its uid.
            
             <seealso cref="P:GigaSpaces.Core.Admin.ServiceGrid.IGridComponent.Uid"/>
             </summary>
             <param name="id"><see cref="T:GigaSpaces.Core.Admin.ServiceGrid.LookupService.ILookupService"/> uid.</param>
             <returns>Corresponding <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.LookupService.ILookupService"/>.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.LookupService.ILookupServices.WaitFor(System.Int32)">
            <summary>
            Waits for <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.SetDefaultTimeout(System.TimeSpan)"/> till the provided number of lookup services are up.
            </summary>
            <param name="numberOfLookupServices">The number of lookup services to wait for.</param>
            <returns>true if the required number of lookup services were discovered, false if the timeout expired.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.LookupService.ILookupServices.WaitFor(System.Int32,System.TimeSpan)">
            <summary>
            Waits for the given timeout till the provided number of lookup services are up.
            </summary>
            <param name="numberOfLookupServices">The number of lookup services to wait for.</param>
            <param name="timeout">Time to wait.</param>
            <returns>true if the required number of lookup services were discovered, false if the timeout expired.</returns>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.LookupService.ILookupServices.LookupServices">
            <summary>
            Gets all the currently discovered <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.LookupService.ILookupService"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.LookupService.ILookupServices.Uids">
            <summary>
            Gets a dictionary of lookup service with the key as the uid.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.LookupService.ILookupServices.Count">
            <summary>
            Gets the number of currently discovered lookup services.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.LookupService.ILookupServices.IsEmpty">
            <summary>
            States if there are no discovered lookup services.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.LookupService.ILookupServices.LookupServiceAdded">
            <summary>
            Occurs when a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.LookupService.ILookupService"/> is added.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.LookupService.ILookupServices.LookupServiceRemoved">
            <summary>
            Occurs when a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.LookupService.ILookupService"/> is removed.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.LookupService.IServiceId">
            <summary>
            A universally unique identifier (UUID) for registered services.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.LookupService.IServiceId.MostSignificantBits">
            <summary>
            Gets the most significant 64 bits of the service Id. 
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.LookupService.IServiceId.LeastSignificantBits">
            <summary>
            Gets the least significant 64 bits of the service Id. 
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.LookupService.LookupServiceAddedEventArgs">
            <summary>
            Provides data for <see cref="E:GigaSpaces.Core.Admin.ServiceGrid.LookupService.ILookupServices.LookupServiceAdded"/> event.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.LookupService.LookupServiceAddedEventArgs.LookupService">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.LookupService.ILookupService"/> that was added.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.LookupService.LookupServiceRemovedEventArgs">
            <summary>
            Provides data for <see cref="E:GigaSpaces.Core.Admin.ServiceGrid.LookupService.ILookupServices.LookupServiceRemoved"/> event.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.LookupService.LookupServiceRemovedEventArgs.LookupService">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.LookupService.ILookupService"/> that was removed.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Machine.IMachine">
            <summary>
            A Machine is a logical entity identified by a host address. Once a grid service is running on a machine
            (<see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgent"/>, <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManager"/>,
            <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainer"/>, <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.LookupService.ILookupService"/>,
            <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstance"/>) it is discovered (created) by the admin API.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Machine.IMachine.GetProcessingUnitInstances(System.String)">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance"/> of the specified name that are currently deployed on the machine.
            </summary>
            <param name="processingUnitName">processing unit name.</param>
            <returns>the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance"/> of the specified name that are currently deployed on the machine.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Machine.IMachine.Contains(GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance)">
            <summary>
            Returns true if the processing unit instance exists within the machine.
            </summary>
            <param name="processingUnitInstance">The processing unit instance to locate.</param>
            <returns>true if the processing unit instance exists within the machine.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Machine.IMachine.Contains(GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstance)">
            <summary>
            Returns true if the machine contains the provided space instance.
            </summary>
            <param name="spaceInstance">The space instance to locate.</param>
            <returns>true if the machine contains the provided space instance.</returns>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Machine.IMachine.Uid">
            <summary>
            Gets the UID of the machine.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Machine.IMachine.HostAddress">
            <summary>
            Gets the host address of the machine.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Machine.IMachine.HostName">
            <summary>
            Gets the host name of the machine.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Machine.IMachine.LookupServices">
            <summary>
            Gets the lookup services that are running on the machine.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Machine.IMachine.GridServiceAgent">
            <summary>
            Gets the first <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgent"/>. Note, there will usually be only a
            single agent per machine. Returns null if there is no
            <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgent"/> running on the machine.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Machine.IMachine.GridServiceAgents">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgents"/> running on the machine.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Machine.IMachine.GridServiceManagers">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManagers"/> running on the machine.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Machine.IMachine.GridServiceContainers">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainers"/> running on the machine.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Machine.IMachine.OperatingSystem">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystem"/> of the machine.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Machine.IMachine.VirtualMachines">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachines"/> running on the machine.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Machine.IMachine.HasGridComponents">
            <summary>
            Gets whether there are grid components.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Machine.IMachine.Transports">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransports"/> "running" on the machine.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Machine.IMachine.ProcessingUnitInstances">
            <summary>
            Gets all the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance"/>s running on the machine.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.Machine.IMachine.ProcessingUnitInstanceAdded">
            <summary>
            Occurs when a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance"/> is deployed to this machine.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.Machine.IMachine.ProcessingUnitInstanceRemoved">
            <summary>
            Occurs when a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance"/> is undeployed from this machine.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Machine.IMachine.SpaceInstances">
            <summary>
            Gets all the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstance"/>s running on the machine.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.Machine.IMachine.SpaceInstanceAdded">
            <summary>
            Occurs when a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstance"/> instance is deployed to this machine
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.Machine.IMachine.SpaceInstanceRemoved">
            <summary>
            Occurs when a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstance"/> instance is undeployed from this machine
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Machine.IMachines">
            <summary>
            Machines hold all the different <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Machine.IMachine"/>s that are currently
            discovered.
            Provides simple means to get all the current machines, as well as as registering for
            machine lifecycle (added and removed) events.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Machine.IMachines.GetMachineByHostAddress(System.String)">
            <summary>
            Returns the machine by the host address.
            </summary>
            <param name="hostAddress">The host address to lookup the machine by.</param>
            <returns>The machine correlated to the specified host address, null if there is no one</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Machine.IMachines.GetMachineByHostName(System.String)">
            <summary>
            Returns the machine by the host name.
            </summary>
            <param name="hostName">The host name to lookup the machine by.</param>
            <returns>The machine correlated to the specified host name, null if there is no one</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Machine.IMachines.WaitFor(System.Int32)">
            <summary>
            Waits for <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.SetDefaultTimeout(System.TimeSpan)"/> till the provided number of machines are up.
            </summary>
            <param name="numberOfMachines">The number of containers to wait for.</param>
            <returns>true if the required number of machines were discovered, false if the timeout expired.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Machine.IMachines.WaitFor(System.Int32,System.TimeSpan)">
            <summary>
            Waits for the given timeout till the provided number of machines are up.
            </summary>
            <param name="numberOfMachines">The number of containers to wait for.</param>
            <param name="timeout">Time to wait.</param>
            <returns>true if the required number of machines were discovered, false if the timeout expired.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Machine.IMachines.WaitFor(System.String)">
            <summary>
            Waits for <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.SetDefaultTimeout(System.TimeSpan)"/> till the machine with the given host (name/address) is discovered.
            </summary>
            <param name="host">The machine host name or address.</param>
            <returns>The machine discovered, ornull if it was not discovered within the provided timeout.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Machine.IMachines.WaitFor(System.String,System.TimeSpan)">
            <summary>
            Waits for the given timeout till the machine with the given host (name/address) is discovered.
            </summary>
            <param name="host">The machine host name or address.</param>
            <param name="timeout">Time to wait.</param>
            <returns>The machine discovered, ornull if it was not discovered within the provided timeout.</returns>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Machine.IMachines.Machines">
            <summary>
            Gets all currently discovered machines.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Machine.IMachines.Uids">
            <summary>
            Gets a map of machines with the key as the uid.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Machine.IMachines.HostsByAddress">
            <summary>
            Gets a map of machines by host address.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Machine.IMachines.HostsByName">
            <summary>
            Gets a map of machines by host names.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Machine.IMachines.Count">
            <summary>
            Gets the number of machines currently discovered.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Machine.IMachines.IsEmpty">
            <summary>
            Gets whether there are no machines.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.Machine.IMachines.MachineAdded">
            <summary>
            Occurs when a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Machine.IMachine"/> is added.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.Machine.IMachines.MachineRemoved">
            <summary>
            Occurs when a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Machine.IMachine"/> is removed.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Machine.MachineAddedEventArgs">
            <summary>
            Provides data for <see cref="E:GigaSpaces.Core.Admin.ServiceGrid.Machine.IMachines.MachineAdded"/> event.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Machine.MachineAddedEventArgs.Machine">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Machine.IMachine"/> that was added.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Machine.MachineRemovedEventArgs">
            <summary>
            Provides data for <see cref="E:GigaSpaces.Core.Admin.ServiceGrid.Machine.IMachines.MachineRemoved"/> event.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Machine.MachineRemovedEventArgs.Machine">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Machine.IMachine"/> that was removed.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Manager.GridServiceManagerAddedEventArgs">
            <summary>
            Provides data for <see cref="E:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManagers.GridServiceManagerAdded"/> event.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Manager.GridServiceManagerAddedEventArgs.GridServiceManager">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManager"/> that was added.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Manager.GridServiceManagerRemovedEventArgs">
            <summary>
            Provides data for <see cref="E:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManagers.GridServiceManagerRemoved"/> event.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Manager.GridServiceManagerRemovedEventArgs.GridServiceManager">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManager"/> that was removed.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManager">
            <summary>
            A Grid Service Manager is a manager for <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit"/> deployments
            (acting either as primary or backups for a certain processing unit deployment). It also knows
            which <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainer"/>s are around to be able to create
            <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance"/> on them.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManager.Deploy(GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitDeployment)">
            <summary>
            Deploys a processing unit based on the processing unit deployment information on the given grid
            service manager (it will act as the primary GSM for the deployed processing unit).		
            The deployment process will wait for <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.SetDefaultTimeout(System.TimeSpan)"/> and return the actual processing unit that can be used
            or null if the timeout elapsed.
            </summary>
            <param name="deployment">Processing unit deployment details.</param>
            <returns>Deployed processing unit or null if the timeout elapsed.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManager.Deploy(GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitDeployment,System.TimeSpan)">
            <summary>
            Deploys a processing unit based on the processing unit deployment information on the given grid
            service manager (it will act as the primary GSM for the deployed processing unit).		
            The deployment process will wait for the specified timeout and return the actual processing unit that can be used
            or null if the timeout elapsed.
            </summary>
            <param name="deployment">Processing unit deployment details.</param>
            <param name="timeout">The time to wait.</param>
            <returns>Deployed processing unit or null if the timeout elapsed.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManager.Deploy(GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceDeployment)">
            <summary>
            Deploys a space based on the space deployment information on the given grid
            service manager (it will act as the primary GSM for the deployed processing unit).		
            The deployment process will wait for <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.SetDefaultTimeout(System.TimeSpan)"/> and return the actual processing unit that can be used
            or null if the timeout elapsed.
            Note, deploying just a space is simply deploying a built in processing unit that starts
            just an embedded space.
            </summary>
            <param name="deployment">Space deployment details.</param>
            <returns>Deployed processing unit that contains the space or null if the timeout elapsed.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManager.Deploy(GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceDeployment,System.TimeSpan)">
            <summary>
            Deploys a space based on the space deployment information on the given grid
            service manager (it will act as the primary GSM for the deployed processing unit).		
            The deployment process will wait for the specified timeout and return the actual processing unit that can be used
            or null if the timeout elapsed.
            Note, deploying just a space is simply deploying a built in processing unit that starts
            just an embedded space.
            </summary>
            <param name="deployment">Space deployment details.</param>
            <param name="timeout">The time to wait.</param>
            <returns>Deployed processing unit that contains the space or null if the timeout elapsed.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManager.Deploy(GigaSpaces.Core.Admin.ServiceGrid.Memcached.MemcachedDeployment)">
            <summary>
            Deploys a memcached based on the space deployment information on the given grid
            service manager (it will act as the primary GSM for the deployed processing unit).     
            The deployment process will wait for <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.SetDefaultTimeout(System.TimeSpan)"/> and return the actual processing unit that can be used
            or null if the timeout elapsed.
            Note, deploying just a memcached is simply deploying a built in processing unit that starts / connects
            to a space (holding the memcached entries) and exposing the memcached protocol.
            </summary>
            <param name="deployment">Memcached deployment details.</param>
            <returns>Deployed memcached processing unit or null if the timeout elapsed.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManager.Deploy(GigaSpaces.Core.Admin.ServiceGrid.Memcached.MemcachedDeployment,System.TimeSpan)">
            <summary>
            Deploys a memcached based on the space deployment information on the given grid
            service manager (it will act as the primary GSM for the deployed processing unit).     
            The deployment process will wait for the specified timeout and return the actual processing unit that can be used
            or null if the timeout elapsed.
            Note, deploying just a memcached is simply deploying a built in processing unit that starts / connects
            to a space (holding the memcached entries) and exposing the memcached protocol.
            </summary>
            <param name="deployment">Memcached deployment details.</param>
            <param name="timeout">The time to wait.</param>
            <returns>Deployed memcached processing unit.</returns>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManagers">
             <summary>
             Grid Service Managers hold all the different <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManager"/>s that are currently
             discovered.
            
             Provides simple means to get all the current managers, as well as as registering for
             manager lifecycle (added and removed) events.
            
             Also provides the ability to deploy a processing unit or a space (which is also a processing unit,
             that simply just starts a space) on a randomly selected GSM (for more control on which manager to deploy 
             <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManager.Deploy(GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitDeployment)"/> can be used.
             </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManagers.GetManagerByUID(System.String)">
             <summary>
             Returns a manager based on its uid.
            
             <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.IGridComponent.Uid"/>
             </summary>
             <param name="uid"><see cref="P:GigaSpaces.Core.Admin.ServiceGrid.IGridComponent.Uid"/></param>
             <returns>Corresponding <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManager"/>.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManagers.WaitForAtLeastOne">
            <summary>
            Waits for <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.SetDefaultTimeout(System.TimeSpan)"/> till at least one GSM is discovered and returns it.
            </summary>
            <returns>One of the discovered managers or null if the timeout elapsed.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManagers.WaitForAtLeastOne(System.TimeSpan)">
            <summary>
            Waits for the given timeout till at least one GSM is discovered and returns it.
            </summary>
            <param name="timeout">Time to wait.</param>
            <returns>One of the discovered managers or null if the timeout elapsed.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManagers.WaitFor(System.Int32)">
             <summary>
             Waits for <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.SetDefaultTimeout(System.TimeSpan)"/> till the provided number of managers are up. When passing 0, will
             wait till there are no more grid service managers.
            
             </summary>
             <param name="numberOfGridServiceManagers">The number of managers to wait for</param>
             <returns>true if the required number of managers were discovered, false if the timeout expired.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManagers.WaitFor(System.Int32,System.TimeSpan)">
            <summary>
            Waits for the given timeout till the provided number of managers are up. When passing 0, will
            wait till there are no more grid service managers.
            </summary>
            <param name="numberOfGridServiceManagers">The number of managers to wait for</param>
            <param name="timeout">Time to wait.</param>
            <returns>true if the required number of managers were discovered, false if the timeout expired.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManagers.Deploy(GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitDeployment)">
            <summary>
            Deploys a processing unit based on the processing unit deployment information on a random grid
            service manager (it will act as the primary GSM for the deployed processing unit).
            The deployment process will wait for <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.SetDefaultTimeout(System.TimeSpan)"/> and return the actual processing unit that can be used
            or null if the timeout elapsed.
            </summary>
            <param name="deployment">Processing unit deployment details.</param>
            <returns>Deployed processing unit or null if the timeout elapsed.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManagers.Deploy(GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitDeployment,System.TimeSpan)">
            <summary>
            Deploys a processing unit based on the processing unit deployment information on a random grid
            service manager (it will act as the primary GSM for the deployed processing unit).
            The deployment process will wait for the specified timeout and return the actual processing unit that can be used
            or null if the timeout elapsed.
            </summary>
            <param name="deployment">Processing unit deployment details.</param>
            <param name="timeout">The time to wait.</param>
            <returns>Deployed processing unit or null if the timeout elapsed.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManagers.Deploy(GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceDeployment)">
            <summary>
            Deploys a space based on the space deployment information on a random grid
            service manager (it will act as the primary GSM for the deployed processing unit).		
            The deployment process will wait for <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.SetDefaultTimeout(System.TimeSpan)"/> and return the actual processing unit that can be used
            or null if the timeout elapsed.
            Note, deploying just a space is simply deploying a built in processing unit that starts
            just an embedded space.
            </summary>
            <param name="deployment">Space deployment details.</param>
            <returns>Deployed processing unit that contains the space or null if the timeout elapsed.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManagers.Deploy(GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceDeployment,System.TimeSpan)">
            <summary>
            Deploys a space based on the space deployment information on a random grid
            service manager (it will act as the primary GSM for the deployed processing unit).		
            The deployment process will wait for the specified timeout and return the actual processing unit that can be used
            or null if the timeout elapsed.
            Note, deploying just a space is simply deploying a built in processing unit that starts
            just an embedded space.
            </summary>
            <param name="deployment">Space deployment details.</param>
            <param name="timeout">The time to wait.</param>
            <returns>Deployed processing unit that contains the space or null if the timeout elapsed.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManagers.Deploy(GigaSpaces.Core.Admin.ServiceGrid.Memcached.MemcachedDeployment)">
            <summary>
            Deploys a memcached based on the space deployment information on a random grid
            service manager (it will act as the primary GSM for the deployed processing unit).     
            The deployment process will wait for <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.SetDefaultTimeout(System.TimeSpan)"/> and return the actual processing unit that can be used
            or null if the timeout elapsed.
            Note, deploying just a memcached is simply deploying a built in processing unit that starts / connects
            to a space (holding the memcached entries) and exposing the memcached protocol.
            </summary>
            <param name="deployment">Memcached deployment details.</param>
            <returns>Deployed memcached processing unit or null if the timeout elapsed.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManagers.Deploy(GigaSpaces.Core.Admin.ServiceGrid.Memcached.MemcachedDeployment,System.TimeSpan)">
            <summary>
            Deploys a memcached based on the space deployment information on a random grid
            service manager (it will act as the primary GSM for the deployed processing unit).     
            The deployment process will wait for the specified timeout and return the actual processing unit that can be used
            or null if the timeout elapsed.
            Note, deploying just a memcached is simply deploying a built in processing unit that starts / connects
            to a space (holding the memcached entries) and exposing the memcached protocol.
            </summary>
            <param name="deployment">Memcached deployment details.</param>
            <param name="timeout">The time to wait.</param>
            <returns>Deployed memcached processing unit.</returns>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManagers.Managers">
            <summary>
            Gets all the currently discovered managers.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManagers.Uids">
            <summary>
            Gets a dictionary of grid service manager with the key as the uid.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManagers.Count">
            <summary>
            Gets the number of currently discovered managers.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManagers.IsEmpty">
            <summary>
            States if there are no discovered managers.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManagers.GridServiceManagerAdded">
            <summary>
            Occurs when a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManager"/> is added.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManagers.GridServiceManagerRemoved">
            <summary>
            Occurs when a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManager"/> is removed.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Memcached.MemcachedDeployment">
             <summary>
             A deployment of a pure memcached processing unit (comes built in
             under [GS ROOT]/Deploy/templates/memcached).
            
              
             </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Memcached.MemcachedDeployment.#ctor(System.Boolean)">
            <summary>
            For internal use.
            </summary>
            <param name="dynamicProxy">dummy variable to seperate implicit dynamic proxy creation of this object then
            explicit user creation</param>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Memcached.MemcachedDeployment.#ctor(System.String)">
            <summary>
            Constructs a new Memcached deployment.
            </summary>
            <param name="spaceUrl">The space url for the memcached storage.</param>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Memcached.MemcachedDeployment.Partitioned(System.Int32,System.Int32)">
            <summary>
            A convenient method allowing to easily configure the processing unit deployment to deploy a partitioned
            topology with a specified number of instances and a specified number of backups for each instance.
            </summary>
            <param name="numberOfParitions">The number of partitions the deployment will have.</param>
            <param name="numberOfBackups">The number of backups each partition will have.</param>
            <returns>The updated <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Memcached.MemcachedDeployment"/>.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Memcached.MemcachedDeployment.Replicated(System.Boolean,System.Int32)">
            <summary>
            A convenient method allowing to easily configure the processing unit deployment to deploy a
            replicated (either sync or async) topology with a specified number of instances.
            </summary>
            <param name="async">Indicates whether the replication in asynchronous.</param>
            <param name="numberOfInstances">The number of space instances the deployment will have.</param>
            <returns>The updated <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Memcached.MemcachedDeployment"/>.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Memcached.MemcachedDeployment.ClusterSchema(System.String)">
            <summary>
            Sets the cluster schema of the processing unit deployment.
            Only make sense to set it when there is an embedded space defined within the processing unit.
            </summary>
            <param name="clusterSchema">The cluster schema to set for the space deployment.</param>
            <returns>The <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Memcached.MemcachedDeployment"/> set with the specified cluster schema.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Memcached.MemcachedDeployment.NumberOfInstances(System.Int32)">
            <summary>
            Sets the number of instances that will be deployed as part of this processing unit instance.
            </summary>
            <param name="numberOfInstances">Number of instances the processing unit will have.</param>
            <returns>The <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Memcached.MemcachedDeployment"/> set with the specified number of instances.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Memcached.MemcachedDeployment.NumberOfBackups(System.Int32)">
            <summary>
            Sets the number of backups that will be deployed as part of this processing unit. Only applicable
            when the processing unit has an embedded space.
            </summary>
            <param name="numberOfBackups">The number of backups per instance to set for the processing unit deployment.</param>
            <returns>The <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Memcached.MemcachedDeployment"/> set with the specified number of backups.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Memcached.MemcachedDeployment.MaxInstancesPerVM(System.Int32)">
            <summary>
            Sets the maximum number of instances per virtual machine.
            
            On partitioned topology with backups topology, controls that a primary and a backup won't run
            on the same virtual machine if set to 1.
            
            On a non partitioned with backups topology, controls the maximum number of instances running on
            the same virtual machine.
            </summary>
            <param name="maxInstancesPerVM">The maximum instances per virtual machine.</param>
            <returns>The <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Memcached.MemcachedDeployment"/> set with the specified maximum instances per virtual machine.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Memcached.MemcachedDeployment.MaxInstancesPerMachine(System.Int32)">
             <summary>
             Sets the maximum number of instances per machine.
             
             On partitioned topology with backups topology, controls that a primary and a backup won't run
             on the same machine if set to 1.
            
             On a non partitioned with backups topology, controls the maximum number of instances running on
             the same machine.
             </summary>
             <param name="maxInstancesPerMachine">The maximum instances per machine.</param>
             <returns>The <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Memcached.MemcachedDeployment"/> set with the specified maximum instances per machine.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Memcached.MemcachedDeployment.MaxInstancesPerZone(System.String,System.Int32)">
             <summary>
             Sets the maximum number of instances per zone.
             
             On partitioned topology with backups topology, controls that a primary and a backup won't run
             on the same zone if set to 1. Note, for each zone this will have to be set.
            
             On a non partitioned with backups topology, controls the maximum number of instances running on
             he same zone.
             </summary>
             <param name="zone">The zone to set maximum instances for.</param>
             <param name="maxInstancesPerZone">The maximum instances per zone.</param>
             <returns>The <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Memcached.MemcachedDeployment"/> set with the specified maximum instances per zone for a specific zone.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Memcached.MemcachedDeployment.AddZone(System.String)">
            <summary>
            Adds a zone where the processing unit is allowed to be deployed on.
            </summary>
            <param name="zone">The name of the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Zones.IZone"/>.</param>
            <returns>The <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Memcached.MemcachedDeployment"/> set with the specified zone.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Memcached.MemcachedDeployment.SetContextProperty(System.String,System.String)">
            <summary>
            Sets a context deploy time property overriding any existing property with the same key within
            a processing unit configuration.
            </summary>
            <param name="key">The property's key.</param>
            <param name="value">The property's value.</param>
            <returns>The <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Memcached.MemcachedDeployment"/> set with the specified property.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Memcached.MemcachedDeployment.Secured(System.Boolean)">
            <summary>
            Will deploy a secured processing unit. Note, by setting user details the processing unit will be secured automatically.
            </summary>
            <param name="secured">Secured mode.</param>
            <returns>The <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Memcached.MemcachedDeployment"/> set with the specified secured mode.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Memcached.MemcachedDeployment.SlaLocation(System.String)">
            <summary>
            Sets an external SLA definition location to be loaded.
            </summary>
            <param name="slaLocation">The SLA file location.</param>
            <returns>The <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Memcached.MemcachedDeployment"/> set with the specified SLA definition location.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Memcached.MemcachedDeployment.UserDetails(System.String,System.String)">
            <summary>
            Sets the username and password (effectively making the processing unit secured)
            for the processing unit deployment.
            </summary>
            <param name="userName">Username.</param>
            <param name="password">Password</param>
            <returns>The <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Memcached.MemcachedDeployment"/> set with the specified user details.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Memcached.MemcachedDeployment.ToProcessingUnitDeployment">
            <summary>
            Transforms the memcached deployment to a processing unit deployment.
            </summary>
            <returns></returns>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Memcached.MemcachedDeployment.SpaceUrl">
            <summary>
            Gets the Space url of the deployment.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.INetworkStatistics">
            <summary>
            Holds network related statistics
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.INetworkStatistics.Name">
            <summary>
            Gets the name of the network service.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.INetworkStatistics.RxBytes">
            <summary>
            Gets the total rx bytes received.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.INetworkStatistics.RxBytesPerSecond">
            <summary>
            Gets the number of bytes received per second (computed against the previous sampled stats).
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.INetworkStatistics.TxBytes">
            <summary>
            Gets the total tx bytes transmitted.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.INetworkStatistics.TxBytesPerSecond">
            <summary>
            Gets the number of bytes transmitted per second (computed against the previous sampled stats).
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.INetworkStatistics.Previous">
            <summary>
            Gets the previous network statistics.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystem">
            <summary>
            An operating system is a virtual entity that contains information about the operating system one
            or more grid components are running within. An operating system is bounded to a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Machine.IMachine"/>
            and shares the same lifecycle.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystem.Uid">
            <summary>
            Gets the uid of the operating system.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystem.Details">
            <summary>
            Gets details (static view) of the operating system.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystem.Statistics">
            <summary>
            Gets the statistics of the operating system.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystem.StatisticsChanged">
            <summary>
            Occurs when a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemStatistics"/> is changed.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemDetails">
            <summary>
            Operating System Details includes static information (non-changeable) regarding the operating system.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemDetails.NA">
            <summary>
            Gets whether the operating system details are not available.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemDetails.Uid">
            <summary>
            Gets the uid of the operating system.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemDetails.Name">
            <summary>
            Gets the name of the operating system.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemDetails.Arch">
            <summary>
            Gets the architecture of the operating system.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemDetails.Version">
            <summary>
            Gets the version of the operating system.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemDetails.AvailableProcessors">
            <summary>
            Gets the number of available processors.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemDetails.TotalSwapSpaceSizeInBytes">
            <summary>
            Gets the total swap space size in bytes.		
            Note, currently only available on SUN VM.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemDetails.TotalSwapSpaceSizeInMB">
            <summary>
            Gets the total swap space size in mega bytes.
            Note, currently only available on SUN VM.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemDetails.TotalSwapSpaceSizeInGB">
            <summary>
            Gets the total swap space size in giga bytes.
            Note, currently only available on SUN VM.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemDetails.TotalPhysicalMemorySizeInBytes">
            <summary>
            Gets the total physical memory size in bytes.
            Note, currently only available on SUN VM.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemDetails.TotalPhysicalMemorySizeInMB">
            <summary>
            Gets the total physical memory size in mega bytes.
            Note, currently only available on SUN VM.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemDetails.TotalPhysicalMemorySizeInGB">
            <summary>
            Gets the total physical memory size in giga byes.
            Note, currently only available on SUN VM.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemDetails.HostName">
            <summary>
            Gets the (local) host name of the OS.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemDetails.HostAddress">
            <summary>
            Gets the (local) host address of the OS.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystems">
             <summary>
             Machines hold all the different <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystem"/>s that are currently
             discovered.
            
             Provides simple means to get all the current operating systems, as well as as registering for
             operating system lifecycle (added and removed) events.
            
             Provides the ability to start monitoring statistics in a polling fashion. Once monitoring is performed,
             a statistics event can be listened in order to receive statistics change events.
            
             When starting to monitor for statistics, each <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystem"/> will also
             start its statistics monitoring, and newly discovered ones will also start monitoring for statistics automatically.
             </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystems.GetByUID(System.String)">
            <summary>
            Gets the operating system matching its uid.
            </summary>
            <param name="uid">The operating system's uid string.</param>
            <returns></returns>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystems.OperatingSystems">
            <summary>
            Gets all currently discovered operating systems.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystems.Uids">
            <summary>
            Gets a dictionary of operating systems with their uid as the key.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystems.Count">
            <summary>
            Gets the number of operating systems current discovered.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystems.Details">
            <summary>
            Gets an aggregated view of all the operating systems details.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystems.Statistics">
            <summary>
            Gets an aggregated view of all the operating systems statistics.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystems.StatisticsChanged">
            <summary>
            Occurs when a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemsStatistics"/> is changed.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystems.OperatingSystemStatisticsChanged">
            <summary>
            Occurs when a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemStatistics"/> is changed.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemsDetails">
            <summary>
            An aggregated view of all the currently discovered <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemDetails"/>
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemsDetails.AvailableProcessors">
            <summary>
            Gets the summation of all <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemDetails"/> available processors.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemsDetails.TotalSwapSpaceSizeInBytes">
            <summary>
            Gets the summation of all <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemDetails"/> total swap space size in bytes.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemsDetails.TotalSwapSpaceSizeInMB">
            <summary>
            Gets the summation of all <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemDetails"/> total swap space size in mega bytes.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemsDetails.TotalSwapSpaceSizeInGB">
            <summary>
            Gets the summation of all <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemDetails"/> total swap space size in giga bytes.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemsDetails.TotalPhysicalMemorySizeInBytes">
            <summary>
            Gets the summation of all <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemDetails"/> total physical memory size in bytes.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemsDetails.TotalPhysicalMemorySizeInMB">
            <summary>
            Gets the summation of all <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemDetails"/> total physical memory size in mega bytes.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemsDetails.TotalPhysicalMemorySizeInGB">
            <summary>
            Gets the summation of all <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemDetails"/> total physical memory size in giga bytes.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemsStatistics">
            <summary>
            An aggregated statistics of all the different <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemStatistics"/>
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemsStatistics.NA">
            <summary>
            Gets whether the statistics are available.
            </summary>		
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemsStatistics.Timestamp">
            <summary>
            Gets the timestamp of the aggregated statistics computation.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemsStatistics.Count">
            <summary>
            Gets the number of aggregated <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemStatistics"/>
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemsStatistics.Previous">
            <summary>
            Gets the previous <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemsStatistics"/>
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemsStatistics.Details">
            <summary>
            Gets the aggregated operating systems details.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemsStatistics.FreeSwapSpaceSizeInBytes">
            <summary>
            Gets the free swap space size in bytes.
            </summary>		
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemsStatistics.FreeSwapSpaceSizeInMB">
            <summary>
            Gets the free swap space size in mega bytes.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemsStatistics.FreeSwapSpaceSizeInGB">
            <summary>
            Gets the free swap space size in giga bytes.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemsStatistics.FreePhysicalMemorySizeInBytes">
            <summary>
            Gets the free physical memory size in bytes.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemsStatistics.FreePhysicalMemorySizeInMB">
            <summary>
            Gets the free physicial memory size in mega bytes.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemsStatistics.FreePhysicalMemorySizeInGB">
            <summary>
            Gets the free physicial memory size in giga bytes.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemsStatistics.ActualFreePhysicalMemorySizeInBytes">
            <summary>
            Gets the actual free physical memory size in bytes.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemsStatistics.ActualFreePhysicalMemorySizeInMB">
            <summary>
            Gets the actual free physical memory size in mega bytes.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemsStatistics.ActualFreePhysicalMemorySizeInGB">
            <summary>
            Gets the actual free physical memory size in giga bytes.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemsStatistics.CpuPerc">
            <summary>
            Gets the combined cpu percentage (User + Sys + Nice + Wait)
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemsStatistics.CpuPercFormatted">
            <summary>
            Gets the combined cpu percentage (User + Sys + Nice + Wait) formatted as a string.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemStatistics">
            <summary>
            Statistics of a specific <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystem"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemStatistics.NA">
            <summary>
            Gets whether the operating system statistics are available.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemStatistics.Timestamp">
            <summary>
            Gets the timestamp of the taken statistics.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemStatistics.Details">
            <summary>
            Gets the operating system details.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemStatistics.Previous">
            <summary>
            Gets the previous statistics taken.
            the value is null if this is the first one.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemStatistics.FreeSwapSpaceSizeInBytes">
            <summary>
            Gets the free swap space size in bytes.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemStatistics.FreeSwapSpaceSizeInMB">
            <summary>
            Gets the free swap space size in mega bytes.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemStatistics.FreeSwapSpaceSizeInGB">
            <summary>
            Gets the free swap space size in giga bytes.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemStatistics.SwapSpaceUsedPerc">
            <summary>
            Gets the percentage used of swap space out of the total swap space.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemStatistics.FreePhysicalMemorySizeInBytes">
            <summary>
            Gets the free physical memory size in bytes.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemStatistics.FreePhysicalMemorySizeInMB">
            <summary>
            Gets the free physical memory size in mega bytes.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemStatistics.FreePhysicalMemorySizeInGB">
            <summary>
            Gets the free physical memory size in giga bytes.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemStatistics.ActualFreePhysicalMemorySizeInBytes">
            <summary>
            Gets the actual free physical memory size in bytes.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemStatistics.ActualFreePhysicalMemorySizeInMB">
            <summary>
            Gets the actual free physical memory size in mega bytes.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemStatistics.ActualFreePhysicalMemorySizeInGB">
            <summary>
            Gets the actual free physical memory size in giga bytes.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemStatistics.PhysicalMemoryUsedPerc">
            <summary>
            Gets the percentage used of physical memory out of the total physical memory space.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemStatistics.ActualPhysicalMemoryUsedPerc">
            <summary>
            Gets the percesntage used of the actual physical memory out of the total physical memory.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemStatistics.CpuPerc">
            <summary>
            Gets the combined cpu percentage (User + Sys + Nice + Wait).
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemStatistics.CpuPercFormatted">
            <summary>
            Gets the combined cpu percentage (User + Sys + Nice + Wait) formatted as a string.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemStatistics.NetworkStats">
            <summary>
            Gets the network statistics per network device.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.OperatingSystemsStatisticsChangedEventArgs">
            <summary>
            An event indicating that an <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemsStatistics"/> has changed.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.OperatingSystemsStatisticsChangedEventArgs.OperatingSystems">
            <summary>
            Gets the operating systems component associated with the event.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.OperatingSystemsStatisticsChangedEventArgs.Statistics">
            <summary>
            Gets the statistics associated with the event.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.OperatingSystemStatisticsChangedEventArgs">
            <summary>
            An event indicating that an <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.IOperatingSystemsStatistics"/> has changed.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.OperatingSystemStatisticsChangedEventArgs.OperatingSystem">
            <summary>
            Gets the operating system associated with the event.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.OperatingSystem.OperatingSystemStatisticsChangedEventArgs.Statistics">
            <summary>
            Gets the operating system statistics associated with the event.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.BackupGridServiceManagerChangedEventArgs">
            <summary>
            An event indicating that a backup GSM of a processing unit was either added or removed.
            <seealso cref="E:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.BackupGridServiceManagerChanged"/>
            <seealso cref="E:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnits.BackupGridServiceManagerChanged"/>
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.BackupGridServiceManagerChangedEventArgs.ProcessingUnit">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit"/> that the backup GSM event occurred on.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.BackupGridServiceManagerChangedEventArgs.Type">
            <summary>
            Gets the type of the event.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.BackupGridServiceManagerChangedEventArgs.GridServiceManager">
            <summary>
            Gets the backup <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManager"/> that was either added or removed for the given Processing Unit.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.BackupGridServiceManagerChangedEventArgs.ChangedType">
            <summary>
            Determines the type of the backup grid service manager changed event.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.BackupGridServiceManagerChangedEventArgs.ChangedType.Added">
            <summary>
            The event indicates that a GSM backup was added.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.BackupGridServiceManagerChangedEventArgs.ChangedType.Removed">
            <summary>
            The event indicates that a GSM backup was removed.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.DeploymentStatus">
            <summary>
            Deployment status indicates a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit"/> deployment.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.DeploymentStatus.Na">
            <summary>
            Deployment status is not available.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.DeploymentStatus.Undeployed">
            <summary>
            Indicates the Processing Unit is not deployed.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.DeploymentStatus.Scheduled">
            <summary>
            Indicates the Processing Unit is scheduled for deployment.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.DeploymentStatus.Deployed">
            <summary>
            Indicates the Processing Unit is deployed.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.DeploymentStatus.Broken">
            <summary>
            Indicates the Processing Unit is deployed and is broken, where all
            required services are not available.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.DeploymentStatus.Compromised">
            <summary>
            Indicates the Processing Unit is deployed and is compromised, where
            some specified services are not available.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.DeploymentStatus.Intact">
            <summary>
            Indicates the Processing Unit is deployed and is intact, where all
            specified services are available.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit">
            <summary>
            A processing unit holds one or more <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance"/>s.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.WaitFor(System.Int32)">
            <summary>
            Waits for <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.SetDefaultTimeout(System.TimeSpan)"/> till at least the provided number of Processing Unit Instances are up.
            </summary>
            <param name="numberOfProcessingUnitInstances">Number of instances to wait for.</param>
            <returns>true if the required number of managers were discovered, false if the timeout expired.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.WaitFor(System.Int32,System.TimeSpan)">
            <summary>
            Waits for the sepcified timeout till at least the provided number of Processing Unit Instances are up.
            </summary>
            <param name="numberOfProcessingUnitInstances">Number of instances to wait for.</param>
            <param name="timeout">Time to wait.</param>
            <returns>true if the required number of managers were discovered, false if the timeout expired.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.WaitForSpace">
            <summary>
            Waits for <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.SetDefaultTimeout(System.TimeSpan)"/> till an embedded Space is correlated with the processing unit.
            </summary>
            <returns>The space that is correlated with the processing unit or null of the timeout elapsed.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.WaitForSpace(System.TimeSpan)">
            <summary>
            Waits for the specified timeout till an embedded Space is correlated with the processing unit.
            </summary>
            <param name="timeout">Time to wait.</param>
            <returns>The space that is correlated with the processing unit or null of the timeout elapsed.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.WaitForManaged">
            <summary>
            Waits for <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.SetDefaultTimeout(System.TimeSpan)"/> till there is a managing <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManager"/> for the processing unit.
            </summary>
            <returns>Managing grid service manager or null if the timeout elapsed.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.WaitForManaged(System.TimeSpan)">
            <summary>
            Waits for the specified timeout till there is a managing <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManager"/> for the processing unit.
            </summary>
            <returns>Managing grid service manager or null if the timeout elapsed.</returns>
            <param name="timeout">Time to wait.</param>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.IncrementInstance">
            <summary>
            Increment a processing unit instance.
            
            <seealso cref="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.CanIncrementInstance"/>
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.DecrementInstance">
            <summary>
            Will randomly decrement an instance from the processing units. For more fine
            grained control see <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance.Decrement"/>
            
            <seealso cref="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.CanDecrementInstance"/>
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.GetBackupGridServiceManager(System.String)">
            <summary>
            Gets the backup GSM matching the provided UID.
            </summary>
            <param name="gridServiceManagerUID"></param>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.Undeploy">
            <summary>
            Undeploys the processing unit.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.UndeployAndWait">
            <summary>		
            Undeploys the processing unit and waits until all instances have been undeployed.
            In case of an Elastic processing unit, also waits for containers to shutdown.
            
            The undeployment process will return when all processing units have undeployed or <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.SetDefaultTimeout(System.TimeSpan)"/> have elapsed.
            <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.Undeploy"/>     
            </summary>	
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.UndeployAndWait(System.TimeSpan)">
            <summary>
            Undeploys the processing unit and waits until all instances have been undeployed.
            In case of an Elastic processing unit, also waits for containers to shutdown.
            
            The undeployment process will wait for the given timeout and return when all processing units have undeployed or timeout expired.
            </summary>
            <param name="timeout">Time to wait.</param>
            <returns>True if undeploy completed successfully within the specified timeout. False if undeploy is still in progress.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.GetPartition(System.Int32)">
            <summary>
            Gets a processing unit partition based on the specified partition id.
            </summary>
            <param name="partitionId">Partition id to get by.</param>
            <returns>Processing unit partition based on the specified partition id.</returns>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.ProcessingUnits">
            <summary>
            Gets the handle to all the different processing units.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.Name">
            <summary>
            Gets the name of the processing unit.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.NumberOfInstances">
            <summary>
            Gets the number of instances of the processing unit.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.NumberOfBackups">
            <summary>
            Gets the number of backups (if the topology is a backup one) per instance.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.TotalNumberOfInstances">
            <summary>
            Gets the total number of instances. If there are no backups, will return
            <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.NumberOfInstances"/>. If there are backups, will return <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.NumberOfInstances"/> * <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.NumberOfBackups"/> + 1)
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.MaxInstancesPerVM">
            <summary>
            Gets the number of instances of this processing unit that can run within a VM.
            In case of a partitioned with backup topology, it applies on a per partition level (meaning that a
            primary and backup will not run on the same VM).
            In case of a non backup based topology, it applies on the number of instances of the whole processing
            unit that can run on the same VM).
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.MaxInstancesPerMachine">
            <summary>
            Returns the number of instnaces of this processing unit that can run within a Machine.
            In case of a partitioned with backup topology, it applies on a per partition level (meaning that a
            primary and backup will not run on the same Machine).
            In case of a non backup based topology, it applies on the number of instances of the whole processing
            unit that can run on the same Machine). 
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.MaxInstancesPerZone">
            <summary>
            Gets a map containing the zone name and the maximum number of instances for that zone.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.RequiredZones">
            <summary>
            Gets the list of zones this processing units are required to run on. If there is more than
            one zone, the processing unit can run on either of the zones.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.Status">
            <summary>
            Gets the deployment status of the processing unit.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.CanIncrementInstance">
            <summary>
            Gets whether this processing unit instances can be incremented once deployed.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.CanDecrementInstance">
            <summary>
            Gets whether this processing unit instances can be decremented once deployed.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.Managed">
            <summary>
            Gets whether there is a managing GSM for this processing unit.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.ManagingGridServiceManager">
            <summary>
            Gets the managing (primary) GSM for the processing unit.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.BackupGridServiceManagers">
            <summary>
            Gets the backup GSMs for the processing unit.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.Space">
            <summary>
            Gets the (first) embedded <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace"/> within a processing unit. Returns null if
            no embedded space is defined within the processing unit or if no processing unit instance
            has been added to the processing unit.		 
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.Spaces">
            <summary>
            Gets all the embedded <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace"/>s within a processing unit. Returns an empty array if there
            are no embedded spaces defined within the processing unit, or none has been associated with
            the processing unit yet.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.Instances">
            <summary>
            Gets the currently discovered processing unit instances.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.Partitions">
            <summary>
            Gets the processing unit partitions of this processing unit.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.ProcessingUnitInstanceAdded">
            <summary>
            Occurs when a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance"/> is added.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.ProcessingUnitInstanceRemoved">
            <summary>
            Occurs when a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance"/> is removed.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.ManagingGridServiceManagerChanged">
            <summary>
            Occurs when a managing <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManager"/> for a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit"/> was changed.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.BackupGridServiceManagerChanged">
            <summary>
            Occurs when a backup <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManager"/> for a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit"/> was either removed or added.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.ProcessingUnitStatusChanged">
            <summary>
            Occurs when a deployment status of a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit"/> was changed.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.SpaceCorrelated">
            <summary>
            Occurs when that an embedded <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace"/> was correlated
            with a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit"/>.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.ProcessingUnitInstanceStatisticsChanged">
            <summary>
            Occurs when a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance"/> statistics have changed.
            Note, in order to receive events, the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnits"/> need to be in a "statistics" monitored state
            <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.IStatisticsMonitor.StartStatisticsMonitor"/>
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance">
            <summary>
            A processing unit instance is an actual running instance of a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit"/>. For example, when deploying
            a processing unit with 4 instance, there will be eventually 4 instances of the processing unit.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance.Destroy">
            <summary>
            Destroy the instance. If breaches the SLA, will instantiate the instance again.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance.Decrement">
            <summary>
            Decrements the instance (and destroying it in the process). Will not attempt to create it again.
            <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.CanDecrementInstance"/>		
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance.Relocate(GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainer)">
            <summary>
            Relocates the instance to the provided <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainer"/>.
            Note, the current processing instance is unusable once this call has been made. If the relocated processing
            unit instance is needed, or waiting for the relocation is required, use <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance.RelocateAndWait(GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainer)"/>
            or <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance.RelocateAndWait(GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainer,System.TimeSpan)"/>. 
            </summary>
            <param name="gridServiceContainerToRelocateTo">The <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainer"/> to relocate to.</param>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance.RelocateAndWait(GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainer)">
            <summary>
            Relocates the instance to the provided <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainer"/>. The relocated
            instance will be returned waiting for it for <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.SetDefaultTimeout(System.TimeSpan)"/>.
            </summary>
            <param name="gridServiceContainerToRelocateTo">The <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainer"/> to relocate to.</param>
            <returns>The relocated processing unit instance or null if the timeout elapsed.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance.RelocateAndWait(GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainer,System.TimeSpan)">
            <summary>
            Relocates the instance to the provided <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainer"/>. The relocated
            instance will be returned waiting for it for the provided timeout.
            </summary>
            <param name="gridServiceContainerToRelocateTo">The <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainer"/> to relocate to.</param>
            <param name="timeout">Time to wait.</param>
            <returns>The relocated processing unit instance or null if the timeout elapsed.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance.Relocate">
            <summary>
            Relocates the instance to any suitable <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainer"/>.
            Note, the current processing instance is unusable once this call has been made. If the relocated processing
            unit instance is needed, or waiting for the relocation is required, use <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance.RelocateAndWait"/>
            or <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance.RelocateAndWait(System.TimeSpan)"/>. 
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance.RelocateAndWait">
            <summary>
            Relocates the instance to any suitable <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainer"/>. The relocated
            instance will be returned waiting for it for <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.SetDefaultTimeout(System.TimeSpan)"/>.
            </summary>		
            <returns>The relocated processing unit instance or null if the timeout elapsed.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance.RelocateAndWait(System.TimeSpan)">
            <summary>
            Relocates the instance to any suitable <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainer"/>. The relocated
            instance will be returned waiting for it for the provided timeout.
            </summary>		
            <param name="timeout">Time to wait.</param>
            <returns>The relocated processing unit instance or null if the timeout elapsed.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance.Restart">
             <summary>
             Restarts the processing unit instance. Note, if this instance is running an embedded space instance,
             and the space instance is primary and there is a backup around as well, this method is handy to "turn"
             the backup to primary.
            
             Note, the current processing unit instance is unusable once this call has been made. If the restarted
             processing unit instance is needed, or waiting for the restart is required, use <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance.RestartAndWait"/>
             or <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance.RestartAndWait(System.TimeSpan)"/>.
             </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance.RestartAndWait">
            <summary>
            Restarts the processing unit instance and waits for <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.SetDefaultTimeout(System.TimeSpan)"/> for the restarted processing unit instance
            to be available
            <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance.Restart"/>
            </summary>
            <returns>Restarted processing unit instance or null if timeout elapsed.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance.RestartAndWait(System.TimeSpan)">
            <summary>
            Restarts the processing unit instance and waits for the provided timeout for the restarted processing unit instance
            to be available
            </summary>
            <param name="timeout">Time to wait.</param>
            <returns>Restarted processing unit instance or null if timeout elapsed.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance.GetServiceDetailsByServiceId(System.String)">
            <summary>
            Gets the <see cref="T:GigaSpaces.XAP.ProcessingUnit.Containers.ServiceGrid.IServiceDetails"/> for a specific service id.
            <see cref="T:GigaSpaces.XAP.ProcessingUnit.Containers.ServiceGrid.IServiceDetailsProvider"/>
            </summary>
            <param name="serviceId">Id of the service to get details for.</param>
            <returns><see cref="T:GigaSpaces.XAP.ProcessingUnit.Containers.ServiceGrid.IServiceDetails"/> for a specific service id.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance.GetServicesDetailsByServiceType(System.String)">
            <summary>
            Gets the <see cref="T:GigaSpaces.XAP.ProcessingUnit.Containers.ServiceGrid.IServiceDetails"/> by a service type.
            <seealso cref="P:GigaSpaces.XAP.ProcessingUnit.Containers.ServiceGrid.IServiceDetails.ServiceType"/>.
            </summary>
            <param name="serviceType">The type of services to get.</param>
            <returns><see cref="T:GigaSpaces.XAP.ProcessingUnit.Containers.ServiceGrid.IServiceDetails"/> by a service type</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance.WaitForSpaceInstance">
            <summary>
            Wait for <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.SetDefaultTimeout(System.TimeSpan)"/> till a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstance"/> that
            is started within this processing unit instance is discovered.
            </summary>
            <returns>Space processing unit instance or null if the timeout elapsed.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance.WaitForSpaceInstance(System.TimeSpan)">
            <summary>
            Wait for the provided timeout till a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstance"/> that
            is started within this processing unit instance is discovered.
            </summary>
            <param name="timeout">Time to wait.</param>
            <returns>Space processing unit instance or null if the timeout elapsed.</returns>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance.InstanceId">
            <summary>
            Gets the instance id of the processing unit instance.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance.BackupId">
            <summary>
            Gets the backup id of the processing unit instance.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance.ProcessingUnit">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit"/> this processing unit instance belongs to.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance.Name">
            <summary>
            Gets the name of the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance.ClusterInfo">
            <summary>
            Gets the cluster info of the processing unit instance.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance.GridServiceContainer">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainer"/> the processing unit instance is running on.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance.Partition">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitPartition"/> this processing unit instance is part of.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance.ServiceDetailsByServiceId">
            <summary>
            Gets a map of <see cref="T:GigaSpaces.XAP.ProcessingUnit.Containers.ServiceGrid.IServiceDetails"/>s by service id.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance.ServiceDetailsByServiceType">
            <summary>
            Gets a dictionary of <see cref="T:GigaSpaces.XAP.ProcessingUnit.Containers.ServiceGrid.IServiceDetails"/> by service type.
            <seealso cref="P:GigaSpaces.XAP.ProcessingUnit.Containers.ServiceGrid.IServiceDetails.ServiceType"/>
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance.EventContainerDetails">
            <summary>
            Gets a dictionary of <see cref="T:GigaSpaces.XAP.Events.IEventListenerContainerServiceDetails"/> keyed by their
            <see cref="P:GigaSpaces.XAP.ProcessingUnit.Containers.ServiceGrid.IServiceDetails.Id"/>
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance.PollingEventContainerDetails">
            <summary>
            Gets a dictionary of <see cref="T:GigaSpaces.XAP.Events.Polling.IPollingEventListenerContainerServiceDetails"/> keyed by their
            <see cref="P:GigaSpaces.XAP.ProcessingUnit.Containers.ServiceGrid.IServiceDetails.Id"/>
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance.NotifyEventContainerDetails">
            <summary>
            Gets a dictionary of <see cref="T:GigaSpaces.XAP.Events.Notify.INotifyEventListenerContainerServiceDetails"/> keyed by their
            <see cref="P:GigaSpaces.XAP.ProcessingUnit.Containers.ServiceGrid.IServiceDetails.Id"/>
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance.RemotingDetails">
            <summary>
            Gets the <see cref="T:GigaSpaces.XAP.Remoting.IRemotingServiceDetails"/>s that are hosted within the processing unit.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance.SpaceDetails">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceServiceDetails"/>s as described by the service started within the processing unit instance.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance.EmbeddedSpaceDetails">
            <summary>
            Gets the embedded space <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceServiceDetails"/> as described by the service started within the processing unit instance.
            Null is returned if no embedded space was started within the processing unit instance and one of them is returned if there are few.
            <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance.EmbeddedSpacesDetails"/>
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance.EmbeddedSpacesDetails">
            <summary>
            Gets the embedded spaces <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceServiceDetails"/> as described by the service started within the processing unit instance.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance.EmbeddedSpaces">
            <summary>
            Gets whether there are embedded spaces started within this processing unit instance.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance.SpaceInstance">
            <summary>
            Gets a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstance"/> that was started within the processing unit instance. Will
            return null if no embedded space instances were started (or none has been detected yet).
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance.SpaceInstances">
            <summary>
            Gets all the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstance"/>s that were stared within the processing unit instance.
            Will return an empty list if no space instances were started within this processing unit (or none has
            been detected yet).
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance.Statistics">
            <summary>
            Gets the processing unit instance statistics.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstanceStatistics">
            <summary>
            Processing Unit Instance statistics provide statistics on services configured within the processing
            unit. It uses the <see cref="T:GigaSpaces.XAP.ProcessingUnit.Containers.ServiceGrid.IServiceMonitors"/> which component within a processing unit
            can provide.
            <seealso cref="T:GigaSpaces.XAP.ProcessingUnit.Containers.ServiceGrid.IServiceMonitorsProvider"/>
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstanceStatistics.Timestamp">
            <summary>
            Gets the timestamp the stats were taken at.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstanceStatistics.Monitors">
            <summary>
            Gets a dictionary of the <see cref="T:GigaSpaces.XAP.ProcessingUnit.Containers.ServiceGrid.IServiceMonitors"/> per processing unit
            service id.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstanceStatistics.EventContainers">
            <summary>
            Gets all the different <see cref="T:GigaSpaces.XAP.Events.IEventListenerContainerServiceMonitors"/> keyed by the service id.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstanceStatistics.PollingEventContainers">
            <summary>
            Gets all the different <see cref="T:GigaSpaces.XAP.Events.Polling.IPollingEventListenerContainerServiceMonitors"/> keyed by the service id.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstanceStatistics.NotifyEventContainers">
            <summary>
            Gets all the different <see cref="T:GigaSpaces.XAP.Events.Notify.INotifyEventListenerContainerServiceMonitors"/> keyed by the service id.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstanceStatistics.Remoting">
            <summary>
            Gets the <see cref="T:GigaSpaces.XAP.Remoting.IRemotingServiceMonitors"/> information.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstanceStatistics.Previous">
            <summary>
            Gets the previous statistics.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitPartition">
            <summary>
            A Processing unit partition mainly make sense with partitioned topologies and holds all the
            {@link org.openspaces.admin.pu.ProcessingUnitInstance}s that form the partition.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitPartition.PartitionId">
            <summary>
            Gets the partition id (starting from 0). 
            Note, <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance.InstanceId"/> starts from 1.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitPartition.Instances">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance"/>s associated with this partition.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitPartition.ProcessingUnit">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit"/> this partition is part of.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitPartition.Primary">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance"/> that holds the primary <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstance"/>, 
            or null if this processing unit has no embedded space.		
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitPartition.Backup">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance"/> that holds the backup <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstance"/>, 
            or null if this processing unit has no embedded space.		
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnits">
            <summary>
            Holds one or more <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit"/>s.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnits.GetProcessingUnit(System.String)">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit"/> for the given processing unit name.
            </summary>
            <param name="name">The name of the processing unit.</param>
            <returns>The <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit"/> for the given processing unit name.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnits.WaitFor(System.String)">
            <summary>
            Waits for <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.SetDefaultTimeout(System.TimeSpan)"/> till the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit"/> is identified as deployed and
            return it.		
            </summary>
            <param name="processingUnitName">The name of the processing unit to wait for.</param>
            <returns>The deployed processing unit or null if the timeout elapsed.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnits.WaitFor(System.String,System.TimeSpan)">
            <summary>
            Waits for the specified timeout till the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit"/> is identified as deployed and
            return it.		
            </summary>
            <param name="processingUnitName">The name of the processing unit to wait for.</param>
            <param name="timeout">Time to wait.</param>
            <returns>The deployed processing unit or null if the timeout elapsed.</returns>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnits.Count">
            <summary>
            Gets the number of currently deployed <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit"/>s.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnits.IsEmpty">
            <summary>
            States if there are no currently deployed processing units.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnits.ProcessingUnits">
            <summary>
            Gets the currently deployed <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit"/>s.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnits.Names">
            <summary>
            Gets a dictionary of <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit"/>s keyed by their respective names.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnits.ProcessingUnitAdded">
            <summary>
            Occurs when a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit"/> is added.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnits.ProcessingUnitRemoved">
            <summary>
            Occurs when a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit"/> is removed.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnits.ProcessingUnitInstanceAdded">
            <summary>
            Occurs when a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance"/> is added.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnits.ProcessingUnitInstanceRemoved">
            <summary>
            Occurs when a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance"/> is removed.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnits.ManagingGridServiceManagerChanged">
            <summary>
            Occurs when a managing <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManager"/> for a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit"/> was changed.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnits.BackupGridServiceManagerChanged">
            <summary>
            Occurs when a backup <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManager"/> for a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit"/> was either removed or added.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnits.ProcessingUnitStatusChanged">
            <summary>
            Occurs when a deployment status of a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit"/> was changed.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnits.ProcessingUnitInstanceStatisticsChanged">
            <summary>
            Occurs when a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance"/> statistics have changed.
            Note, in order to receive events, the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnits"/> need to be in a "statistics" monitored state
            <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.IStatisticsMonitor.StartStatisticsMonitor"/>
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ManagingGridServiceManagerChangedEventArgs">
            <summary>
            Provides data for <see cref="E:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.ManagingGridServiceManagerChanged"/> event.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ManagingGridServiceManagerChangedEventArgs.ProcessingUnit">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit"/> the managing <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManager"/> was changed for.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ManagingGridServiceManagerChangedEventArgs.NewGridServiceManager">
            <summary>
            Gets the new <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManager"/> that is associated with the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ManagingGridServiceManagerChangedEventArgs.PreviousGridServiceManager">
            <summary>
            Gets the previous <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManager"/> that was associated with the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ManagingGridServiceManagerChangedEventArgs.Unknown">
            <summary>
            Gets whether there is an unknown managing <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManager"/>.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitDeployment">
            <summary>
            Configures a deployment of a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit"/>.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitDeployment.#ctor(System.Boolean)">
            <summary>
            For internal use.
            </summary>
            <param name="dynamicProxy">dummy variable to seperate implicit dynamic proxy creation of this object then
            explicit user creation</param>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitDeployment.#ctor(System.String)">
            <summary>
            Constructs a processing unit deployment based on the specified processing unit location.
            </summary>
            <param name="location">Can either be a processing unit name, in that case this name should exists as a directory 
            under the [GS INSTALLATION]\Deploy directory. Or a full path that points either to a 
            processing unit zip/jar or a directory.</param>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitDeployment.Name(System.String)">
            <summary>
            Sets the processing unit name that will be deployed. By default it will be based on the
            parameter passed in the constructor.
            </summary>
            <param name="name">Processing unit name.</param>
            <returns>Updated processing unit deployment.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitDeployment.Partitioned(System.Int32,System.Int32)">
            <summary>
            A convenient method allowing to easily configure the processing unit deployment to deploy a partitioned
            topology with a specified number of instances and a specified number of backups for each instance.
            </summary>
            <param name="numberOfParitions">The number of partitions the deployment will have.</param>
            <param name="numberOfBackups">The number of backups each partition will have.</param>
            <returns>The updated <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitDeployment"/>.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitDeployment.Replicated(System.Boolean,System.Int32)">
            <summary>
            A convenient method allowing to easily configure the processing unit deployment to deploy a
            replicated (either sync or async) topology with a specified number of instances.
            </summary>
            <param name="async">Indicates whether the replication in asynchronous.</param>
            <param name="numberOfInstances">The number of space instances the deployment will have.</param>
            <returns>The updated <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitDeployment"/>.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitDeployment.ClusterSchema(System.String)">
            <summary>
            Sets the cluster schema of the processing unit deployment.
            Only make sense to set it when there is an embedded space defined within the processing unit.
            </summary>
            <param name="clusterSchema">The cluster schema to set for the space deployment.</param>
            <returns>The <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitDeployment"/> set with the specified cluster schema.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitDeployment.NumberOfInstances(System.Int32)">
            <summary>
            Sets the number of instances that will be deployed as part of this processing unit instance.
            </summary>
            <param name="numberOfInstances">Number of instances the processing unit will have.</param>
            <returns>The <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitDeployment"/> set with the specified number of instances.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitDeployment.NumberOfBackups(System.Int32)">
            <summary>
            Sets the number of backups that will be deployed as part of this processing unit. Only applicable
            when the processing unit has an embedded space.
            </summary>
            <param name="numberOfBackups">The number of backups per instance to set for the processing unit deployment.</param>
            <returns>The <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitDeployment"/> set with the specified number of backups.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitDeployment.MaxInstancesPerVM(System.Int32)">
            <summary>
            Sets the maximum number of instances per virtual machine.
            
            On partitioned topology with backups topology, controls that a primary and a backup won't run
            on the same virtual machine if set to 1.
            
            On a non partitioned with backups topology, controls the maximum number of instances running on
            the same virtual machine.
            </summary>
            <param name="maxInstancesPerVM">The maximum instances per virtual machine.</param>
            <returns>The <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitDeployment"/> set with the specified maximum instances per virtual machine.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitDeployment.MaxInstancesPerMachine(System.Int32)">
             <summary>
             Sets the maximum number of instances per machine.
             
             On partitioned topology with backups topology, controls that a primary and a backup won't run
             on the same machine if set to 1.
            
             On a non partitioned with backups topology, controls the maximum number of instances running on
             the same machine.
             </summary>
             <param name="maxInstancesPerMachine">The maximum instances per machine.</param>
             <returns>The <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitDeployment"/> set with the specified maximum instances per machine.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitDeployment.MaxInstancesPerZone(System.String,System.Int32)">
             <summary>
             Sets the maximum number of instances per zone.
             
             On partitioned topology with backups topology, controls that a primary and a backup won't run
             on the same zone if set to 1. Note, for each zone this will have to be set.
            
             On a non partitioned with backups topology, controls the maximum number of instances running on
             he same zone.
             </summary>
             <param name="zone">The zone to set maximum instances for.</param>
             <param name="maxInstancesPerZone">The maximum instances per zone.</param>
             <returns>The <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitDeployment"/> set with the specified maximum instances per zone for a specific zone.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitDeployment.AddZone(System.String)">
            <summary>
            Adds a zone where the processing unit is allowed to be deployed on.
            </summary>
            <param name="zone">The name of the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Zones.IZone"/>.</param>
            <returns>The <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitDeployment"/> set with the specified zone.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitDeployment.SetContextProperty(System.String,System.String)">
            <summary>
            Sets a context deploy time property overriding any existing property with the same key within
            a processing unit configuration.
            </summary>
            <param name="key">The property's key.</param>
            <param name="value">The property's value.</param>
            <returns>The <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitDeployment"/> set with the specified property.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitDeployment.Secured(System.Boolean)">
            <summary>
            Will deploy a secured processing unit. Note, by setting user details the processing unit will be secured automatically.
            </summary>
            <param name="secured">Secured mode.</param>
            <returns>The <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitDeployment"/> set with the specified secured mode.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitDeployment.SlaLocation(System.String)">
            <summary>
            Sets an external SLA definition location to be loaded.
            </summary>
            <param name="slaLocation">The SLA file location.</param>
            <returns>The <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitDeployment"/> set with the specified SLA definition location.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitDeployment.UserDetails(System.String,System.String)">
            <summary>
            Sets the username and password (effectively making the processing unit secured)
            for the processing unit deployment.
            </summary>
            <param name="userName">Username.</param>
            <param name="password">Password</param>
            <returns>The <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitDeployment"/> set with the specified user details.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitDeployment.IsSecured">
            <summary>
            Gets whether this processing unit deployment is secured.
            </summary>
            <returns>whether this processing unit deployment is secured.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitDeployment.GetUserDetails">
            <summary>
            Gets the user details of this deployment.
            </summary>
            <returns></returns>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitDeployment.ProcessingUnit">
            <summary>
            Gets the processing unit location that will be deployed.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitDeployment.DeploymentOptions">
            <summary>
            Gets this deployment as a set of deployment options.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitAddedEventArgs">
            <summary>
            Provides data for <see cref="E:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnits.ProcessingUnitAdded"/> event.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitAddedEventArgs.ProcessingUnit">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit"/> that was added.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitInstanceAddedEventArgs">
            <summary>
            Provides data for <see cref="E:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.ProcessingUnitInstanceAdded"/> event.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitInstanceAddedEventArgs.ProcessingUnitInstance">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance"/> that was added.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitInstanceRemovedEventArgs">
            <summary>
            Provides data for <see cref="E:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.ProcessingUnitInstanceRemoved"/> event.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitInstanceRemovedEventArgs.ProcessingUnitInstance">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance"/> that was removed.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitInstanceStatisticsChangedEventArgs">
            <summary>
            Provides data for <see cref="E:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.ProcessingUnitInstanceStatisticsChanged"/> event.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitInstanceStatisticsChangedEventArgs.ProcessingUnitInstance">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance"/> that its statistics were changed.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitInstanceStatisticsChangedEventArgs.Statistics">
            <summary>
            Gets the latest <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstanceStatistics"/>.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitRemovedEventArgs">
            <summary>
            Provides data for <see cref="E:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnits.ProcessingUnitRemoved"/> event.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitRemovedEventArgs.ProcessingUnit">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit"/> that was removed.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitSpaceCorrelatedEventArgs">
            <summary>
            Provides data for <see cref="E:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.SpaceCorrelated"/> event.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitSpaceCorrelatedEventArgs.Space">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace"/> that was correlated with the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitSpaceCorrelatedEventArgs.ProcessingUnit">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit"/> the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace"/> was correlated with.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitStatusChangedEventArgs">
            <summary>
            Provides data for <see cref="E:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit.ProcessingUnitStatusChanged"/> event.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitStatusChangedEventArgs.ProcessingUnit">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnit"/> that the deployment status changed for.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitStatusChangedEventArgs.PreviousStatus">
            <summary>
            Gets the previous deployment status.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitStatusChangedEventArgs.NewStatus">
            <summary>
            Gets the new deployment status.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.ServiceGridAdminBuilder">
             <summary>
             A builder that builds <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin"/> instance.
            
             Allows to set the Lookup Service Groups and Locators. The <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin"/> listens for events
             from the lookup service of components added and removed. It will monitor all components
             that work within the specified group and locator.
            
             Allows to set the username and password that will be used to authenticate when secured
             services are discovered.
             </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.ServiceGridAdminBuilder.CreateAdmin(System.String,System.String)">
            <summary>
            Creates the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin"/> and begins its listening for events from the lookup service.
            using provider user name and password that will be used for discovery of secured services.
            </summary>
            <param name="userName">User name.</param>
            <param name="password">Password.</param>
            <returns>created <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin"/>.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.ServiceGridAdminBuilder.CreateAdmin">
            <summary>
            Creates the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin"/> and begins its listening for events from the lookup service.
            </summary>
            <returns>created <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin"/>.</returns>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ServiceGridAdminBuilder.Groups">
            <summary>
            Gets or sets the lookup group that will be used to find Lookup Services (using multicast)
            that will be used to listen for events.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ServiceGridAdminBuilder.Locators">
            <summary>
            Gets or sets the lookup locators (ip:port) of the lookup service that will be used to listen
            for events.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.ServiceGridAdminBuilder.DiscoverUnmanagedSpaces">
            <summary>
            Gets or sets discovery of unmanaged spaces (spaces that are not started by being deployed
            within the Service Grid). Defaults to false (unmanaged spaces are not discovered).
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ReplicationState">
            <summary>
            Determines the replication state
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Admin.ServiceGrid.Space.ReplicationState.Connected">
            <summary>
            Replication channel is connected.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Admin.ServiceGrid.Space.ReplicationState.TemporaryDisconnected">
            <summary>
            Replication channel is temporary disconnected.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Admin.ServiceGrid.Space.ReplicationState.Disconnected">
            <summary>
            Replication channel is disconnected.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Admin.ServiceGrid.Space.ReplicationState.Closed">
            <summary>
            Replication channel is closed.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ReplicationMode">
            <summary>
            Determines the replication mode
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Admin.ServiceGrid.Space.ReplicationMode.Sync">
            <summary>
            Synchronous replication.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Admin.ServiceGrid.Space.ReplicationMode.Async">
            <summary>
            Asyncronous replication.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Admin.ServiceGrid.Space.ReplicationMode.Mirror">
            <summary>
            Mirror service replication.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Admin.ServiceGrid.Space.ReplicationMode.BackupSpace">
            <summary>
            Replication to a backup space instance.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Admin.ServiceGrid.Space.ReplicationMode.ActiveSpace">
            <summary>
            Replication to an active space instance.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Admin.ServiceGrid.Space.ReplicationMode.LocalView">
            <summary>
            Replication to a local view.
            </summary>        
        </member>
        <member name="F:GigaSpaces.Core.Admin.ServiceGrid.Space.ReplicationMode.Gateway">
            <summary>
            Replication to a gateway.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Admin.ServiceGrid.Space.ReplicationMode.DurableNotification">
            <summary>
            Replication to a durable notification listener.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ReplicationOperatingMode">
            <summary>
            Determines the replication current operating mode
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Admin.ServiceGrid.Space.ReplicationOperatingMode.Sync">
            <summary>
            Synchronous replication.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Admin.ServiceGrid.Space.ReplicationOperatingMode.Async">
            <summary>
            Channel is operating in asynchronous mode, if the channel original
            type is synchronous this means that there is compromised data that is
            currently being replicated asynchronously, once the synchronous state
            is restored there is no more compromised data.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Admin.ServiceGrid.Space.ReplicationOperatingMode.ReliableAsync">
            <summary>
            Channel is operating in reliable asynchronous mode which means there is at least
            one active synchronous backup that keeps the replication redo log for this channel
            in case of a failure. 
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ReplicationStatus">
            <summary>
            The replication status from one <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstance"/> to its replication target.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Admin.ServiceGrid.Space.ReplicationStatus.Active">
            <summary>
            The replication is active.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Admin.ServiceGrid.Space.ReplicationStatus.Disabled">
            <summary>
            The replication is disabled.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Admin.ServiceGrid.Space.ReplicationStatus.Disconnected">
            <summary>
            The replication is disconnected.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceType">
            <summary>
            Determines the type of a space proxy.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceType.Embedded">
            <summary>
            The space is embedded.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceType.LocalCache">
            <summary>
            The space is a local cache.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceType.LocalView">
            <summary>
            The space is a local view.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceType.Remote">
            <summary>
            The space is remote.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Space.Mirror.IMirrorOperations">
            <summary>
            Statistics on operations executed on mirror space.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Space.Mirror.IMirrorOperationStatistics">
            <summary>
            Represents specific mirror operation statistics.
            In a cluster that is active the numbers should be used as an estimation only, since statistics gathering is concurrent.
            In a cluster that does not have any activity the numbers are accurate.
            The statistics should comply to the following formula : 
            operationCount = successfulCount + failedCount + discardedCount.
            This formula will not have an exact fit in active cluster and should be used as an estimation only.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.Mirror.IMirrorOperationStatistics.OperationCount">
            <summary>
            Gets the total count of operations that were executed on the mirror.
            </summary>		
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.Mirror.IMirrorOperationStatistics.SuccessfulOperationCount">
            <summary>
            Gets the total count of operations that were successfully executed on the mirror.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.Mirror.IMirrorOperationStatistics.FailedOperationCount">
            <summary>
            Gets the total count of operations that failed on the mirror.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.Mirror.IMirrorOperationStatistics.DiscardedOperationCount">
            <summary>
            Gets the total count of operations that were discarded by the mirror.
            This applies to transient objects.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.Mirror.IMirrorOperationStatistics.InProgressOperationCount">
            <summary>
            Gets the count of operations that are currently in progress on the mirror
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.Mirror.IMirrorOperations.WriteOperationStatistics">
            <summary>
            Gets statistics of write operations.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.Mirror.IMirrorOperations.UpdateOperationStatistics">
            <summary>
            Gets statistics of update operations.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.Mirror.IMirrorOperations.RemoveOperationStatistics">
            <summary>
            Gets statistics of remove operations.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Space.Mirror.IMirrorStatistics">
            <summary>
            Interface for mirror operation statistics. All mirror operations are executed in bulks.
            Each bulk can contain several operations that can be one of the following:
            <see cref="F:GigaSpaces.Core.Persistency.BulkOperation.Write"/>, <see cref="F:GigaSpaces.Core.Persistency.BulkOperation.Update"/>, <see cref="F:GigaSpaces.Core.Persistency.BulkOperation.Remove"/>. <see cref="T:GigaSpaces.Core.Persistency.BulkItem"/>
            MirrorStatistics shows the total operation statistics, specific replication channel statistics and also 
            statistics per operation - <see cref="F:GigaSpaces.Core.Persistency.BulkOperation.Write"/>/<see cref="F:GigaSpaces.Core.Persistency.BulkOperation.Update"/>/<see cref="F:GigaSpaces.Core.Persistency.BulkOperation.Remove"/>.
            Mirror Channels statistics shows only operations that belong to specific space. This might be useful when monitoring
            a connection between specific space and the mirror.
            
            To get information about what is sent to the mirror by the cluster spaces, use the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.IReplicationStatistics"/> API.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Space.Mirror.IMirrorStatistics.GetSourceChannelStatistics(System.String)">
            <summary>
            Get the mirror statistics per specific space instance replication channel that replicates data to the mirror.
            Each space instance has it's own replication channel to the mirror.
            </summary>
            <param name="channelName">The name of the source channel. Format : "space-containerName:spaceName"</param>
            <returns>The mirror statistics of a specific channel.</returns>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.Mirror.IMirrorStatistics.AllSourceChannelStatistics">
            <summary>
            Gets all mirror cluster channels statistics.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Space.IReplicationStatistics">
            <summary>
            Represents the current state of the replication module.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.IReplicationStatistics.OutgoingReplication">
            <summary>
            Gets the outgoing replication statistics.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Space.IOutgoingReplication">
            <summary>
            Represents statistics of the outgoing replication.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.IOutgoingReplication.NumOfPacketsToReplicate">
            <summary>
            Gets the number of packets to replicate.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.IOutgoingReplication.LastKeyInRedoLog">
            <summary>
            Gets the last key in the redolog.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.IOutgoingReplication.FirstKeyInRedoLog">
            <summary>
            Gets the first key in the redolog.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.IOutgoingReplication.LastConfirmedKey">
            <summary>
            Gets the last confirmed key.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.IOutgoingReplication.RedoLogSize">
            <summary>
            Gets the redolog size.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.IOutgoingReplication.RedoLogMemoryPacketCount">
            <summary>
            Gets the number of packets awaiting replication that are stored inside the jvm memory.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.IOutgoingReplication.RedoLogExternalStoragePacketCount">
            <summary>
            Gets the number of packets awaiting replication that are stored outside of the jvm memory (on disk).
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.IOutgoingReplication.RedoLogExternalStorageSpaceUsed">
            <summary>
            Gets the number of bytes used in external storage to hold packets that are awaiting replication (on disk).
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.IOutgoingReplication.Channels">
            <summary>
            Gets statistics of the different outgoing replication channels.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Space.IOutgoingChannel">
            <summary>
            Represents statistics of an outgoing replication channel.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.IOutgoingChannel.LastConfirmedKeyFromTarget">
            <summary>
            Gets the last confirmed key from target.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.IOutgoingChannel.TargetMemberName">
            <summary>
            Gets the target member name.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.IOutgoingChannel.State">
            <summary>
            Gets the replication's state.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.IOutgoingChannel.LastKeyToReplicate">
            <summary>
            Gets the last key to replicate.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.IOutgoingChannel.ReplicationMode">
            <summary>
            Gets the replication mode.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.IOutgoingChannel.NumberOfReplicatedPackets">
            <summary>
            Gets the number of replicated packets.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.IOutgoingChannel.SendPacketsPerSecond">
            <summary>
            Gets the current rate of packet being sent per second.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.IOutgoingChannel.Inconsistent">
            <summary>
            Gets whether the channel is at inconsistent state
            </summary>		
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.IOutgoingChannel.InconsistencyReason">
            <summary>
            Gets a description for the channel inconsistent state or null if the channel is consistent
            </summary>		
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.IOutgoingChannel.SentBytes">
            <summary>
            Gets the total bytes sent (resets during fail-over).
            </summary>	
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.IOutgoingChannel.ReceivedBytes">
            <summary>
            Gets the total bytes received (resets during fail-over).
            </summary>	
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.IOutgoingChannel.SendBytesPerSecond">
            <summary>
            Gets the current rate of bytes being sent per second.
            </summary>	
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.IOutgoingChannel.ReceiveBytesPerSecond">
            <summary>
            Gets the current rate of bytes being received per second.
            </summary>						
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.IOutgoingChannel.SendBytesPerPacket">
            <summary>
            Gets the current rate of bytes being sent per replication packet.
            </summary>	
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.IOutgoingChannel.RedologRetainedSize">
            <summary>
            Gets the number of packets that are kept in the redolog for this channel.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.IOutgoingChannel.OperatingMode">
            <summary>
            Gets the current mode this channel is operation in, a sync channel can move to async operating mode
            upon errors and during reconnection while the accumulated data in the redolog is being replicated
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.IOutgoingChannel.TargetHostname">
            <summary>
            Gets the channel's target host name.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.IOutgoingChannel.TargetPid">
            <summary>
            Gets the channel's target process id.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Space.IReplicationTarget">
            <summary>
            Represents a replication target from one <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstance"/> to the
            other.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.IReplicationTarget.SpaceInstance">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstance"/> that will be replicated to.
            the value would be null if replication is disabled/disconnected.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.IReplicationTarget.ReplicationStatus">
            <summary>
            Gets the replication status.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.IReplicationTarget.MemberName">
            <summary>
            Gets the member name of this replication target.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace">
             <summary>
             A space is composed of several <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstance"/>s the form a
             topology.
            
             There are two main logical of topologies, one that has backups to each space instance, and
             one that is without backups. For example, a partitioned topology of 2 partitions, each with one
             backup will return 2 for <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace.NumberOfInstances"/> and 1 for <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace.NumberOfBackups"/>.
             A replicated topology of 4 will return 4 for <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace.NumberOfInstances"/> and 0 for
             <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace.NumberOfBackups"/>.
             A Space will be discovered once one of its <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstance"/>s
             have been discovered. It will be removed once there are no <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstance"/>s
             running.
             Provides the ability to start a statistics monitor on all current <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstance"/>s using
             <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.IStatisticsMonitor.StartStatisticsMonitor"/>. Newly discovered space instances will automatically use
             the statistics monitor as well.
             </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace.GetPartition(System.Int32)">
            <summary>
            Returns a partition for a specific partition id.
            </summary>
            <param name="partitionId">The partition id to obtain a partition for.</param>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace.WaitFor(System.Int32)">
            <summary>
            Waits for <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.SetDefaultTimeout(System.TimeSpan)"/> till the provided number of space instances are up.
            </summary>
            <returns>true if the provided number of instances are up, otherwise false.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace.WaitFor(System.Int32,System.TimeSpan)">
            <summary>
            Waits for the given timeout till the provided number of space instances are up.
            </summary>
            <param name="numberOfSpaceInstances">The number of space instances to wait for.</param>
            <param name="timeout">How long to wait for the instances to be up.</param>
            <returns>true if the provided number of instances are up, otherwise false.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace.WaitFor(System.Int32,GigaSpaces.Core.Admin.SpaceMode)">
            <summary>
            Waits for <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.SetDefaultTimeout(System.TimeSpan)"/> till the provided number of space
            instances of the provided space mode type are up.
            </summary>
            <param name="numberOfSpaceInstances">The number of space instances to wait for.</param>
            <param name="spaceMode">The space mode of the instances to wait for.</param>
            <returns>true if the provided number of instances are up, otherwise false.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace.WaitFor(System.Int32,GigaSpaces.Core.Admin.SpaceMode,System.TimeSpan)">
            <summary>
            Waits for the given timeout till the provided number of space instances of a specified space mode type are up.
            </summary>
            <param name="numberOfSpaceInstances">The number of space instances to wait for.</param>
            <param name="spaceMode">The space mode of the instances to wait for.</param>
            <param name="timeout">How long to wait for the instances to be up.</param>
            <returns>true if the provided number of instances are up, otherwise false.</returns>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace.Spaces">
            <summary>
            Gets the spaces this space is one of.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace.Uid">
            <summary>
            Gets the uid of the Space.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace.Name">
            <summary>
            Gets the name of the Space.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace.NumberOfInstances">
            <summary>
            Gets the number of instances as per the Space topology.
            the value would be 4 if we have a replicated topology and 2 if
            we have a 2 partitions each with one backup topology.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace.NumberOfBackups">
            <summary>
            Gets the number of backups per Space Instance.
            the value would be 1 when we deploy a 2 partitions each with
            one backup topology.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace.TotalNumberOfInstances">
            <summary>
            Gets the total number of instances.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace.Instances">
            <summary>
            Gets all the space instances that are currently discovered that are part of this Space topology.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace.Partitions">
            <summary>
            Gets all the partitions that form this Space topology.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace.Count">
            <summary>
            Gets the number of currently discovered space instances.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace.IsEmpty">
            <summary>
            Gets whether there are currently no space instances discovered.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace.SpaceProxy">
            <summary>
            Gets the clustered view of the space to operate on.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace.Statistics">
            <summary>
            Gets an aggregated view of all the statistics of all the instances.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace.PrimariesStatistics">
            <summary>
            Gets an aggregated view of all the statistics of the primary instances.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace.BackupsStatistics">
            <summary>
            Gets an aggregated view of all the statistics of the backup instances.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace.SpaceInstanceAdded">
            <summary>
            Occurs when <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstance"/> has been added.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace.SpaceInstanceRemoved">
            <summary>
            Occurs when <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstance"/> has been removed.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace.SpaceModeChanged">
            <summary>
            Occurs when <see cref="T:GigaSpaces.Core.Admin.SpaceMode"/> has changed.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace.ReplicationStatusChanged">
            <summary>
            Occurs when <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ReplicationStatus"/> has changed.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace.StatisticsChanged">
            <summary>
            Occurs when <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceStatistics"/> has changed.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace.InstanceStatisticsChanged">
            <summary>
            Occurs when <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics"/> has changed.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstance">
            <summary>
            A Space Instance is a single instance of a space running as a part of a space.
            
            For example, when deploying a 2 partitions each with one backup topology,
            there will be 4 space instances running.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstance.WaitForMode(GigaSpaces.Core.Admin.SpaceMode,System.TimeSpan)">
            <summary>
            Waits for the space instance to move to the provided space mode within a given timeout.
            </summary>
            <param name="requiredMode">The required mode to wait for.</param>
            <param name="timeout">How long to wait for the mode to change.</param>
            <returns>true if the mode changed successfully, otherwise false.</returns>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstance.InstanceId">
            <summary>
            Gets the instance id of the space (starting from 1).
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstance.BackupId">
            <summary>
            Gets the backup id (if it is a topology with backups) of the space instance.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstance.Mode">
            <summary>
            Gets the space mode, indicating if the space is primary or backup.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstance.SpaceProxy">
            <summary>
            Gets the direct proxy to the actual space instance.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstance.Statistics">
            <summary>
            Gets the space instance statistics.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstance.Space">
            <summary>
            Gets the space this instance is a part of.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstance.Partition">
            <summary>
            Gets the partition this instance is a part of.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstance.ReplicationTargets">
            <summary>
            Gets the replication targets this space instance is replicating to.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstance.SpaceModeChanged">
            <summary>
            Occurs when <see cref="T:GigaSpaces.Core.Admin.SpaceMode"/> has  changed.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstance.ReplicationStatusChanged">
            <summary>
            Occurs when <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ReplicationStatus"/> has changed.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstance.StatisticsChanged">
            <summary>
            Occurs when <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics"/> has changed.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics">
            <summary>
            Holds <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstance"/> level statistics.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics.NA">
            <summary>
            Gets whether the space instance statistics are available.
            </summary>	
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics.Timestamp">
            <summary>
            Gets the timestamp of the taken space instance statistics.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics.PreviousTimestamp">
            <summary>
            Gets the previous statistics timestamp.
            the value would be -1 if not available.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics.Previous">
            <summary>
            Gets the previous <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics.WriteCount">
            <summary>
            Gets the space instnace's write operations count.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics.WritePerSecond">
            <summary>
            Gets the space instance's write operations count per second.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics.ReadCount">
            <summary>
            Gets the space instance's read operations count.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics.ReadPerSecond">
            <summary>
            Gets the space instance's read operations count per second.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics.TakeCount">
            <summary>
            Gets the space instance's take operations count.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics.TakePerSecond">
            <summary>
            Gets the space instance's take operations count per second.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics.NotifyRegistrationCount">
            <summary>
            Gets the space instance's notify registration count.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics.NotifyRegistrationPerSecond">
            <summary>
            Gets the space instance's notify registration count per second.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics.CleanCount">
            <summary>
            Gets the space instance's clean operations count.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics.CleanPerSecond">
            <summary>
            Gets the space instance's clean operations count per second.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics.UpdateCount">
            <summary>
            Gets the space instance's update operations count.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics.UpdatePerSecond">
            <summary>
            Gets the space instance's update operations count per second.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics.NotifyTriggerCount">
            <summary>
            Gets the space instance's triggered (created) notifications count.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics.NotifyTriggerPerSecond">
            <summary>
            Gets the space instance's triggered (created) notifications count per second.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics.NotifyAckCount">
            <summary>
            Gets the space instance's acknowledged (sent) notifications count.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics.NotifyAckPerSecond">
            <summary>
            Gets the space instance's acknowledged (sent) notifications count per second.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics.ExecuteCount">
            <summary>
            Gets the space instance's execute operations count.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics.ExecutePerSecond">
            <summary>
            Gets the space instance's execute operations count per second.
            </summary>        
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics.RemoveCount">
            <summary>
            Gets the removed entries count.
            Entries removal occure due to lease expiration or lease cancellation.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics.RemovePerSecond">
            <summary>
            Gets the removed entries count per second.
            Entries removal occure due to lease expiration or lease cancellation.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics.ReplicationStatistics">
            <summary>
            Gets the space instance's replication statistics.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics.MirrorStatistics">
            <summary>
            Gets the mirror statistics if this space instance is a mirror.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics.ProcessorQueueSize">
            <summary>
            Gets the current number of pending tasks in the space processor queue.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics.NotifierQueueSize">
            <summary>
            Gets the current number of pending notifications that needs to be sent to different clients.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpacePartition">
            <summary>
            A Space partition is mainly used with partitioned topologies and holds all the
            <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstance"/>s that forms the partition. 
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpacePartition.PartitionId">
            <summary>
            Gets the partition id (starting from 0).
            Note, <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstance.InstanceId"/> starts from 1.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpacePartition.Instances">
            <summary>
            Gets all the space instances which forms the partition.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpacePartition.Space">
            <summary>
            Gets the Space which this Space Partition is a part of.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpacePartition.Primary">
            <summary>
            Gets the primary space instance.
            the value is null is currently there's no primary space instance.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpacePartition.Backup">
            <summary>
            Gets the first backup space instance.
            the value is null if there's currently no back space instance.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaces">
            <summary>
            Holds all the currently discovered <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace"/>s.	
            Provides simple means to get all the current Spaces, as well as registering for
            Space lifecycle (added and removed) events.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaces.GetSpaceByUID(System.String)">
            <summary>
            Returns a space matching the provided uid string.
            </summary>
            <param name="uid">The uid string to get the space for.</param>
            <returns><see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace"/> matching the provided uid string.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaces.GetSpaceByName(System.String)">
            <summary>
            Returns a space matching the provided space name.
            </summary>
            <param name="name">The space name to get the space for.</param>
            <returns><see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace"/> matching the provided space name.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaces.WaitFor(System.String)">
            <summary>
            Waits for <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.SetDefaultTimeout(System.TimeSpan)"/> till the provided space name is discovered.
            </summary>
            <param name="spaceName">The space name to wait for its discovery.</param>
            <returns>The discovered <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace"/> within the timeout, otherwise null.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaces.WaitFor(System.String,System.TimeSpan)">
            <summary>
            Waits for a given timeout till the space name is discovered.
            </summary>
            <param name="spaceName">The space name to wait for its discovery.</param>
            <param name="timeout">The time to wait for the space's discovery.</param>
            <returns>The discovered <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace"/> within the timeout, otherwise null.</returns>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaces.Spaces">
            <summary>
            Gets all the currently discovered <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace"/>s.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaces.Names">
            <summary>
            Gets a dictionary of <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace"/>s keyed by their space name.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaces.SpaceAdded">
            <summary>
            Occurs when <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace"/> has been added.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaces.SpaceRemoved">
            <summary>
            Occurs when <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace"/> has been removed.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaces.SpaceInstanceAdded">
            <summary>
            Occurs when <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstance"/> has been added.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaces.SpaceInstanceRemoved">
            <summary>
            Occurs when <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstance"/> has been removed.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaces.SpaceModeChanged">
            <summary>
            Occurs when <see cref="T:GigaSpaces.Core.Admin.SpaceMode"/> has changed.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaces.ReplicationStatusChanged">
            <summary>
            Occurs when <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ReplicationStatus"/> has changed.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaces.SpaceStatisticsChanged">
            <summary>
            Occurs when <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceStatistics"/> has changed.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaces.SpaceInstanceStatisticsChanged">
            <summary>
            Occurs when <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics"/> has changed.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceServiceDetails">
            <summary>
            A Space service defined within a processing unit.
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.ProcessingUnit.Containers.ServiceGrid.IServiceDetails">
            <summary>
            Details for a generic service that exists within a processing unit.
            </summary>	
        </member>
        <member name="P:GigaSpaces.XAP.ProcessingUnit.Containers.ServiceGrid.IServiceDetails.Id">
            <summary>
            Gets the service id.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.ProcessingUnit.Containers.ServiceGrid.IServiceDetails.ServiceType">
            <summary>
            Gets the service type. For example, space.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.ProcessingUnit.Containers.ServiceGrid.IServiceDetails.ServiceSubType">
            <summary>
            Gets the type of the serive details. For example, in case of space, it can be localcache, proxy, ... .
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.ProcessingUnit.Containers.ServiceGrid.IServiceDetails.Description">
            <summary>
            Gets a short description of the service.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.ProcessingUnit.Containers.ServiceGrid.IServiceDetails.LongDescription">
            <summary>
            Gets a long description of the service.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.ProcessingUnit.Containers.ServiceGrid.IServiceDetails.Attributes">
            <summary>
            Gets optional service properties.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceServiceDetails.Name">
            <summary>
            Gets the space member name.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceServiceDetails.ContainerName">
            <summary>
            Gets the space member container name.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceServiceDetails.ServiceID">
            <summary>
            Gets the space member service id.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceServiceDetails.SpaceType">
            <summary>
            Gets the space type.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceServiceDetails.Clustered">
            <summary>
            Gets whether this is a clustered space proxy.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceServiceDetails.Url">
            <summary>
            Gets the url of the space.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceServiceDetails.Mirror">
            <summary>
            Gets whether this is a mirror space.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceServiceDetails.LocalGatewayName">
            <summary>
            Gets the space local gateway name.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceStatistics">
            <summary>
            An aggregated statistics of all the currently discovered <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstance"/>S.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceStatistics.NA">
            <summary>
            Gets whether the space statistics are available.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceStatistics.Count">
            <summary>
            Gets the number of <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics"/> that are being aggregated.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceStatistics.Previous">
            <summary>
            Gets the previous space statistics.
            the value is null if there are no space statistics available.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceStatistics.Timestamp">
            <summary>
            Gets the timestamp of the taken space statistics.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceStatistics.WriteCount">
            <summary>
            Gets the aggregated <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics.WriteCount"/> of the discovered spaces.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceStatistics.WritePerSecond">
            <summary>
            Gets the aggregated <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics.WritePerSecond"/> of the discovered spaces.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceStatistics.ReadCount">
            <summary>
            Gets the aggregated <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics.ReadCount"/> of the discovered spaces.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceStatistics.ReadPerSecond">
            <summary>
            Gets the aggregated <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics.ReadPerSecond"/> of the discovered spaces.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceStatistics.TakeCount">
            <summary>
            Gets the aggregated <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics.TakeCount"/> of the discovered spaces.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceStatistics.TakePerSecond">
            <summary>
            Gets the aggregated <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics.TakePerSecond"/> of the discovered spaces.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceStatistics.NotifyRegistrationCount">
            <summary>
            Gets the aggregated <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics.NotifyRegistrationCount"/> of the discovered spaces.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceStatistics.NotifyRegistrationPerSecond">
            <summary>
            Gets the aggregated <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics.NotifyRegistrationPerSecond"/> of the discovered spaces.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceStatistics.CleanCount">
            <summary>
            Gets the aggregated <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics.CleanCount"/> of the discovered spaces.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceStatistics.CleanPerSecond">
            <summary>
            Gets the aggregated <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics.CleanPerSecond"/> of the discovered spaces.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceStatistics.UpdateCount">
            <summary>
            Gets the aggregated <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics.UpdateCount"/> of the discovered spaces.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceStatistics.UpdatePerSecond">
            <summary>
            Gets the aggregated <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics.ReadPerSecond"/> of the discovered spaces.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceStatistics.NotifyTriggerCount">
            <summary>
            Gets the aggregated <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics.NotifyTriggerCount"/> of the discovered spaces.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceStatistics.NotifyTriggerPerSecond">
            <summary>
            Gets the aggregated <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics.NotifyTriggerPerSecond"/> of the discovered spaces.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceStatistics.NotifyAckCount">
            <summary>
            Gets the aggregated <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics.NotifyAckCount"/> of the discovered spaces.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceStatistics.NotifyAckPerSecond">
            <summary>
            Gets the aggregated <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics.NotifyAckPerSecond"/> of the discovered spaces.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceStatistics.ExecuteCount">
            <summary>
            Gets the aggregated <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics.ExecuteCount"/> of the discovered spaces.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceStatistics.ExecutePerSecond">
            <summary>
            Gets the aggregated <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics.ExecutePerSecond"/> of the discovered spaces.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceStatistics.RemoveCount">
            <summary>
            Gets the aggregated <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics.RemoveCount"/> of the discovered spaces.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceStatistics.RemovePerSecond">
            <summary>
            Gets the aggregated <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstanceStatistics.ReadPerSecond"/> of the discovered spaces.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ReplicationStatusChangedEventArgs">
            <summary>
            An event indicating that the replication status was changed from a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstance"/> to
            its <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.IReplicationTarget"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ReplicationStatusChangedEventArgs.SpaceInstance">
            <summary>
            Gets the space instance which replicates to a replication target.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ReplicationStatusChangedEventArgs.ReplicationTarget">
            <summary>
            Gets the replication target the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstance"/> is replicating to.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ReplicationStatusChangedEventArgs.PreviousStatus">
            <summary>
            Gets the previous replication status.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.ReplicationStatusChangedEventArgs.NewStatus">
            <summary>
            Gets the new replication status.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceDeployment">
            <summary>
            A deployment of a pure <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace"/> processing unit.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceDeployment.#ctor(System.Boolean)">
            <summary>
            For internal use.
            </summary>
            <param name="dynamicProxy">dummy variable to seperate implicit dynamic proxy creation of this object then
            explicit user creation</param>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceDeployment.#ctor(System.String)">
            <summary>
            Constructs a new Space deployment with the space name that will be created (it will also
            be the processing unit name).
            </summary>
            <param name="spaceName">The space name.</param>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceDeployment.Partitioned(System.Int32,System.Int32)">
            <summary>
            A convenient method allowing to easily configure the space deployment to deploy a partitioned
            topology with a specified number of instances and a specified number of backups for each instance.
            </summary>
            <param name="numberOfParitions">The number of partitions the deployment will have.</param>
            <param name="numberOfBackups">The number of backups each partition will have.</param>
            <returns>The updated <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceDeployment"/>.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceDeployment.Replicated(System.Boolean,System.Int32)">
            <summary>
            A convenient method allowing to easily configure the space deployment to deploy a
            replicated (either sync or async) topology with a specified number of instances.
            </summary>
            <param name="async">Indicates whether the replication in asynchronous.</param>
            <param name="numberOfInstances">The number of space instances the deployment will have.</param>
            <returns>The updated <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceDeployment"/>.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceDeployment.ClusterSchema(System.String)">
            <summary>
            Sets the cluster schema of the space deployment.
            </summary>
            <param name="clusterSchema">The cluster schema to set for the space deployment.</param>
            <returns>The <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceDeployment"/> set with the specified cluster schema.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceDeployment.NumberOfInstances(System.Int32)">
            <summary>
            Sets the number of instances of the space deployment.
            </summary>
            <param name="numberOfInstances">The number of instances to set for the space deployment.</param>
            <returns>The <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceDeployment"/> set with the specified number of instances.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceDeployment.NumberOfBackups(System.Int32)">
            <summary>
            Sets the number of backups per instance of the space deployment.
            </summary>
            <param name="numberOfBackups">The number of backups per instance to set for the space deployment.</param>
            <returns>The <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceDeployment"/> set with the specified number of backups.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceDeployment.MaxInstancesPerVM(System.Int32)">
            <summary>
            Sets the maximum number of instances per virtual machine.
            
            On partitioned topology with backups topology, controls that a primary and a backup won't run
            on the same virtual machine if set to 1.
            
            On a non partitioned with backups topology, controls the maximum number of instances running on
            the same virtual machine.
            </summary>
            <param name="maxInstancesPerVM">The maximum instances per virtual machine.</param>
            <returns>The <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceDeployment"/> set with the specified maximum instances per virtual machine.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceDeployment.MaxInstancesPerMachine(System.Int32)">
             <summary>
             Sets the maximum number of instances per machine.
             
             On partitioned topology with backups topology, controls that a primary and a backup won't run
             on the same machine if set to 1.
            
             On a non partitioned with backups topology, controls the maximum number of instances running on
             the same machine.
             </summary>
             <param name="maxInstancesPerMachine">The maximum instances per machine.</param>
             <returns>The <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceDeployment"/> set with the specified maximum instances per machine.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceDeployment.MaxInstancesPerZone(System.String,System.Int32)">
             <summary>
             Sets the maximum number of instances per zone.
             
             On partitioned topology with backups topology, controls that a primary and a backup won't run
             on the same zone if set to 1. Note, for each zone this will have to be set.
            
             On a non partitioned with backups topology, controls the maximum number of instances running on
             he same zone.
             </summary>
             <param name="zone">The zone to set maximum instances for.</param>
             <param name="maxInstancesPerZone">The maximum instances per zone.</param>
             <returns>The <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceDeployment"/> set with the specified maximum instances per zone for a specific zone.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceDeployment.AddZone(System.String)">
            <summary>
            Adds a zone where the processing unit is allowed to be deployed on.
            </summary>
            <param name="zone">The zone in which the processing unit is allowed to be deployed on.</param>
            <returns>The <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceDeployment"/> set with the allowed zone to be deployed on.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceDeployment.SetContextProperty(System.String,System.String)">
            <summary>
            Sets a context deploy time property overriding any existing property with the same key within
            a processing unit configuration.
            </summary>
            <param name="key">The property's key.</param>
            <param name="value">The property's value.</param>
            <returns>The <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceDeployment"/> set with the specified property.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceDeployment.Secured(System.Boolean)">
            <summary>
            Will deploy a secured space. Note, by setting user details the space will be secured automatically.
            </summary>
            <param name="secured">Secured mode.</param>
            <returns>The <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceDeployment"/> set with the specified secured mode.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceDeployment.UserDetails(System.String,System.String)">
            <summary>
            Sets the username and password (effectively making the processing unit secured)
            for the processing unit deployment.
            </summary>
            <param name="userName">The username to be set for the space deployment.</param>
            <param name="password">The password to be set for the space deployment.</param>
            <returns>The <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceDeployment"/> set with the specified username and password.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceDeployment.SlaLocation(System.String)">
            <summary>
            Sets an external SLA definition location to be loaded.
            </summary>
            <param name="slaLocation">The SLA file location.</param>
            <returns>The <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceDeployment"/> set with the specified SLA definition location.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceDeployment.ToProcessingUnitDeployment">
            <summary>
            Transforms the space deployment to a processing unit deployment (it is a processing unit after all,
            that simply starts an embedded space).
            </summary>
            <returns>The <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.ProcessingUnitDeployment"/> converted from a space deployment.</returns>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceDeployment.SpaceName">
            <summary>
            Gets the Space name of the deployment.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceAddedEventArgs">
            <summary>
            Provides data for <see cref="E:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaces.SpaceAdded"/> event.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceAddedEventArgs.#ctor(GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace)">
            <summary>
            <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceAddedEventArgs"/> constructed with an <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace"/>.
            </summary>
            <param name="space">The <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace"/> the event holds.</param>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceAddedEventArgs.Space">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace"/> associated with the event.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceInstanceAddedEventArgs">
            <summary>
            Provides data for <see cref="E:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace.SpaceInstanceAdded"/> event.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceInstanceAddedEventArgs.SpaceInstance">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstance"/> that was added.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceInstanceRemovedEventArgs">
            <summary>
            Provides data for <see cref="E:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace.SpaceInstanceRemoved"/> event.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceInstanceRemovedEventArgs.SpaceInstance">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstance"/> that was removed.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceInstanceStatisticsChangedEventArgs">
            <summary>
            Provides data for <see cref="E:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaces.SpaceInstanceStatisticsChanged"/> event.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceInstanceStatisticsChangedEventArgs.SpaceInstance">
            <summary>
            Gets the Space Instance associated with this event.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceInstanceStatisticsChangedEventArgs.Statistics">
            <summary>
            Gets the statistics of the sampled Space Instance.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceModeChangedEventArgs">
            <summary>
            Provides data for <see cref="E:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaces.SpaceModeChanged"/> event.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceModeChangedEventArgs.SpaceInstance">
            <summary>
            Gets the Space Instance the space mode was changed for.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceModeChangedEventArgs.PreviousMode">
            <summary>
            Gets the previous space mode.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceModeChangedEventArgs.NewMode">
            <summary>
            Gets the new space mode.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceRemovedEventArgs">
            <summary>
            Provides data for <see cref="E:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaces.SpaceRemoved"/> event.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceRemovedEventArgs.Space">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace"/> that was removed.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceStatisticsChangedEventArgs">
            <summary>
            An event indicating that an <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace"/> level statistics has changed.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceStatisticsChangedEventArgs.Space">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace"/> associated with the event.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Space.SpaceStatisticsChangedEventArgs.Statistics">
            <summary>
            Gets the statistics of the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpace"/> sampled.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Transport.ILRMIInboundMonitoringDetails">
            <summary>
            Monitoring details of inbound lrmi communication, e.g hosted services that are serving remote invocation calls that are
            executed via remote proxies.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ILRMIInboundMonitoringDetails.ServicesMonitoringDetails">
            <summary>
            Gets the monitoring details of all the hosted services.
            </summary>		
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Transport.ILRMIMethodMonitoringDetails">
            <summary>
            Tracking details of a specific method.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ILRMIMethodMonitoringDetails.InvocationCount">
            <summary>
            Gets the number of time this method was invoked.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ILRMIMethodMonitoringDetails.GeneratedTraffic">
            <summary>
            Gets the total network traffic that was sent as a response to this method invocation.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ILRMIMethodMonitoringDetails.ReceivedTraffic">
            <summary>
            Gets the total network traffic that was received for this method invocation.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Transport.ILRMIMonitoringDetails">
            <summary>
            Monitoring details of the LRMI layer.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ILRMIMonitoringDetails.OutboundMonitoringDetails">
            <summary>
            Gets the outbound communication monitoring details.
            </summary>		
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ILRMIMonitoringDetails.InboundMonitoringDetails">
            <summary>
            Gets the inbound communication monitoring details.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Transport.ILRMIOutboundMonitoringDetails">
            <summary>
            Monitoring details of outbound lrmi communication, e.g proxies invoking methods on remote services.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ILRMIOutboundMonitoringDetails.ProxiesMonitoringDetails">
            <summary>
            Gets the monitoring details of all the remote proxies that exists in this Jvm. 
            </summary>		
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Transport.ILRMIProxyMonitoringDetails">
            <summary>
            Monitoring details of a single remote proxy.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ILRMIProxyMonitoringDetails.TotalReceivedTraffic">
            <summary>
            Gets the total network traffic that was received by this proxy.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ILRMIProxyMonitoringDetails.TotalGeneratedTraffic">
            <summary>
            Gets the total network traffic that was sent by this proxy. 
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ILRMIProxyMonitoringDetails.ConnectionUrl">
            <summary>
            Gets the connection url of this proxy endpoint. 
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ILRMIProxyMonitoringDetails.ServiceDetails">
            <summary>
            Gets the details of the service behind this proxy implements.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ILRMIProxyMonitoringDetails.TrackingDetails">
            <summary>
            Gets tracking details per method type.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Transport.ILRMIServiceClientMonitoringDetails">
            <summary>
            Tracking details of a single client on a specific service.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ILRMIServiceClientMonitoringDetails.TotalReceivedTraffic">
            <summary>
            Gets the total network traffic that was received by this client
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ILRMIServiceClientMonitoringDetails.TotalGeneratedTraffic">
            <summary>
            Gets the total network traffic that was sent to this client 
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ILRMIServiceClientMonitoringDetails.TrackingDetails">
            <summary>
            Gets tracking details per method type.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Transport.ILRMIServiceClientMonitoringId">
            <summary>
            Tracking id of a single client on a specific service.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ILRMIServiceClientMonitoringId.RemoteInetAddress">
            <summary>
            Gets the client address.
            </summary>		
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ILRMIServiceClientMonitoringId.SourcePid">
            <summary>
            Gets the client process id.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Transport.ILRMIServiceMonitoringDetails">
            <summary>
            Tracking details of a single hosted service.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ILRMIServiceMonitoringDetails.ServiceDetails">
            <summary>
            Gets the service details.
            </summary>		
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ILRMIServiceMonitoringDetails.ServiceClassLoaderDetails">
            <summary>
            Gets the class loader which holds the service.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ILRMIServiceMonitoringDetails.RemoteObjID">
            <summary>
            Gets the service remote id.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ILRMIServiceMonitoringDetails.ClientsTrackingDetails">
            <summary>
            Gets a mapping of tracking details of each client connected to this service.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransport">
            <summary>
            A transport holds information on the communication layer that is used by a grid component.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransport.Uid">
            <summary>
            Gets the UID of the transport.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransport.HostAddress">
            <summary>
            Gets the host address of the transport.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransport.HostName">
            <summary>
            Gets the host address of the transport.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransport.BindHost">
            <summary>
            Gets the host name or address the communication layer bounded on.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransport.Port">
            <summary>
            Gets the port number the communication layer is using.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransport.Details">
            <summary>
            Gets the details (non changeable) of the transport.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransport.LRMIMonitoring">
            <summary>
            Gets the LRMI monitoring of this transport.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransport.Statistics">
            <summary>
            Gets the transport statistics.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransport.StatisticsChanged">
            <summary>
            Occurs when <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportStatistics"/> has changed.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportDetails">
            <summary>
            Holds details (non changeable information) of a single transport.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportDetails.HostAddress">
            <summary>
            Gets the local host address of the transport.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportDetails.HostName">
            <summary>
            Gets the local host address of the transport.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportDetails.BindHost">
            <summary>
            Gets the host name or address the communication layer bounded on.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportDetails.Port">
            <summary>
            Gets the host name or address the communication layer bounded on.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportDetails.MinThreads">
            <summary>
            Gets the minimum number of threads configured for the transport communication
            layer thread pool.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportDetails.MaxThreads">
            <summary>
            Gets the maximum number of threads configured for the transport communication
            layer thread pool.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportDetails.SslEnabled">
            <summary>
            Gets whether ssl is enabled for the transport.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportLRMIMonitoring">
            <summary>
            Provide low level monitoring capabilities of the transport layer
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportLRMIMonitoring.EnableMonitoring">
            <summary>
            Enables lrmi monitoring (gigaspaces internal remoting layer), this will cause the target transport to start tracking lrmi
            activity which can later be viewed by calling.
            <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportLRMIMonitoring.FetchServicesMonitoringDetails"/>		
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportLRMIMonitoring.DisableMonitoring">
            <summary>
            Disabled lrmi monitoring (gigaspaces internal remoting layer).
            <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportLRMIMonitoring.EnableMonitoring"/>	
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportLRMIMonitoring.FetchServicesMonitoringDetails">
            <summary>
            Return lrmi (gigaspaces internal remoting layer) services monitoring details. This will only work if 
            lrmi monitoring was previously enabled, either by admin API, Jmx or system property. This will include monitoring
            details of inbound invocation on hosted service and outbound invocation via proxies that exists within the targeted transport (Jvm).
            <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportLRMIMonitoring.EnableMonitoring"/>	
            </summary>
            <returns>lrmi (gigaspaces internal remoting layer) services monitoring details</returns>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransports">
            <summary>
            Transports hold all the different <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransport"/>S that are currently discovered.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransports.GetTransports(System.String)">
            <summary>
            Returns all the transports bounded on the specified host.
            </summary>
            <param name="host">The host to return <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransport"/>S for.</param>
            <returns><see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransport"/>S for the specified host.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransports.GetTransportByHostAndPort(System.String,System.Int32)">
            <summary>
            Returns the transport that is bounded on the specified host and port.
            </summary>
            <param name="host">The host to return <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransport"/>S for.</param>
            <param name="port">The port to return <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransport"/>S for.</param>
            <returns><see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransport"/>S for the specified host and port.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransports.GetTransportByUID(System.String)">
            <summary>
            Returns <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransport"/> based on a specified UID.
            </summary>
            <param name="uid">The <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransport"/>'s UID.</param>
            <returns><see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransport"/> matched by a specified UID.</returns>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransports.Transports">
            <summary>
            Gets all the currently discovered transports.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransports.Count">
            <summary>
            Gets the number of currently discovered <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransports"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransports.Details">
            <summary>
            Gets the aggregated details (non changeable) of all the currently discovered <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransports"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransports.Statistics">
            <summary>
            Gets the aggregated statistics of all the currently discovered <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransports"/>.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransports.StatisticsChanged">
            <summary>
            Occurs when <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportsStatistics"/> has changed.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransports.TransportStatisticsChanged">
            <summary>
            Occurs when <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportStatistics"/> has changed.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportsDetails">
            <summary>
            Holds details (non changeable information) of a single transport.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportsDetails.MinThreads">
            <summary>
            Gets the total number of minimum threads defined within all current discovered <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransport"/>S.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportsDetails.MaxThreads">
            <summary>
            Gets the total number of maximum threads defined within all current discovered <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransport"/>s.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportsStatistics">
            <summary>
            An aggregated view of <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportStatistics"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportsStatistics.NA">
            <summary>
            Gets whether the statistics are not available.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportsStatistics.Count">
            <summary>
            Gets the number of <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportStatistics"/> that are aggregated.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportsStatistics.Timestamp">
            <summary>
            Gets the timestamp of the sampled statistics.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportsStatistics.PreviousTimestamp">
            <summary>
            Gets the previous statistics timestamp.
            the value is -1 if this is the first one.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportsStatistics.Previous">
            <summary>
            Gets the previous <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportsStatistics"/>.
            the value is null if this is the first one.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportsStatistics.Details">
            <summary>
            Gets the aggregated <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportsDetails"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportsStatistics.CompletedTaskCount">
            <summary>
            Gets the summation of all <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportStatistics.CompletedTaskCount"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportsStatistics.CompletedTaskPerSecond">
            <summary>
            Gets the summation of all transport <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportStatistics.CompletedTaskPerSecond"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportsStatistics.ActiveThreadsCount">
            <summary>
            Gets the summation of all transport <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportStatistics.ActiveThreadsCount"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportsStatistics.ActiveThreadsPerc">
            <summary>
            Gets the summation of all transport <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportStatistics.ActiveThreadsPerc"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportsStatistics.QueueSize">
            <summary>
            Gets the summation of all transport <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportStatistics.QueueSize"/>.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportStatistics">
            <summary>
            A transport level statistics.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportStatistics.NA">
            <summary>
            Gets whether the statistics are not available.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportStatistics.Timestamp">
            <summary>
            Gets the timestamp of the sampled statistics.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportStatistics.PreviousTimestamp">
            <summary>
            Gets the previous statistics timestamp.
            the value is -1 if this is the first one.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportStatistics.Details">
            <summary>
            Gets the transport details.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportStatistics.Previous">
            <summary>
            Gets the previous statistics sampled.
            the value is null if this is the first one.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportStatistics.CompletedTaskCount">
            <summary>
            Gets the number of communication level tasks that were completed.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportStatistics.CompletedTaskPerSecond">
            <summary>
            Gets the number of completed communication level tasks per second.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportStatistics.ActiveThreadsCount">
            <summary>
            Gets the number of active threads currently processing a communication task.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportStatistics.ActiveThreadsPerc">
            <summary>
            Gets the percentage of active threads out of the maximum threads.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportStatistics.QueueSize">
            <summary>
            Gets the number of currently waiting communication tasks to be executed.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Transport.TransportsStatisticsChangedEventArgs">
            <summary>
            An event indicating that an aggregated transports level statistics has changed.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.TransportsStatisticsChangedEventArgs.Transports">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransports"/> associated with this events.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.TransportsStatisticsChangedEventArgs.Statistics">
            <summary>
            Gets the aggregated <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportsStatistics"/> sampled.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Transport.TransportStatisticsChangedEventArgs">
            <summary>
            An event indicating that a transport level statistics has changed.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.TransportStatisticsChangedEventArgs.Transport">
            <summary>
            Gets the associated <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransport"/> with the event.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Transport.TransportStatisticsChangedEventArgs.Statistics">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransportStatistics"/> sampled.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachine">
            <summary>
            A virtual machine is a JVM that runs grid components.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachine.RunGc">
            <summary>
            Runs the garbage collector on the virtual machine.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachine.Uid">
            <summary>
            Gets the uid of the virtual machine.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachine.Details">
            <summary>
            Gets the details (non changeable information) of the virtual machine.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachine.Statistics">
            <summary>
            Gets the statistics of the virtual machine.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachine.GridServiceAgent">
            <summary>
            Gets the grid service agent started within this virtual machine.
            the value is null if no grid service agent was started within it.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachine.GridServiceManager">
            <summary>
            Gets the grid service manager started within this virtual machine.
            the value is null if no grid service manager was started within it.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachine.GridServiceContainer">
            <summary>
            Gets the grid service container started within this virtual machine.
            the value is null if no grid service manager was started within it.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachine.ProcessingUnitInstances">
            <summary>
            Gets the processing unit instances started within this virtual machine.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachine.SpaceInstances">
            <summary>
            Gets the space instances started within this virtual machine.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachine.ProcessingUnitInstanceAdded">
            <summary>
            Occurs when <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance"/> has been added.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachine.ProcessingUnitInstanceRemoved">
            <summary>
            Occurs when <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance"/> has been removed.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachine.SpaceInstanceAdded">
            <summary>
            Occurs when <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstance"/> has been added.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachine.SpaceInstanceRemoved">
            <summary>
            Occurs when <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstance"/> has been removed.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachine.VirtualMachineStatisticsChanged">
            <summary>
            Occurs when <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineStatistics"/> has changed.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineDetails">
            <summary>
            Holds details (non changeable information) of a single virtual machine.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineDetails.NA">
            <summary>
            Gets whether the details of the virtual machine are not available.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineDetails.Uid">
            <summary>
            Gets the uid of the virtual machine.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineDetails.VmName">
            <summary>
            Gets the virtual machine's name.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineDetails.VmVersion">
            <summary>
            Gets the virtual machine's version.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineDetails.VmVendor">
            <summary>
            Gets the virtual machine's vendor.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineDetails.StartTime">
            <summary>
            Gets the virtual machine's start time.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineDetails.Pid">
            <summary>
            Gets the process id of the virtual machine.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineDetails.BootClassPath">
            <summary>
            Gets the virtual machine's boot class path.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineDetails.ClassPath">
            <summary>
            Gets the virtual machine's class path.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineDetails.InputArguments">
            <summary>
            Gets the virtual machine's input arguments.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineDetails.SystemProperties">
            <summary>
            Gets the virtual machine's system properties as a dictionary.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineDetails.MemoryHeapInitInBytes">
            <summary>
            Gets the virtual machine's initial heap memory size in bytes.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineDetails.MemoryHeapInitInMB">
            <summary>
            Gets the virtual machine's initial heap memory size in mega bytes.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineDetails.MemoryHeapInitInGB">
            <summary>
            Gets the virtual machine's initial heap memory size in giga bytes.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineDetails.MemoryHeapMaxInBytes">
            <summary>
            Gets the virtual machine's maximum heap memory size in bytes.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineDetails.MemoryHeapMaxInMB">
            <summary>
            Gets the virtual machine's maximum heap memory size in mega bytes.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineDetails.MemoryHeapMaxInGB">
            <summary>
            Gets the virtual machine's maximum heap memory size in giga bytes.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineDetails.MemoryNonHeapInitInBytes">
            <summary>
            Gets the virtual machine's initial non-heap memory size in bytes.
            Non-heap memory is a memory allocated outside of the virtual machine.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineDetails.MemoryNonHeapInitInMB">
            <summary>
            Gets the virtual machine's initial non-heap memory size in mega bytes.
            Non-heap memory is a memory allocated outside of the virtual machine.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineDetails.MemoryNonHeapInitInGB">
            <summary>
            Gets the virtual machine's initial non-heap memory size in giga bytes.
            Non-heap memory is a memory allocated outside of the virtual machine.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineDetails.MemoryNonHeapMaxInBytes">
            <summary>
            Gets the virtual machine's maximum non-heap memory size in bytes.
            Non-heap memory is a memory allocated outside of the virtual machine.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineDetails.MemoryNonHeapMaxInMB">
            <summary>
            Gets the virtual machine's maximum non-heap memory size in mega bytes.
            Non-heap memory is a memory allocated outside of the virtual machine.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineDetails.MemoryNonHeapMaxInGB">
            <summary>
            Gets the virtual machine's maximum non-heap memory size in giga bytes.
            Non-heap memory is a memory allocated outside of the virtual machine.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachines">
            <summary>
            Virtual Machines hold all the different {@link VirtualMachine}s that are currently discovered.
            
            Provides simple means to get all the current virtual machines, as well as as registering for
            virtual machine lifecycle (added and removed) events.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachines.GetVirtualMachineByUID(System.String)">
            <summary>
            Return a virtual machine by its uid.
            </summary>
            <param name="uid">The UID of the matching <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachine"/>.</param>
            <returns>The matching <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachine"/> by the specified UID.</returns>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachines.VirtualMachines">
            <summary>
            Gets the currently discovered virtual machines.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachines.Details">
            <summary>
            Gets the aggregated details of all virtual machines.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachines.Statistics">
            <summary>
            Gets the aggregated statistics of all virtual machines.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachines.Uids">
            <summary>
            Gets a dictionary of virtual machines with their UIDs as keys.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachines.Count">
            <summary>
            Gets the number of virtual machines current discovered.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachines.IsEmpty">
            <summary>
            Gets whether there are no virtual machines.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachines.VirtualMachineAdded">
            <summary>
            Occurs when <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachine"/> has been added.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachines.VirtualMachineRemoved">
            <summary>
            Occurs when <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachine"/> has been removed.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachines.StatisticsChanged">
            <summary>
            Occurs when <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachinesStatistics"/> has changed.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachines.VirtualMachineStatisticsChanged">
            <summary>
            Occurs when a single <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineStatistics"/> has changed.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachinesDetails">
            <summary>
            An aggregated details of all the currently discovered virtual machines.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachinesDetails.Count">
            <summary>
            Gets the number of <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineDetails"/> that are being aggregated.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachinesDetails.VmName">
            <summary>
            Gets a list of the virtual machines' names.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachinesDetails.VmVersion">
            <summary>
            Gets a list of the virutal machines' versions.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachinesDetails.VmVendor">
            <summary>
            Gets a list of the virtual machines' vendors.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachinesDetails.MemoryHeapInitInBytes">
            <summary>
            Gets an aggregation of all the different virtual machines <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineDetails.MemoryHeapInitInBytes"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachinesDetails.MemoryHeapInitInMB">
            <summary>
            Gets an aggregation of all the different virtual machines <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineDetails.MemoryHeapInitInMB"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachinesDetails.MemoryHeapInitInGB">
            <summary>
            Gets an aggregation of all the different virtual machines <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineDetails.MemoryHeapInitInGB"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachinesDetails.MemoryHeapMaxInBytes">
            <summary>
            Gets an aggregation of all the different virtual machines <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineDetails.MemoryHeapMaxInBytes"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachinesDetails.MemoryHeapMaxInMB">
            <summary>
            Gets an aggregation of all the different virtual machines <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineDetails.MemoryHeapMaxInMB"/>.
            </summary>        
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachinesDetails.MemoryHeapMaxInGB">
            <summary>
            Gets an aggregation of all the different virtual machines <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineDetails.MemoryHeapMaxInGB"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachinesDetails.MemoryNonHeapInitInBytes">
            <summary>
            Gets an aggregation of all the different virtual machines <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineDetails.MemoryNonHeapInitInBytes"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachinesDetails.MemoryNonHeapInitInMB">
            <summary>
            Gets an aggregation of all the different virtual machines <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineDetails.MemoryNonHeapInitInMB"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachinesDetails.MemoryNonHeapInitInGB">
            <summary>
            Gets an aggregation of all the different virtual machines <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineDetails.MemoryNonHeapInitInGB"/>.
            </summary>        
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachinesDetails.MemoryNonHeapMaxInBytes">
            <summary>
            Gets an aggregation of all the different virtual machines <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineDetails.MemoryNonHeapMaxInBytes"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachinesDetails.MemoryNonHeapMaxInMB">
            <summary>
            Gets an aggregation of all the different virtual machines <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineDetails.MemoryNonHeapMaxInMB"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachinesDetails.MemoryNonHeapMaxInGB">
            <summary>
            Gets an aggregation of all the different virtual machines <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineDetails.MemoryNonHeapMaxInGB"/>.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachinesStatistics">
            <summary>
            An aggregated statistics view of all the different virtual machines currently discovered.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachinesStatistics.NA">
            <summary>
            Gets whether the statistics are not available.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachinesStatistics.Timestamp">
            <summary>
            Gets the timestamp of the sampled statistics.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachinesStatistics.PreviousTimestamp">
            <summary>
            Gets the previous timestamp of the statistics sampled.
            the value is -1 if this is the first one.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachinesStatistics.Previous">
            <summary>
            Gets the previous statistics sampled.
            the value is null if this is the first one.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachinesStatistics.Details">
            <summary>
            Gets the details of the all the virtual machines.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachinesStatistics.Count">
            <summary>
            Gets the number of statistics (virtual machines) aggregated.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachinesStatistics.Uptime">
            <summary>
            Gets an aggregation of all the different virtual machines <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineStatistics.Uptime"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachinesStatistics.MemoryHeapCommittedInBytes">
            <summary>
            Gets an aggregation of all the different virtual machines <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineStatistics.MemoryHeapCommittedInBytes"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachinesStatistics.MemoryHeapCommittedInMB">
            <summary>
            Gets an aggregation of all the different virtual machines <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineStatistics.MemoryHeapCommittedInMB"/>.
            </summary>        
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachinesStatistics.MemoryHeapCommittedInGB">
            <summary>
            Gets an aggregation of all the different virtual machines <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineStatistics.MemoryHeapCommittedInGB"/>.
            </summary>        
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachinesStatistics.MemoryHeapUsedInBytes">
            <summary>
            Gets an aggregation of all the different virtual machines <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineStatistics.MemoryHeapUsedInBytes"/>.
            </summary>        
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachinesStatistics.MemoryHeapUsedInMB">
            <summary>
            Gets an aggregation of all the different virtual machines <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineStatistics.MemoryHeapUsedInMB"/>.
            </summary>        
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachinesStatistics.MemoryHeapUsedInGB">
            <summary>
            Gets an aggregation of all the different virtual machines <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineStatistics.MemoryHeapUsedInGB"/>.
            </summary>        
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachinesStatistics.MemoryHeapUsedPerc">
            <summary>
            Gets the memory heap percentage from used to the max.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachinesStatistics.MemoryHeapCommittedUsedPerc">
            <summary>
            Gets the memory heap percentage from used to committed.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachinesStatistics.MemoryNonHeapCommittedInBytes">
            <summary>
            Gets an aggregation of all the different virtual machines <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineStatistics.MemoryNonHeapCommittedInBytes"/>.
            </summary>        		
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachinesStatistics.MemoryNonHeapCommittedInMB">
            <summary>
            Gets an aggregation of all the different virtual machines <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineStatistics.MemoryNonHeapCommittedInMB"/>.
            </summary>        		
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachinesStatistics.MemoryNonHeapCommittedInGB">
            <summary>
            Gets an aggregation of all the different virtual machines <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineStatistics.MemoryNonHeapCommittedInGB"/>.
            </summary>        		
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachinesStatistics.MemoryNonHeapUsedInBytes">
            <summary>
            Gets an aggregation of all the different virtual machines <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineStatistics.MemoryNonHeapUsedInBytes"/>.
            </summary>        		
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachinesStatistics.MemoryNonHeapUsedInMB">
            <summary>
            Gets an aggregation of all the different virtual machines <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineStatistics.MemoryNonHeapUsedInMB"/>.
            </summary>        		
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachinesStatistics.MemoryNonHeapUsedInGB">
            <summary>
            Gets an aggregation of all the different virtual machines <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineStatistics.MemoryNonHeapUsedInGB"/>.
            </summary>        		
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachinesStatistics.MemoryNonHeapUsedPerc">
            <summary>
            Gets the non heap memory percentage from used to the max.
            Non-heap memory is a memory allocated outside of the virtual machine.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachinesStatistics.MemoryNonHeapCommittedUsedPerc">
            <summary>
            Gets the non heap memory percentage from used to committed.
            Non-heap memory is a memory allocated outside of the virtual machine.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachinesStatistics.ThreadCount">
            <summary>
            Gets an aggregation of all the different virtual machines <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineStatistics.ThreadCount"/>.
            </summary>        		
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachinesStatistics.PeakThreadCount">
            <summary>
            Gets an aggregation of all the different virtual machines <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineStatistics.PeakThreadCount"/>.
            </summary>        		
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachinesStatistics.GcCollectionCount">
            <summary>
            Gets an aggregation of all the different virtual machines <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineStatistics.GcCollectionCount"/>.
            </summary>        		
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachinesStatistics.GcCollectionTime">
            <summary>
            Gets an aggregation of all the different virtual machines <see cref="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineStatistics.GcCollectionTime"/>.
            </summary>        		
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachinesStatistics.GcCollectionPerc">
            <summary>
            Gets the percentage of the gc collection time between the current sampled statistics
            and the previous one.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineStatistics">
            <summary>
            Holds statistics of a single virtual machine level.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineStatistics.NA">
            <summary>
            Gets whether the statistics are not available.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineStatistics.Details">
            <summary>
            Gets the details of the virtual machine.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineStatistics.Previous">
            <summary>
            Gets the previous statistics sampled.
            the value is null if this is the first one or bounded by the history size.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineStatistics.PreviousTimestamp">
            <summary>
            Gets the previous timestamp of the statistics sampled.
            the value is -1 if this is the first one.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineStatistics.Timestamp">
            <summary>
            Gets the timestamp of the sampled statistics.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineStatistics.Uptime">
            <summary>
            Gets the uptime of the virtual machine in milliseconds.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineStatistics.MemoryHeapCommittedInBytes">
            <summary>
            Gets the virtual machine's commited heap memory in bytes.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineStatistics.MemoryHeapCommittedInMB">
            <summary>
            Gets the virtual machine's commited heap memory in mega bytes.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineStatistics.MemoryHeapCommittedInGB">
            <summary>
            Gets the virtual machine's commited heap memory in giga bytes.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineStatistics.MemoryHeapUsedInBytes">
            <summary>
            Gets the virtual machine's used heap memory in bytes.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineStatistics.MemoryHeapUsedInMB">
            <summary>
            Gets the virtual machine's used heap memory in mega bytes.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineStatistics.MemoryHeapUsedInGB">
            <summary>
            Gets the virtual machine's used heap memory in giga bytes.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineStatistics.MemoryHeapUsedPerc">
            <summary>
            Gets the memory heap percentage from used to maximum.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineStatistics.MemoryHeapCommittedUsedPerc">
            <summary>
            Gets the memory heap percentage from used to committed.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineStatistics.MemoryNonHeapCommittedInBytes">
            <summary>
            Gets the virtual machine's commited non-heap memory in bytes.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineStatistics.MemoryNonHeapCommittedInMB">
            <summary>
            Gets the virtual machine's commited non-heap memory in mega bytes.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineStatistics.MemoryNonHeapCommittedInGB">
            <summary>
            Gets the virtual machine's commited non-heap memory in giga bytes.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineStatistics.MemoryNonHeapUsedInBytes">
            <summary>
            Gets the virtual machine's used non-heap memory in bytes.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineStatistics.MemoryNonHeapUsedInMB">
            <summary>
            Gets the virtual machine's used non-heap memory in mega bytes.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineStatistics.MemoryNonHeapUsedInGB">
            <summary>
            Gets the virtual machine's used non-heap memory in giga bytes.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineStatistics.MemoryNonHeapUsedPerc">
            <summary>
            Gets the memory non heap percentage from used to maximum.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineStatistics.MemoryNonHeapCommittedUsedPerc">
            <summary>
            Gets the memory non heap percentage from used to committed.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineStatistics.ThreadCount">
            <summary>
            Gets the virtual machine's threads count.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineStatistics.PeakThreadCount">
            <summary>
            Gets the virtual machine's threads count at peak.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineStatistics.GcCollectionCount">
            <summary>
            Gets the virtual machine's garbage collections count.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineStatistics.GcCollectionTime">
            <summary>
            Gets the virtual machine's garbage collections duration in milliseconds.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineStatistics.GcCollectionPerc">
            <summary>
            Gets the percentage of the gc collection time between the current sampled statistics and the previous one.
            the value is -1 if there's no previous gc collection time.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineStatistics.CpuPerc">
            <summary>
            Gets the virtual machine's usage cpu precentage.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachineStatistics.CpuPercFormatted">
            <summary>
            Gets the virtual machine's usage cpu precentage formatted as a string.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.VirtualMachineAddedEventArgs">
            <summary>
            Holds data for <see cref="E:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachines.VirtualMachineAdded"/> event.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.VirtualMachineAddedEventArgs.VirtualMachine">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachine"/> associated with this event.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.VirtualMachineRemovedEventArgs">
            <summary>
            Holds data for <see cref="E:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachines.VirtualMachineRemoved"/> event.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.VirtualMachineRemovedEventArgs.VirtualMachine">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachine"/> associated with this event.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.VirtualMachinesStatisticsChangedEventArgs">
            <summary>
            Holds data for <see cref="E:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachines.VirtualMachineStatisticsChanged"/> event.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.VirtualMachinesStatisticsChangedEventArgs.VirtualMachines">
            <summary>
            Gets the virtual machine associated with this event.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.VirtualMachinesStatisticsChangedEventArgs.Statistics">
            <summary>
            Gets the statistics of the sampled virtual machine.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.VirtualMachineStatisticsChangedEventArgs">
            <summary>
            Holds data for <see cref="E:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachines.VirtualMachineStatisticsChanged"/> event.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.VirtualMachineStatisticsChangedEventArgs.VirtualMachine">
            <summary>
            Gets the virtual machine associated with this event.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.VirtualMachineStatisticsChangedEventArgs.Statistics">
            <summary>
            Gets the statistics of the sampled virtual machine.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Zones.IZone">
            <summary>
            A zone is a grid isolation level, allowing to associate the different grid service components 
            such as <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgent"/>, <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManager"/> etc' to a specific
            zone. And then restrict deployments to a specific zone or zones.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Zones.IZone.Name">
            <summary>
            Gets the name of the zone.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Zones.IZone.Machines">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Machine.IMachines"/> running within the zone.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Zones.IZone.LookupServices">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.LookupService.ILookupServices"/> that are running within the zone.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Zones.IZone.GridServiceAgents">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Agent.IGridServiceAgents"/> running within the zone.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Zones.IZone.GridServiceManagers">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Manager.IGridServiceManagers"/> running within the zone.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Zones.IZone.GridServiceContainers">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Container.IGridServiceContainers"/> running within the zone.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Zones.IZone.VirtualMachines">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.VirtualMachine.IVirtualMachines"/> running within the zone.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Zones.IZone.HasGridComponents">
            <summary>
            Gets whether there are grid componets running within the zone.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Zones.IZone.Transports">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Transport.ITransports"/> "running"  within the zone.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Zones.IZone.ProcessingUnitInstances">
            <summary>
            Gets all the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance"/>s running within the zone.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.Zones.IZone.ProcessingUnitInstanceAdded">
            <summary>
            Occurs when a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance"/> is added to this zone.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.Zones.IZone.ProcessingUnitInstanceRemoved">
            <summary>
            Occurs when a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.ProcessingUnit.IProcessingUnitInstance"/> is removed from this zone.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Zones.IZone.SpaceInstances">
            <summary>
            Gets all the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstance"/>s running within the zone.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.Zones.IZone.SpaceInstanceAdded">
            <summary>
            Occurs when a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstance"/> is added to this zone.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.Zones.IZone.SpaceInstanceRemoved">
            <summary>
            Occurs when a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Space.ISpaceInstance"/> is removed from this zone.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Zones.IZones">
            <summary>
            Holds all the different <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Zones.IZone"/>s that are currently discovered.
            
            Provides simple means to get all the current zones, as well as as registering for
            zones lifecycle (added and removed) events.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Zones.IZones.GetByName(System.String)">
            <summary>
            Gets a discovered <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Zones.IZone"/> by its name.
            </summary>
            <param name="name">Zone's name.</param>
            <returns>The discovered zone; or null if no match has yet been discovered.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Zones.IZones.WaitFor(System.String)">
            <summary>
            Waits for <see cref="M:GigaSpaces.Core.Admin.ServiceGrid.IServiceGridAdmin.SetDefaultTimeout(System.TimeSpan)"/> till the zone with the given name is discovered.
            </summary>
            <param name="zoneByName">The zone name.</param>
            <returns>The discovered zone or null if the timeout elapsed.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.ServiceGrid.Zones.IZones.WaitFor(System.String,System.TimeSpan)">
            <summary>
            Waits for the given timeout till the zone with the given name is discovered.
            </summary>
            <param name="zoneByName">The zone name.</param>
            <param name="timeout">Time to wait.</param>
            <returns>The discovered zone or null if the timeout elapsed.</returns>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Zones.IZones.Zones">
            <summary>
            Gets all currently discovered zones.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Zones.IZones.Names">
            <summary>
            Gets a dictionary of zone names to <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Zones.IZone"/>s.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.Zones.IZones.ZoneAdded">
            <summary>
            Occurs when a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Zones.IZone"/> is added.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.ServiceGrid.Zones.IZones.ZoneRemoved">
            <summary>
            Occurs when a <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Zones.IZone"/> is removed.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Zones.ZoneAddedEventArgs">
            <summary>
            Provide data for <see cref="E:GigaSpaces.Core.Admin.ServiceGrid.Zones.IZones.ZoneAdded"/> event.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Zones.ZoneAddedEventArgs.Zone">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Zones.IZone"/> that was added.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.ServiceGrid.Zones.ZoneRemovedEventArgs">
            <summary>
            Provide data for <see cref="E:GigaSpaces.Core.Admin.ServiceGrid.Zones.IZones.ZoneRemoved"/> event.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.ServiceGrid.Zones.ZoneRemovedEventArgs.Zone">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Admin.ServiceGrid.Zones.IZone"/> that was removed.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.SpaceModeEventArgs">
            <summary>
            Encapsulates arguments related to space mode events
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.SpaceModeEventArgs.#ctor(GigaSpaces.Core.Admin.SpaceMode)">
            <summary>
            Create an instance of the event arguments with the specified values.
            </summary>
            <param name="mode">The space current running mode.</param>
        </member>
        <member name="P:GigaSpaces.Core.Admin.SpaceModeEventArgs.Mode">
            <summary>
            Gets the space current running mode
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Cache.CacheSyncMode">
            <summary>
            Determines cache synchronize mode
            <see cref="T:GigaSpaces.Core.Cache.ILocalCache"/>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Cache.CacheSyncMode.Push">
            <summary>
            Remote changes are pushed to the cache when they occur.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Cache.CacheSyncMode.Pull">
            <summary>
            Remote changes cause the cache to invalidate the changed data.
            Next access to the same data through the cache will bring the updated data
            from the remote space.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.IReadOnlySpaceProxy">
            <summary>
            Encapsulates a read-only space proxy.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.GetServerAdmin">
            <summary>
            Returns a server administration component for the current proxy.
            </summary>
            <returns>Server administration component for the current proxy.</returns>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.Ping">
            <summary>
            Checks whether the space is alive and accessible. 
            </summary>
            <returns>true if the space is alive, false otherwise</returns>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.Ping(System.Boolean)">
            <summary>
            Checks whether the space is alive and accessible. 
            </summary>
            <param name="throwOnError">Determines if an exception is thrown when the space is 
            not active.</param>
            <returns>true if the space is alive, false otherwise</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.SpaceException">Space was unreachable</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.Snapshot``1(``0)">
            <summary>
            Prepare the template for future operations on the proxy. Prepared templates are more
            efficient since the data is already serialized in the space format.
            </summary>
            <typeparam name="T">Type of template.</typeparam>
            <param name="template">template to prepare.</param>
            <returns>A handle to the prepared template.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.SpaceException">Communication error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.Snapshot``1(GigaSpaces.Core.IQuery{``0})">
            <summary>
            Prepare the template for future operations on the proxy. Prepared templates are more
            efficient since the data is already serialized in the space format.
            </summary>
            <typeparam name="T">Type of template.</typeparam>
            <param name="template">template to prepare.</param>
            <returns>A handle to the prepared template.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.SpaceException">Communication error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.SqlQueryException">The query template is an illegal SqlQuery.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.Count">
            <summary>
            Count any object from the space, visible under the default transaction.
            </summary>
            <returns>Number of matching entries.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.UnusableEntryException">A serialized field of the object being read cannot be deserialized.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.Count(System.Object)">
            <summary>
            Count any matching object from the space, visible under the default transaction.
            </summary>
            <param name="template">The template/query used for matching.</param>
            <returns>Number of matching entries.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.UnusableEntryException">A serialized field of the object being read cannot be deserialized.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.SqlQueryException">The query template is an illegal SqlQuery.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.Count(GigaSpaces.Core.ITransaction)">
            <summary>
            Count any object from the space, visible under the specified transaction.
            </summary>
            <param name="tx">The transaction (if any) under which to work.</param>
            <returns>Number of matching entries.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.UnusableEntryException">A serialized field of the object being read cannot be deserialized.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.Count(System.Object,GigaSpaces.Core.ITransaction)">
            <summary>
            Count any matching object from the space, visible under the specified transaction.
            </summary>
            <param name="template">The template/query used for matching.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <returns>Number of matching entries.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.UnusableEntryException">A serialized field of the object being read cannot be deserialized.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.SqlQueryException">The query template is an illegal SqlQuery.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.Count(System.Object,GigaSpaces.Core.ITransaction,GigaSpaces.Core.ReadModifiers)">
            <summary>
            Count any matching object from the space, visible under the specified transaction and modifiers.
            </summary>
            <param name="template">The template/query used for matching.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <param name="modifiers">The modifier(s) to define behaviour of locks.</param>
            <returns>Number of matching entries.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.UnusableEntryException">A serialized field of the object being read cannot be deserialized.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.SqlQueryException">The query template is an illegal SqlQuery.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.Read``1(``0)">
            <summary>
            Read any matching object from the space, blocking until one exists. Return null if the timeout expires.
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="template">The template used for matching.</param>
            <returns>A copy of the object read from the space (null if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.UnusableEntryException">A serialized field of the object being read cannot be deserialized.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.Read``1(``0,GigaSpaces.Core.ITransaction)">
            <summary>
            Read any matching object from the space, blocking until one exists. Return null if the timeout expires.
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="template">The template used for matching.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <returns>A copy of the object read from the space (null if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.UnusableEntryException">A serialized field of the object being read cannot be deserialized.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.Read``1(``0,System.Int64)">
            <summary>
            Read any matching object from the space, blocking until one exists. Return null if the timeout expires.
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="template">The template used for matching.</param>
            <param name="timeout">How long the client is willing to wait for a transactionally proper matching object.</param>
            <returns>A copy of the object read from the space (null if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.UnusableEntryException">A serialized field of the object being read cannot be deserialized.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.Read``1(``0,GigaSpaces.Core.ITransaction,System.Int64)">
            <summary>
            Read any matching object from the space, blocking until one exists. Return null if the timeout expires.
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="template">The template used for matching.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <param name="timeout">How long the client is willing to wait for a transactionally proper matching object.</param>
            <returns>A copy of the object read from the space (null if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.UnusableEntryException">A serialized field of the object being read cannot be deserialized.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>v
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.Read``1(``0,GigaSpaces.Core.ITransaction,System.Int64,GigaSpaces.Core.ReadModifiers)">
            <summary>
            Read (according to the modifiers) any matching object from the space, blocking until one exists. 
            Return null if the timeout expires.
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="template">The template used for matching.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <param name="timeout">How long the client is willing to wait for a transactionally proper matching object.</param>
            <param name="modifiers">The modifier(s) to define behaviour of locks.</param>
            <returns>A copy of the object read from the space (null if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.UnusableEntryException">A serialized field of the object being read cannot be deserialized.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.Read``1(GigaSpaces.Core.IQuery{``0})">
            <summary>
            Read any matching object from the space, blocking until one exists. Return null if the timeout expires.
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="query">The query used for matching.</param>
            <returns>A copy of the object read from the space (null if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.UnusableEntryException">A serialized field of the object being read cannot be deserialized.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.SqlQueryException">The query template is an illegal SqlQuery.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.Read``1(GigaSpaces.Core.IQuery{``0},GigaSpaces.Core.ITransaction)">
            <summary>
            Read any matching object from the space, blocking until one exists. Return null if the timeout expires.
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="query">The query used for matching.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <returns>A copy of the object read from the space (null if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.UnusableEntryException">A serialized field of the object being read cannot be deserialized.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.SqlQueryException">The query template is an illegal SqlQuery.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.Read``1(GigaSpaces.Core.IQuery{``0},System.Int64)">
            <summary>
            Read any matching object from the space, blocking until one exists. Return null if the timeout expires.
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="query">The query used for matching.</param>
            <param name="timeout">How long the client is willing to wait for a transactionally proper matching object.</param>
            <returns>A copy of the object read from the space (null if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.UnusableEntryException">A serialized field of the object being read cannot be deserialized.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.SqlQueryException">The query template is an illegal SqlQuery.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.Read``1(GigaSpaces.Core.IQuery{``0},GigaSpaces.Core.ITransaction,System.Int64)">
            <summary>
            Read any matching object from the space, blocking until one exists. Return null if the timeout expires.
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="query">The query used for matching.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <param name="timeout">How long the client is willing to wait for a transactionally proper matching object.</param>
            <returns>A copy of the object read from the space (null if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.UnusableEntryException">A serialized field of the object being read cannot be deserialized.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>v
            <exception cref="T:GigaSpaces.Core.Exceptions.SqlQueryException">The query template is an illegal SqlQuery.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.Read``1(GigaSpaces.Core.IQuery{``0},GigaSpaces.Core.ITransaction,System.Int64,GigaSpaces.Core.ReadModifiers)">
            <summary>
            Read (according to the modifiers) any matching object from the space, blocking until one exists. 
            Return null if the timeout expires.
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="query">The query used for matching.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <param name="timeout">How long the client is willing to wait for a transactionally proper matching object.</param>
            <param name="modifiers">The modifier(s) to define behaviour of locks.</param>
            <returns>A copy of the object read from the space (null if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.UnusableEntryException">A serialized field of the object being read cannot be deserialized.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.SqlQueryException">The query template is an illegal SqlQuery.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadById(System.Type,System.Object)">
            <summary>
            Reads an entry of the specified type with the specified id from the space. 
            Blocks up to the specified timeout (if any) until a matching entry is avaliable.
            </summary>
            <param name="type">Type of requeste entry.</param>
            <param name="id">ID of requested entry.</param>
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadById(System.Type,System.Object,System.Object)">
            <summary>
            Reads an entry of the specified type with the specified id from the space. 
            Blocks up to the specified timeout (if any) until a matching entry is avaliable.
            </summary>
            <param name="type">Type of requeste entry.</param>
            <param name="id">ID of requested entry.</param>
            <param name="routing">Value to select partition in clustered environment.</param>
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadById(System.Type,System.Object,System.Object,GigaSpaces.Core.ITransaction)">
            <summary>
            Reads an entry of the specified type with the specified id from the space. 
            Blocks up to the specified timeout (if any) until a matching entry is avaliable.
            </summary>
            <param name="type">Type of requeste entry.</param>
            <param name="id">ID of requested entry.</param>
            <param name="routing">Value to select partition in clustered environment.</param>
            <param name="tx">The transaction which this operation will participate in.</param>
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadById(System.Type,System.Object,System.Object,GigaSpaces.Core.ITransaction,System.Int64)">
            <summary>
            Reads an entry of the specified type with the specified id from the space. 
            Blocks up to the specified timeout (if any) until a matching entry is avaliable.
            </summary>
            <param name="type">Type of requeste entry.</param>
            <param name="id">ID of requested entry.</param>
            <param name="routing">Value to select partition in clustered environment.</param>
            <param name="tx">The transaction which this operation will participate in.</param>
            <param name="timeout">Maximum time to wait for a matching entry (in milliseconds).</param>
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadById(System.Type,System.Object,System.Object,GigaSpaces.Core.ITransaction,System.Int64,GigaSpaces.Core.ReadModifiers)">
            <summary>
            Reads an entry of the specified type with the specified id from the space. 
            Blocks up to the specified timeout (if any) until a matching entry is avaliable.
            </summary>
            <param name="type">Type of requeste entry.</param>
            <param name="id">ID of requested entry.</param>
            <param name="routing">Value to select partition in clustered environment.</param>
            <param name="tx">The transaction which this operation will participate in.</param>
            <param name="timeout">Maximum time to wait for a matching entry (in milliseconds).</param>
            <param name="modifiers">Additional modifiers to control operation behaviour.</param>
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadById``1(GigaSpaces.Core.IdQuery{``0})">
            <summary>
            Read an entry matching the specified id query from the space.
            Blocks up to the specified timeout (if any) until a matching entry is available.
            </summary>
            <typeparam name="T">Type of expected result entry.</typeparam>
            <param name="idQuery">The query to search by.</param>
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadById``1(GigaSpaces.Core.IdQuery{``0},GigaSpaces.Core.ITransaction)">
            <summary>
            Read an entry matching the specified id query from the space.
            Blocks up to the specified timeout (if any) until a matching entry is available.
            </summary>
            <typeparam name="T">Type of expected result entry.</typeparam>
            <param name="idQuery">The query to search by.</param>
            <param name="tx">The transaction which this operation will participate in.</param>
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadById``1(GigaSpaces.Core.IdQuery{``0},GigaSpaces.Core.ITransaction,System.Int64)">
            <summary>
            Read an entry matching the specified id query from the space.
            Blocks up to the specified timeout (if any) until a matching entry is available.
            </summary>
            <typeparam name="T">Type of expected result entry.</typeparam>
            <param name="idQuery">The query to search by.</param>
            <param name="tx">The transaction which this operation will participate in.</param>
            <param name="timeout">Maximum time to wait for a matching entry (in milliseconds).</param>		
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadById``1(GigaSpaces.Core.IdQuery{``0},GigaSpaces.Core.ITransaction,System.Int64,GigaSpaces.Core.ReadModifiers)">
            <summary>
            Read an entry matching the specified id query from the space.
            Blocks up to the specified timeout (if any) until a matching entry is available.
            </summary>
            <typeparam name="T">Type of expected result entry.</typeparam>
            <param name="idQuery">The query to search by.</param>
            <param name="tx">The transaction which this operation will participate in.</param>
            <param name="timeout">Maximum time to wait for a matching entry (in milliseconds).</param>
            <param name="modifiers">Additional modifiers to control operation behaviour.</param>
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadById``1(System.Object)">
            <summary>
            Reads an entry of the specified type with the specified id from the space. 
            Blocks up to the specified timeout (if any) until a matching entry is avaliable.
            </summary>
            <typeparam name="T">Type of requested entry.</typeparam>
            <param name="id">ID of requested entry.</param>
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadById``1(System.Object,System.Object)">
            <summary>
            Reads an entry of the specified type with the specified id from the space. 
            Blocks up to the specified timeout (if any) until a matching entry is avaliable.
            </summary>
            <typeparam name="T">Type of requested entry.</typeparam>
            <param name="id">ID of requested entry.</param>
            <param name="routing">Value to select partition in clustered environment.</param>
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadById``1(System.Object,System.Object,GigaSpaces.Core.ITransaction)">
            <summary>
            Reads an entry of the specified type with the specified id from the space. 
            Blocks up to the specified timeout (if any) until a matching entry is avaliable.
            </summary>
            <typeparam name="T">Type of requested entry.</typeparam>
            <param name="id">ID of requested entry.</param>
            <param name="routing">Value to select partition in clustered environment.</param>
            <param name="tx">The transaction which this operation will participate in.</param>
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadById``1(System.Object,System.Object,GigaSpaces.Core.ITransaction,System.Int64)">
            <summary>
            Reads an entry of the specified type with the specified id from the space. 
            Blocks up to the specified timeout (if any) until a matching entry is avaliable.
            </summary>
            <typeparam name="T">Type of requested entry.</typeparam>
            <param name="id">ID of requested entry.</param>
            <param name="routing">Value to select partition in clustered environment.</param>
            <param name="tx">The transaction which this operation will participate in.</param>
            <param name="timeout">Maximum time to wait for a matching entry (in milliseconds).</param>
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadById``1(System.Object,System.Object,GigaSpaces.Core.ITransaction,System.Int64,GigaSpaces.Core.ReadModifiers)">
            <summary>
            Reads an entry of the specified type with the specified id from the space. 
            Blocks up to the specified timeout (if any) until a matching entry is avaliable.
            </summary>
            <typeparam name="T">Type of requested entry.</typeparam>
            <param name="id">ID of requested entry.</param>
            <param name="routing">Value to select partition in clustered environment.</param>
            <param name="tx">The transaction which this operation will participate in.</param>
            <param name="timeout">Maximum time to wait for a matching entry (in milliseconds).</param>
            <param name="modifiers">Additional modifiers to control operation behaviour.</param>
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadByIds(System.Type,System.Object[])">
            <summary>
            Read objects from the space matching their IDs and the specified class.
            <para>Note, if the space is partitioned and the Class defines a specific property
            for its routing value (which means that the ID property is not used for routing),
            the operation will broadcast to all partitions.</para>
            <para>FIFO is not supported by this operation -
            the results are always ordered in correlation with the input IDs array.</para>
            </summary>
            <param name="type">The class.</param>
            <param name="ids">The object IDs array.</param>		
            <returns>An <see cref="T:GigaSpaces.Core.IReadByIdsResult`1"/> containing the matched results.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.ReadByIdsException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadByIds(System.Type,System.Object[],System.Object)">
            <summary>
            Read objects from the space matching their IDs, the specified class and routing key.
            <para>Note, if routing key is null and the cluster is partitioned, the operation will broadcast
            to all of the partitions.</para>
            <para>FIFO is not supported by this operation -
            the results are always ordered in correlation with the input IDs array.</para>
            </summary>
            <param name="type">The class.</param>
            <param name="ids">The object IDs array.</param>
            <param name="routingKey">The routing key of the provided object IDs.</param>		
            <returns>An <see cref="T:GigaSpaces.Core.IReadByIdsResult`1"/> containing the matched results.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.ReadByIdsException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadByIds(System.Type,System.Object[],System.Object,GigaSpaces.Core.ITransaction)">
            <summary>
            Read objects from the space matching their IDs, the specified class and routing key.
            <para>Note, if routing key is null and the cluster is partitioned, the operation will broadcast
            to all of the partitions.</para>
            <para>FIFO is not supported by this operation -
            the results are always ordered in correlation with the input IDs array.</para>
            </summary>
            <param name="type">The class.</param>
            <param name="ids">The object IDs array.</param>
            <param name="routingKey">The routing key of the provided object IDs.</param>
            <param name="tx">The transaction which this operation will participate in.</param>		
            <returns>An <see cref="T:GigaSpaces.Core.IReadByIdsResult`1"/> containing the matched results.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.ReadByIdsException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadByIds(System.Type,System.Object[],System.Object,GigaSpaces.Core.ITransaction,GigaSpaces.Core.ReadModifiers)">
            <summary>
            Read objects from the space matching their IDs, the specified class type and routing key, with the
            provided <see ref="GigaSpaces.Core.ReadModifiers"/>.
            <para>Note, if routing key is null and the cluster is partitioned, the operation will broadcast
            to all of the partitions.</para>
            <para>FIFO is not supported by this operation - 
            the results are always ordered in correlation with the input IDs array.</para>
            </summary>
            <param name="type">The class.</param>
            <param name="ids">The object IDs array.</param>
            <param name="routingKey">The routing key of the provided object IDs.</param>
            <param name="tx">The transaction which this operation will participate in.</param>
            <param name="modifiers">The read modifier to use (One or several of <see ref="GigaSpaces.Core.ReadModifiers"/>).</param>
            <returns>An <see cref="T:GigaSpaces.Core.IReadByIdsResult`1"/> reference containing the matched results.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.ReadByIdsException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadByIds(System.Type,System.Object[],System.Object[])">
            <summary>
            Read objects from the space matching their IDs, the specified class and the routing keys.
            <para>Note, the IDs array and routing keys array are correlated and should be of the same size.
            The routing key of ID i in the IDs array is the element at position i in the routing keys array.
            If routingKeys is null and the cluster is partitioned, the operation will broadcast to
            all of the partitions.</para>
            <para>FIFO is not supported by this operation -
            the results are always ordered in correlation with the input IDs array.</para>
            </summary>
            <param name="type">The class.</param>
            <param name="ids">The object IDs array.</param>
            <param name="routingKeys">The object routing keys array.</param>		
            <returns>An <see cref="T:GigaSpaces.Core.IReadByIdsResult`1"/> containing the matched results.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.ReadByIdsException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadByIds(System.Type,System.Object[],System.Object[],GigaSpaces.Core.ITransaction)">
            <summary>
            Read objects from the space matching their IDs, the specified class and the routing keys.
            <para>Note, the IDs array and routing keys array are correlated and should be of the same size.
            The routing key of ID i in the IDs array is the element at position i in the routing keys array.
            If routingKeys is null and the cluster is partitioned, the operation will broadcast to
            all of the partitions.</para>
            <para>FIFO is not supported by this operation -
            the results are always ordered in correlation with the input IDs array.</para>
            </summary>
            <param name="type">The class type.</param>
            <param name="ids">The object IDs array.</param>
            <param name="routingKeys">The object routing keys array.</param>
            <param name="tx">The transaction which this operation will participate in.</param>		
            <returns>An <see cref="T:GigaSpaces.Core.IReadByIdsResult`1"/> containing the matched results.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.ReadByIdsException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadByIds(System.Type,System.Object[],System.Object[],GigaSpaces.Core.ITransaction,GigaSpaces.Core.ReadModifiers)">
            <summary>
            Read objects from the space matching their IDs, the specified class and the routing keys, with the
            provided <see ref="GigaSpaces.Core.ReadModifiers"/>.
            <para>Note, the IDs array and routing keys array are correlated and should be of the same size.
            The routing key of ID i in the IDs array is the element at position i in the routing keys array.
            If routingKeys is null and the cluster is partitioned, the operation will broadcast to
            all of the partitions.</para>
            <para>FIFO is not supported by this operation -
            the results are always ordered in correlation with the input IDs array.</para>
            </summary>
            <param name="type">The class type.</param>
            <param name="ids">The object IDs array.</param>
            <param name="routingKeys">The object routing keys array.</param>
            <param name="tx">The transaction which this operation will participate in.</param>
            <param name="modifiers">The read modifier to use (One or several of <see ref="GigaSpaces.Core.ReadModifiers"/>).</param>
            <returns>An <see cref="T:GigaSpaces.Core.IReadByIdsResult`1"/> containing the matched results.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.ReadByIdsException">The operation had a failure.</exception>        
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadByIds``1(System.Object[])">
            <summary>
            Read objects from the space matching their IDs and the specified class.
            <para>Note, if the space is partitioned and the Class defines a specific property
            for its routing value (which means that the ID property is not used for routing),
            the operation will broadcast to all partitions.</para>
            <para>FIFO is not supported by this operation -
            the results are always ordered in correlation with the input IDs array.</para>
            </summary>
            <typeparam name="T">The class.</typeparam>		
            <param name="ids">The object IDs array.</param>		
            <returns>An <see cref="T:GigaSpaces.Core.IReadByIdsResult`1"/> containing the matched results.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.ReadByIdsException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadByIds``1(System.Object[],System.Object)">
            <summary>
            Read objects from the space matching their IDs, the specified class and routing key.
            <para>Note, if routing key is null and the cluster is partitioned, the operation will broadcast
            to all of the partitions.</para>
            <para>FIFO is not supported by this operation -
            the results are always ordered in correlation with the input IDs array.</para>
            </summary>
            <typeparam name="T">The class.</typeparam>		
            <param name="ids">The object IDs array.</param>
            <param name="routingKey">The routing key of the provided object IDs.</param>		
            <returns>An <see cref="T:GigaSpaces.Core.IReadByIdsResult`1"/> containing the matched results.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.ReadByIdsException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadByIds``1(System.Object[],System.Object,GigaSpaces.Core.ITransaction)">
            <summary>
            Read objects from the space matching their IDs, the specified class and routing key.
            <para>Note, if routing key is null and the cluster is partitioned, the operation will broadcast
            to all of the partitions.</para>
            <para>FIFO is not supported by this operation -
            the results are always ordered in correlation with the input IDs array.</para>
            </summary>
            <typeparam name="T">The class.</typeparam>		
            <param name="ids">The object IDs array.</param>
            <param name="routingKey">The routing key of the provided object IDs.</param>
            <param name="tx">The transaction which this operation will participate in.</param>		
            <returns>An <see cref="T:GigaSpaces.Core.IReadByIdsResult`1"/> containing the matched results.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.ReadByIdsException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadByIds``1(System.Object[],System.Object,GigaSpaces.Core.ITransaction,GigaSpaces.Core.ReadModifiers)">
            <summary>
            Read objects from the space matching their IDs, the specified class type and routing key, with the
            provided <see ref="GigaSpaces.Core.ReadModifiers"/>.
            <para>Note, if routing key is null and the cluster is partitioned, the operation will broadcast
            to all of the partitions.</para>
            <para>FIFO is not supported by this operation - 
            the results are always ordered in correlation with the input IDs array.</para>
            </summary>
            <typeparam name="T">The class.</typeparam>		
            <param name="ids">The object IDs array.</param>
            <param name="routingKey">The routing key of the provided object IDs.</param>
            <param name="tx">The transaction which this operation will participate in.</param>
            <param name="modifiers">The read modifier to use (One or several of <see ref="GigaSpaces.Core.ReadModifiers"/>).</param>
            <returns>An <see cref="T:GigaSpaces.Core.IReadByIdsResult`1"/> containing the matched results.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.ReadByIdsException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadByIds``1(System.Object[],System.Object[])">
            <summary>
            Read objects from the space matching their IDs, the specified class and the routing keys.
            <para>Note, the IDs array and routing keys array are correlated and should be of the same size.
            The routing key of ID i in the IDs array is the element at position i in the routing keys array.
            If routingKeys is null and the cluster is partitioned, the operation will broadcast to
            all of the partitions.</para>
            <para>FIFO is not supported by this operation -
            the results are always ordered in correlation with the input IDs array.</para>
            </summary>
            <typeparam name="T">The class.</typeparam>
            <param name="ids">The object IDs array.</param>
            <param name="routingKeys">The object routing keys array.</param>		
            <returns>An <see cref="T:GigaSpaces.Core.IReadByIdsResult`1"/> containing the matched results.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.ReadByIdsException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadByIds``1(System.Object[],System.Object[],GigaSpaces.Core.ITransaction)">
            <summary>
            Read objects from the space matching their IDs, the specified class and the routing keys.
            <para>Note, the IDs array and routing keys array are correlated and should be of the same size.
            The routing key of ID i in the IDs array is the element at position i in the routing keys array.
            If routingKeys is null and the cluster is partitioned, the operation will broadcast to
            all of the partitions.</para>
            <para>FIFO is not supported by this operation -
            the results are always ordered in correlation with the input IDs array.</para>
            </summary>
            <typeparam name="T">The class.</typeparam>
            <param name="ids">The object IDs array.</param>
            <param name="routingKeys">The object routing keys array.</param>		
            <param name="tx">The transaction which this operation will participate in.</param>
            <returns>An <see cref="T:GigaSpaces.Core.IReadByIdsResult`1"/> containing the matched results.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.ReadByIdsException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadByIds``1(System.Object[],System.Object[],GigaSpaces.Core.ITransaction,GigaSpaces.Core.ReadModifiers)">
            <summary>
            Read objects from the space matching their IDs, the specified class and the routing keys, with the
            provided <see ref="GigaSpaces.Core.ReadModifiers"/>.
            <para>Note, the IDs array and routing keys array are correlated and should be of the same size.
            The routing key of ID i in the IDs array is the element at position i in the routing keys array.
            If routingKeys is null and the cluster is partitioned, the operation will broadcast to
            all of the partitions.</para>
            <para>FIFO is not supported by this operation -
            the results are always ordered in correlation with the input IDs array.</para>
            </summary>
            <typeparam name="T">The class.</typeparam>
            <param name="ids">The object IDs array.</param>
            <param name="routingKeys">The object routing keys array.</param>		
            <param name="tx">The transaction which this operation will participate in.</param>
            <param name="modifiers">The read modifier to use (One or several of <see ref="GigaSpaces.Core.ReadModifiers"/>).</param>
            <returns>An <see cref="T:GigaSpaces.Core.IReadByIdsResult`1"/> containing the matched results.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.ReadByIdsException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadByIds``1(GigaSpaces.Core.IdsQuery{``0})">
            <summary>
            Read objects from the space matching the specified ids query. 		
            </summary>
            <typeparam name="T">Type of expected result entry.</typeparam>
            <param name="idsQuery">The query to search by.</param>
            <returns>An <see cref="T:GigaSpaces.Core.IReadByIdsResult`1"/> containing the matched results.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.ReadByIdsException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadByIds``1(GigaSpaces.Core.IdsQuery{``0},GigaSpaces.Core.ITransaction)">
            <summary>
            Read objects from the space matching the specified ids query.
            </summary>
            <typeparam name="T">Type of expected result entry.</typeparam>
            <param name="idsQuery">The query to search by.</param>
            <param name="tx">The transaction which this operation will participate in.</param>		
            <returns>An <see cref="T:GigaSpaces.Core.IReadByIdsResult`1"/> containing the matched results.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.ReadByIdsException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadByIds``1(GigaSpaces.Core.IdsQuery{``0},GigaSpaces.Core.ITransaction,GigaSpaces.Core.ReadModifiers)">
            <summary>
            Read objects from the space matching the specified ids query, 
            with the provided <see cref="P:GigaSpaces.Core.IReadOnlySpaceProxy.ReadModifiers"/>.
            </summary>
            <typeparam name="T">Type of expected result entry.</typeparam>
            <param name="idsQuery">The query to search by.</param>
            <param name="tx">The transaction which this operation will participate in.</param>
            <param name="modifiers">The read modifier to use (One or several of <see ref="GigaSpaces.Core.ReadModifiers"/>).</param>
            <returns>An <see cref="T:GigaSpaces.Core.IReadByIdsResult`1"/> containing the matched results.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.ReadByIdsException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.BeginRead``1(``0,GigaSpaces.Core.AsyncCallback{``0},System.Object)">
            <summary>
            Begins an asynchronous <see cref="M:GigaSpaces.Core.IReadOnlySpaceProxy.Read``1(``0,GigaSpaces.Core.ITransaction,System.Int64,GigaSpaces.Core.ReadModifiers)"/> operation.
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="template">The template used for matching.</param>
            <param name="userCallback">The method to be called when the asynchronous operation is complete.</param>
            <param name="stateObject">A user-provided object that distinguishes this particular asynchronous read request from other requests.</param>
            <returns>An IAsyncResult that references the asynchronous read.</returns>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.BeginRead``1(``0,GigaSpaces.Core.ITransaction,GigaSpaces.Core.AsyncCallback{``0},System.Object)">
            <summary>
            Begins an asynchronous <see cref="M:GigaSpaces.Core.IReadOnlySpaceProxy.Read``1(``0,GigaSpaces.Core.ITransaction,System.Int64,GigaSpaces.Core.ReadModifiers)"/> operation.
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="template">The template used for matching.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <param name="userCallback">The method to be called when the asynchronous operation is complete.</param>
            <param name="stateObject">A user-provided object that distinguishes this particular asynchronous read request from other requests.</param>
            <returns>An IAsyncResult that references the asynchronous read.</returns>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.BeginRead``1(``0,System.Int64,GigaSpaces.Core.AsyncCallback{``0},System.Object)">
            <summary>
            Begins an asynchronous <see cref="M:GigaSpaces.Core.IReadOnlySpaceProxy.Read``1(``0,GigaSpaces.Core.ITransaction,System.Int64,GigaSpaces.Core.ReadModifiers)"/> operation.
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="template">The template used for matching.</param>
            <param name="timeout">How long the client is willing to wait for a transactionally proper matching object.</param>
            <param name="userCallback">The method to be called when the asynchronous operation is complete.</param>
            <param name="stateObject">A user-provided object that distinguishes this particular asynchronous read request from other requests.</param>
            <returns>An IAsyncResult that references the asynchronous read.</returns>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.BeginRead``1(``0,GigaSpaces.Core.ITransaction,System.Int64,GigaSpaces.Core.AsyncCallback{``0},System.Object)">
            <summary>
            Begins an asynchronous <see cref="M:GigaSpaces.Core.IReadOnlySpaceProxy.Read``1(``0,GigaSpaces.Core.ITransaction,System.Int64,GigaSpaces.Core.ReadModifiers)"/> operation.
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="template">The template used for matching.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <param name="timeout">How long the client is willing to wait for a transactionally proper matching object.</param>
            <param name="userCallback">The method to be called when the asynchronous operation is complete.</param>
            <param name="stateObject">A user-provided object that distinguishes this particular asynchronous read request from other requests.</param>
            <returns>An IAsyncResult that references the asynchronous read.</returns>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.BeginRead``1(``0,GigaSpaces.Core.ITransaction,System.Int64,GigaSpaces.Core.ReadModifiers,GigaSpaces.Core.AsyncCallback{``0},System.Object)">
            <summary>
            Begins an asynchronous <see cref="M:GigaSpaces.Core.IReadOnlySpaceProxy.Read``1(``0,GigaSpaces.Core.ITransaction,System.Int64,GigaSpaces.Core.ReadModifiers)"/> operation.
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="template">The template used for matching.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <param name="timeout">How long the client is willing to wait for a transactionally proper matching object.</param>
            <param name="modifiers">The modifier(s) to define behaviour of locks.</param>
            <param name="userCallback">The method to be called when the asynchronous operation is complete.</param>
            <param name="stateObject">A user-provided object that distinguishes this particular asynchronous read request from other requests.</param>
            <returns>An IAsyncResult that references the asynchronous read.</returns>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.BeginRead``1(GigaSpaces.Core.IQuery{``0},GigaSpaces.Core.AsyncCallback{``0},System.Object)">
            <summary>
            Begins an asynchronous <see cref="M:GigaSpaces.Core.IReadOnlySpaceProxy.Read``1(GigaSpaces.Core.IQuery{``0},GigaSpaces.Core.ITransaction,System.Int64,GigaSpaces.Core.ReadModifiers)"/> operation.
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="query">The query used for matching.</param>
            <param name="userCallback">The method to be called when the asynchronous operation is complete.</param>
            <param name="stateObject">A user-provided object that distinguishes this particular asynchronous read request from other requests.</param>
            <returns>An IAsyncResult that references the asynchronous read.</returns>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.BeginRead``1(GigaSpaces.Core.IQuery{``0},GigaSpaces.Core.ITransaction,GigaSpaces.Core.AsyncCallback{``0},System.Object)">
            <summary>
            Begins an asynchronous <see cref="M:GigaSpaces.Core.IReadOnlySpaceProxy.Read``1(GigaSpaces.Core.IQuery{``0},GigaSpaces.Core.ITransaction,System.Int64,GigaSpaces.Core.ReadModifiers)"/> operation.
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="query">The query used for matching.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <param name="userCallback">The method to be called when the asynchronous operation is complete.</param>
            <param name="stateObject">A user-provided object that distinguishes this particular asynchronous read request from other requests.</param>
            <returns>An IAsyncResult that references the asynchronous read.</returns>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.BeginRead``1(GigaSpaces.Core.IQuery{``0},System.Int64,GigaSpaces.Core.AsyncCallback{``0},System.Object)">
            <summary>
            Begins an asynchronous <see cref="M:GigaSpaces.Core.IReadOnlySpaceProxy.Read``1(GigaSpaces.Core.IQuery{``0},GigaSpaces.Core.ITransaction,System.Int64,GigaSpaces.Core.ReadModifiers)"/> operation.
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="query">The query used for matching.</param>
            <param name="timeout">How long the client is willing to wait for a transactionally proper matching object.</param>
            <param name="userCallback">The method to be called when the asynchronous operation is complete.</param>
            <param name="stateObject">A user-provided object that distinguishes this particular asynchronous read request from other requests.</param>
            <returns>An IAsyncResult that references the asynchronous read.</returns>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.BeginRead``1(GigaSpaces.Core.IQuery{``0},GigaSpaces.Core.ITransaction,System.Int64,GigaSpaces.Core.AsyncCallback{``0},System.Object)">
            <summary>
            Begins an asynchronous <see cref="M:GigaSpaces.Core.IReadOnlySpaceProxy.Read``1(GigaSpaces.Core.IQuery{``0},GigaSpaces.Core.ITransaction,System.Int64,GigaSpaces.Core.ReadModifiers)"/> operation.
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="query">The query used for matching.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <param name="timeout">How long the client is willing to wait for a transactionally proper matching object.</param>		
            <param name="userCallback">The method to be called when the asynchronous operation is complete.</param>
            <param name="stateObject">A user-provided object that distinguishes this particular asynchronous read request from other requests.</param>
            <returns>An IAsyncResult that references the asynchronous read.</returns>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.BeginRead``1(GigaSpaces.Core.IQuery{``0},GigaSpaces.Core.ITransaction,System.Int64,GigaSpaces.Core.ReadModifiers,GigaSpaces.Core.AsyncCallback{``0},System.Object)">
            <summary>
            Begins an asynchronous <see cref="M:GigaSpaces.Core.IReadOnlySpaceProxy.Read``1(GigaSpaces.Core.IQuery{``0},GigaSpaces.Core.ITransaction,System.Int64,GigaSpaces.Core.ReadModifiers)"/> operation.
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="query">The query used for matching.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <param name="timeout">How long the client is willing to wait for a transactionally proper matching object.</param>
            <param name="modifiers">The modifier(s) to define behaviour of locks.</param>
            <param name="userCallback">The method to be called when the asynchronous operation is complete.</param>
            <param name="stateObject">A user-provided object that distinguishes this particular asynchronous read request from other requests.</param>
            <returns>An IAsyncResult that references the asynchronous read.</returns>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.EndRead``1(GigaSpaces.Core.IAsyncResult{``0})">
            <summary>
            Waits for the pending asynchronous read to complete.
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="asyncResult">The reference to the pending asynchornous request to wait for.</param>
            <returns>A copy of the object read from the space (null if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.UnusableEntryException">A serialized field of the object being read cannot be deserialized.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.SqlQueryException">The query template is an illegal SqlQuery.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadIfExists``1(``0)">
            <summary>
            Read any matching object from the space, returning null if there currently is none.
            Equivalent to read, except that blocking is done only if necessary to wait for transactional state to settle. 
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="template">The template used for matching.</param>
            <returns>A copy of the object read from the space (null if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.UnusableEntryException">A serialized field of the object being read cannot be deserialized.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadIfExists``1(``0,GigaSpaces.Core.ITransaction)">
            <summary>
            Read any matching object from the space, returning null if there currently is none.
            Equivalent to read, except that blocking is done only if necessary to wait for transactional state to settle. 
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="template">The template used for matching.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <returns>A copy of the object read from the space (null if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.UnusableEntryException">A serialized field of the object being read cannot be deserialized.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadIfExists``1(``0,System.Int64)">
            <summary>
            Read any matching object from the space, returning null if there currently is none.
            Equivalent to read, except that blocking is done only if necessary to wait for transactional state to settle. 
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="template">The template used for matching.</param>
            <param name="timeout">How long the client is willing to wait for a transactionally proper matching object.</param>
            <returns>A copy of the object read from the space (null if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.UnusableEntryException">A serialized field of the object being read cannot be deserialized.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadIfExists``1(``0,GigaSpaces.Core.ITransaction,System.Int64)">
            <summary>
            Read any matching object from the space, returning null if there currently is none.
            Equivalent to read, except that blocking is done only if necessary to wait for transactional state to settle. 
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="template">The template used for matching.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <param name="timeout">How long the client is willing to wait for a transactionally proper matching object.</param>
            <returns>A copy of the object read from the space (null if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.UnusableEntryException">A serialized field of the object being read cannot be deserialized.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadIfExists``1(``0,GigaSpaces.Core.ITransaction,System.Int64,GigaSpaces.Core.ReadModifiers)">
            <summary>
            Read (according to the modifiers) any matching object from the space, returning null if there currently is none.
            Equivalent to read, except that blocking is done only if necessary to wait for transactional state to settle. 
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="template">The template used for matching.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <param name="timeout">How long the client is willing to wait for a transactionally proper matching object.</param>
            <param name="modifiers">The modifier(s) to define behaviour of locks.</param>
            <returns>A copy of the object read from the space (null if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.UnusableEntryException">A serialized field of the object being read cannot be deserialized.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadIfExists``1(GigaSpaces.Core.IQuery{``0})">
            <summary>
            Read any matching object from the space, returning null if there currently is none.
            Equivalent to read, except that blocking is done only if necessary to wait for transactional state to settle. 
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="query">The query used for matching.</param>
            <returns>A copy of the object read from the space (null if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.UnusableEntryException">A serialized field of the object being read cannot be deserialized.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.SqlQueryException">The query template is an illegal SqlQuery.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadIfExists``1(GigaSpaces.Core.IQuery{``0},GigaSpaces.Core.ITransaction)">
            <summary>
            Read any matching object from the space, returning null if there currently is none.
            Equivalent to read, except that blocking is done only if necessary to wait for transactional state to settle. 
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="query">The query used for matching.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <returns>A copy of the object read from the space (null if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.UnusableEntryException">A serialized field of the object being read cannot be deserialized.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.SqlQueryException">The query template is an illegal SqlQuery.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadIfExists``1(GigaSpaces.Core.IQuery{``0},System.Int64)">
            <summary>
            Read any matching object from the space, returning null if there currently is none.
            Equivalent to read, except that blocking is done only if necessary to wait for transactional state to settle. 
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="query">The query used for matching.</param>
            <param name="timeout">How long the client is willing to wait for a transactionally proper matching object.</param>
            <returns>A copy of the object read from the space (null if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.UnusableEntryException">A serialized field of the object being read cannot be deserialized.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.SqlQueryException">The query template is an illegal SqlQuery.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadIfExists``1(GigaSpaces.Core.IQuery{``0},GigaSpaces.Core.ITransaction,System.Int64)">
            <summary>
            Read any matching object from the space, returning null if there currently is none.
            Equivalent to read, except that blocking is done only if necessary to wait for transactional state to settle. 
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="query">The query used for matching.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <param name="timeout">How long the client is willing to wait for a transactionally proper matching object.</param>
            <returns>A copy of the object read from the space (null if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.UnusableEntryException">A serialized field of the object being read cannot be deserialized.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.SqlQueryException">The query template is an illegal SqlQuery.</exception>		
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadIfExists``1(GigaSpaces.Core.IQuery{``0},GigaSpaces.Core.ITransaction,System.Int64,GigaSpaces.Core.ReadModifiers)">
            <summary>
            Read (according to the modifiers) any matching object from the space, returning null if there currently is none.
            Equivalent to read, except that blocking is done only if necessary to wait for transactional state to settle. 
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="query">The query used for matching.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <param name="timeout">How long the client is willing to wait for a transactionally proper matching object.</param>
            <param name="modifiers">The modifier(s) to define behaviour of locks.</param>
            <returns>A copy of the object read from the space (null if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.UnusableEntryException">A serialized field of the object being read cannot be deserialized.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.SqlQueryException">The query template is an illegal SqlQuery.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadIfExistsById(System.Type,System.Object)">
            <summary>
            Reads an entry of the specified type with the specified id from the space. 
            Blocks up to the specified timeout (if any) only if a matching entry exists and it is 
            necessary to wait for transactional state to settle.
            </summary>
            <param name="type">Type of requested entry.</param>
            <param name="id">ID of requested entry.</param>
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadIfExistsById(System.Type,System.Object,System.Object)">
            <summary>
            Reads an entry of the specified type with the specified id from the space. 
            Blocks up to the specified timeout (if any) only if a matching entry exists and it is 
            necessary to wait for transactional state to settle.
            </summary>
            <param name="type">Type of requested entry.</param>
            <param name="id">ID of requested entry.</param>
            <param name="routing">Value to select partition in clustered environment.</param>
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadIfExistsById(System.Type,System.Object,System.Object,GigaSpaces.Core.ITransaction)">
            <summary>
            Reads an entry of the specified type with the specified id from the space. 
            Blocks up to the specified timeout (if any) only if a matching entry exists and it is 
            necessary to wait for transactional state to settle.
            </summary>
            <param name="type">Type of requested entry.</param>
            <param name="id">ID of requested entry.</param>
            <param name="routing">Value to select partition in clustered environment.</param>
            <param name="tx">The transaction which this operation will participate in.</param>
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadIfExistsById(System.Type,System.Object,System.Object,GigaSpaces.Core.ITransaction,System.Int64)">
            <summary>
            Reads an entry of the specified type with the specified id from the space. 
            Blocks up to the specified timeout (if any) only if a matching entry exists and it is 
            necessary to wait for transactional state to settle.
            </summary>
            <param name="type">Type of requested entry.</param>
            <param name="id">ID of requested entry.</param>
            <param name="routing">Value to select partition in clustered environment.</param>
            <param name="tx">The transaction which this operation will participate in.</param>
            <param name="timeout">The maximum time to wait for a transactionally proper matching object.</param>
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadIfExistsById(System.Type,System.Object,System.Object,GigaSpaces.Core.ITransaction,System.Int64,GigaSpaces.Core.ReadModifiers)">
            <summary>
            Reads an entry of the specified type with the specified id from the space. 
            Blocks up to the specified timeout (if any) only if a matching entry exists and it is 
            necessary to wait for transactional state to settle.
            </summary>
            <param name="type">Type of requested entry.</param>
            <param name="id">ID of requested entry.</param>
            <param name="routing">Value to select partition in clustered environment.</param>
            <param name="tx">The transaction which this operation will participate in.</param>
            <param name="timeout">The maximum time to wait for a transactionally proper matching object.</param>
            <param name="modifiers">Additional modifiers to control operation behaviour.</param>
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadIfExistsById``1(GigaSpaces.Core.IdQuery{``0})">
            <summary>
            Read an entry matching the specified id query from the space.
            Blocks up to the specified timeout (if any) only if a matching entry exists and it is 
            necessary to wait for transactional state to settle.
            </summary>
            <typeparam name="T">Type of expected result entry.</typeparam>
            <param name="idQuery">The query to search by.</param>
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadIfExistsById``1(GigaSpaces.Core.IdQuery{``0},GigaSpaces.Core.ITransaction)">
            <summary>
            Read an entry matching the specified id query from the space.
            Blocks up to the specified timeout (if any) only if a matching entry exists and it is 
            necessary to wait for transactional state to settle.
            </summary>
            <typeparam name="T">Type of expected result entry.</typeparam>
            <param name="idQuery">The query to search by.</param>
            <param name="tx">The transaction which this operation will participate in.</param>
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadIfExistsById``1(GigaSpaces.Core.IdQuery{``0},GigaSpaces.Core.ITransaction,System.Int64)">
            <summary>
            Read an entry matching the specified id query from the space.
            Blocks up to the specified timeout (if any) only if a matching entry exists and it is 
            necessary to wait for transactional state to settle.
            </summary>
            <typeparam name="T">Type of expected result entry.</typeparam>
            <param name="idQuery">The query to search by.</param>
            <param name="tx">The transaction which this operation will participate in.</param>
            <param name="timeout">The maximum time to wait for a transactionally proper matching object.</param>		
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadIfExistsById``1(GigaSpaces.Core.IdQuery{``0},GigaSpaces.Core.ITransaction,System.Int64,GigaSpaces.Core.ReadModifiers)">
            <summary>
            Read an entry matching the specified id query from the space.
            Blocks up to the specified timeout (if any) only if a matching entry exists and it is 
            necessary to wait for transactional state to settle.
            </summary>
            <typeparam name="T">Type of expected result entry.</typeparam>
            <param name="idQuery">The query to search by.</param>
            <param name="tx">The transaction which this operation will participate in.</param>
            <param name="timeout">The maximum time to wait for a transactionally proper matching object.</param>
            <param name="modifiers">Additional modifiers to control operation behaviour.</param>
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadIfExistsById``1(System.Object)">
            <summary>
            Reads an entry of the specified type with the specified id from the space. 
            Blocks up to the specified timeout (if any) only if a matching entry exists and it is 
            necessary to wait for transactional state to settle.
            </summary>
            <typeparam name="T">Type of requested entry.</typeparam>
            <param name="id">ID of requested entry.</param>
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadIfExistsById``1(System.Object,System.Object)">
            <summary>
            Reads an entry of the specified type with the specified id from the space. 
            Blocks up to the specified timeout (if any) only if a matching entry exists and it is 
            necessary to wait for transactional state to settle.
            </summary>
            <typeparam name="T">Type of requested entry.</typeparam>
            <param name="id">ID of requested entry.</param>
            <param name="routing">Value to select partition in clustered environment.</param>
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadIfExistsById``1(System.Object,System.Object,GigaSpaces.Core.ITransaction)">
            <summary>
            Reads an entry of the specified type with the specified id from the space. 
            Blocks up to the specified timeout (if any) only if a matching entry exists and it is 
            necessary to wait for transactional state to settle.
            </summary>
            <typeparam name="T">Type of requested entry.</typeparam>
            <param name="id">ID of requested entry.</param>
            <param name="routing">Value to select partition in clustered environment.</param>
            <param name="tx">The transaction which this operation will participate in.</param>
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadIfExistsById``1(System.Object,System.Object,GigaSpaces.Core.ITransaction,System.Int64)">
            <summary>
            Reads an entry of the specified type with the specified id from the space. 
            Blocks up to the specified timeout (if any) only if a matching entry exists and it is 
            necessary to wait for transactional state to settle.
            </summary>
            <typeparam name="T">Type of requested entry.</typeparam>
            <param name="id">ID of requested entry.</param>
            <param name="routing">Value to select partition in clustered environment.</param>
            <param name="tx">The transaction which this operation will participate in.</param>
            <param name="timeout">The maximum time to wait for a transactionally proper matching object.</param>
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadIfExistsById``1(System.Object,System.Object,GigaSpaces.Core.ITransaction,System.Int64,GigaSpaces.Core.ReadModifiers)">
            <summary>
            Reads an entry of the specified type with the specified id from the space. 
            Blocks up to the specified timeout (if any) only if a matching entry exists and it is 
            necessary to wait for transactional state to settle.
            </summary>
            <typeparam name="T">Type of requested entry.</typeparam>
            <param name="id">ID of requested entry.</param>
            <param name="routing">Value to select partition in clustered environment.</param>
            <param name="tx">The transaction which this operation will participate in.</param>
            <param name="timeout">The maximum time to wait for a transactionally proper matching object.</param>
            <param name="modifiers">Additional modifiers to control operation behaviour.</param>
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadMultiple``1(``0)">
            <summary>
            Read an array of matching objects from the space.
            Matching is done as in read with no timeout. 
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="template">The template used for matching.</param>
            <returns>An array of objects read from the space (empty array if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.ReadMultipleException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadMultiple``1(``0,GigaSpaces.Core.ITransaction)">
            <summary>
            Read an array of matching objects from the space.
            Matching is done as in read with no timeout. 
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="template">The template used for matching.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <returns>An array of objects read from the space (empty array if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.ReadMultipleException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadMultiple``1(``0,System.Int32)">
            <summary>
            Read an array of matching objects from the space.
            Matching is done as in read with no timeout. 
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="template">The template used for matching.</param>
            <param name="maxItems">Maximum number of objects to return.</param>
            <returns>An array of objects read from the space (empty array if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.ReadMultipleException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadMultiple``1(``0,GigaSpaces.Core.ITransaction,System.Int32)">
            <summary>
            Read an array of matching objects from the space.
            Matching is done as in read with no timeout. 
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="template">The template used for matching.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <param name="maxItems">Maximum number of objects to return.</param>
            <returns>An array of objects read from the space (empty array if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.ReadMultipleException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadMultiple``1(``0,GigaSpaces.Core.ITransaction,System.Int32,GigaSpaces.Core.ReadModifiers)">
            <summary>
            Read (according to the modifiers) an array of matching objects from the space.
            Matching is done as in read with no timeout. 
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="template">The template used for matching.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <param name="maxItems">Maximum number of objects to return.</param>
            <param name="modifiers">The modifier(s) to define behaviour of locks.</param>
            <returns>An array of objects read from the space (empty array if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.ReadMultipleException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadMultiple``1(GigaSpaces.Core.IQuery{``0})">
            <summary>
            Read an array of matching objects from the space.
            Matching is done as in read with no timeout. 
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="query">The query used for matching.</param>
            <returns>An array of objects read from the space (empty array if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.ReadMultipleException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadMultiple``1(GigaSpaces.Core.IQuery{``0},GigaSpaces.Core.ITransaction)">
            <summary>
            Read an array of matching objects from the space.
            Matching is done as in read with no timeout. 
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="query">The query used for matching.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <returns>An array of objects read from the space (empty array if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.ReadMultipleException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadMultiple``1(GigaSpaces.Core.IQuery{``0},System.Int32)">
            <summary>
            Read an array of matching objects from the space.
            Matching is done as in read with no timeout. 
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="query">The query used for matching.</param>
            <param name="maxItems">Maximum number of objects to return.</param>
            <returns>An array of objects read from the space (empty array if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.ReadMultipleException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadMultiple``1(GigaSpaces.Core.IQuery{``0},GigaSpaces.Core.ITransaction,System.Int32)">
            <summary>
            Read an array of matching objects from the space.
            Matching is done as in read with no timeout. 
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="query">The query used for matching.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <param name="maxItems">Maximum number of objects to return.</param>
            <returns>An array of objects read from the space (empty array if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.ReadMultipleException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadMultiple``1(GigaSpaces.Core.IQuery{``0},GigaSpaces.Core.ITransaction,System.Int32,GigaSpaces.Core.ReadModifiers)">
            <summary>
            Read (according to the modifiers) an array of matching objects from the space.
            Matching is done as in read with no timeout. 
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="query">The query used for matching.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <param name="maxItems">Maximum number of objects to return.</param>
            <param name="modifiers">The modifier(s) to define behaviour of locks.</param>
            <returns>An array of objects read from the space (empty array if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.ReadMultipleException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.GetSpaceIterator``1(``0,GigaSpaces.Core.SpaceIteratorConfig)">
            <summary>
            Create an iterator over the space using the specified template(s) and settings.
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="template">The template used for matching.</param>
            <param name="config">Configuration for new space iterator.</param>
            <returns>A configured space iterator.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.GetSpaceIterator``1(System.Collections.Generic.ICollection{``0},GigaSpaces.Core.SpaceIteratorConfig)">
            <summary>
            Create an iterator over the space using the specified template(s) and settings.
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="templates">The template used for matching.</param>
            <param name="config">Configuration for new space iterator.</param>
            <returns>A configured space iterator.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.GetSpaceIterator``1(GigaSpaces.Core.IQuery{``0},GigaSpaces.Core.SpaceIteratorConfig)">
            <summary>
            Create an iterator over the space using the specified template(s) and settings.
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="query">The query used for matching.</param>
            <param name="config">Configuration for new space iterator.</param>
            <returns>A configured space iterator.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.SqlQueryException">The query template is an illegal SqlQuery.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.GetSpaceIterator``1(System.Collections.Generic.ICollection{GigaSpaces.Core.IQuery{``0}},GigaSpaces.Core.SpaceIteratorConfig)">
            <summary>
            Create an iterator over the space using the specified template(s) and settings.
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="queries">The queries used for matching.</param>
            <param name="config">Configuration for new space iterator.</param>
            <returns>A configured space iterator.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.SqlQueryException">The query template is an illegal SqlQuery.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.GetSpaceIterator``1(System.Collections.Generic.ICollection{``0},System.Collections.Generic.ICollection{GigaSpaces.Core.IQuery{``0}},GigaSpaces.Core.SpaceIteratorConfig)">
            <summary>
            Create an iterator over the space using the specified template(s) and settings.
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="templates">The template used for matching.</param>
            <param name="queries">The queries used for matching.</param>
            <param name="config">Configuration for new space iterator.</param>
            <returns>A configured space iterator.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.SqlQueryException">The query template is an illegal SqlQuery.</exception>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.CreateDataEventSession">
            <summary>
            Create a data event session using the default configuration and transaction.
            </summary>
            <returns>A configured data event session.</returns>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.CreateDataEventSession(GigaSpaces.Core.Events.EventSessionConfig)">
            <summary>
            Create a data event session using the specified configuration and default transaction.
            </summary>
            <param name="config">Session configuration to use.</param>
            <returns>A configured data event session.</returns>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.CreateDataEventSession(GigaSpaces.Core.ITransaction)">
            <summary>
            Create a data event session using the default configuration and specified transaction.
            </summary>
            <param name="tx">The transaction (if any) under which to work.</param>
            <returns>A configured data event session.</returns>
        </member>
        <member name="M:GigaSpaces.Core.IReadOnlySpaceProxy.CreateDataEventSession(GigaSpaces.Core.Events.EventSessionConfig,GigaSpaces.Core.ITransaction)">
            <summary>
            Create a data event session using the specified configuration and transaction.
            </summary>
            <param name="config">Session configuration to use.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <returns>A configured data event session.</returns>
        </member>
        <member name="P:GigaSpaces.Core.IReadOnlySpaceProxy.Name">
            <summary>
            Gets the name of this space.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.IReadOnlySpaceProxy.ReferentUid">
            <summary>
            Gets the unique uid of this space instance.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.IReadOnlySpaceProxy.Url">
            <summary>
            Returns the <see cref="T:GigaSpaces.Core.SpaceUrl"/> instance which was used to 
            initialize the space. 
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.IReadOnlySpaceProxy.FinderUrl">
            <summary>
            Returns the <see cref="T:GigaSpaces.Core.SpaceUrl"/> instance which was used to 
            find the space. 
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.IReadOnlySpaceProxy.Embedded">
            <summary>
            Returns true if the proxy is connected to an embedded space, otherwise false.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.IReadOnlySpaceProxy.Clustered">
            <summary>
            Returns true if the proxy is connected to a clustered space, otherwise false.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.IReadOnlySpaceProxy.Secured">
            <summary>
            Returns true if this space secured, otherwise false.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.IReadOnlySpaceProxy.Fifo">
            <summary>
            Gets or sets Fifo mode for proxy.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.IReadOnlySpaceProxy.ReadModifiers">
            <summary>
            Gets or sets the default <see cref="T:GigaSpaces.Core.ReadModifiers"/> associated with the proxy. 
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.IReadOnlySpaceProxy.DefaultTimeout">
            <summary>
            Gets or sets the default timeout associated with the proxy. 
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.IReadOnlySpaceProxy.DefaultMaxItems">
            <summary>
            Gets or sets the default maximum items associated with the proxy. 
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.IReadOnlySpaceProxy.DefaultLeaseTime">
            <summary>
            Gets or sets the default lease time associated with the proxy. 
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.IReadOnlySpaceProxy.DefaultEventSessionConfig">
            <summary>
            Gets or sets the default <see cref="T:GigaSpaces.Core.Events.EventSessionConfig"/> associated with the proxy. 
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.IReadOnlySpaceProxy.DefaultDataEventSession">
            <summary>
            Gets or sets the default <see cref="T:GigaSpaces.Core.Events.IDataEventSession"/> associated with the proxy. 
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.IReadOnlySpaceProxy.TypeManager">
            <summary>
            Gets the type manager of this space proxy instance.
            <see cref="T:GigaSpaces.Core.Metadata.ISpaceTypeManager"/>
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Metadata.ISpaceTypeManager">
            <summary>
            Interface encapsulating operations for getting and managing space type descriptors.
            Use <see cref="P:GigaSpaces.Core.IReadOnlySpaceProxy.TypeManager"/> to retrieve the type manager of a <code>SpaceProxy</code> instance.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Metadata.ISpaceTypeManager.GetTypeDescriptor(System.String)">
            <summary>
            Gets the space type descriptor of the specified type. 
            </summary>
            <param name="typeName">Name of type.</param>
            <returns>Type descriptor of the type, if available (if not, returns null).</returns>
        </member>
        <member name="M:GigaSpaces.Core.Metadata.ISpaceTypeManager.GetTypeDescriptor(System.Type)">
            <summary>
            Gets the space type descriptor of the specified type. 
            </summary>
            <param name="type">Type to get the type descriptor of.</param>
            <returns>Type descriptor of the type, if available (if not, returns null).</returns>
        </member>
        <member name="M:GigaSpaces.Core.Metadata.ISpaceTypeManager.RegisterTypeDescriptor(GigaSpaces.Core.Metadata.ISpaceTypeDescriptor)">
            <summary>
            Registers the specified space type descriptor in the space.         
            </summary>
            <param name="typeDescriptor">Space type descriptor to register.</param>
        </member>
        <member name="M:GigaSpaces.Core.Metadata.ISpaceTypeManager.RegisterTypeDescriptor(System.Type)">
            <summary>
            Creates a type descriptor for the specified type and registers it in the space.
            </summary>
            <param name="type">Type to register in the space.</param>
        </member>
        <member name="T:GigaSpaces.Core.ISpaceProxy">
            <summary>
            Encapsulates a space proxy.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.CreateLocalview(GigaSpaces.Core.View[])">
            <summary>
            Create a local view over the current proxy using the specified view(s).
            </summary>
            <param name="views">View(s) for matching in local view.</param>
            <returns>A configured local view.</returns>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.CreateLocalTransaction">
            <summary>
            Create a local transaction.
            </summary>
            <returns>A new local transaction.</returns>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.CreateLocalTransaction(System.Int64)">
            <summary>
            Create a local transaction.
            </summary>
            <param name="timeout">Maximun time to wait for transaction creation.</param>
            <returns>A new local transaction.</returns>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.Clean">
            <summary>
            Deletes all data and metadata from the space, terminates all threads and re-initializes the engine.
            </summary>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.Clean(System.Type)">
            <summary>
            Deletes all data and metadata of the specified type from the space.
            </summary>
            <param name="type">Type to remove from space.</param>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.Clear">
            <summary>
            Removes all entries under the default transaction from the space.
            </summary>
            <returns>Number of removed entries.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.ClearException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.Clear(System.Object)">
            <summary>
            Removes all matching entries under the default transaction from the space.
            </summary>
            <param name="template">The template/query used for matching.</param>
            <returns>Number of removed entries.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.ClearException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.Clear(GigaSpaces.Core.ITransaction)">
            <summary>
            Removes all entries under the specified transaction from the space.
            </summary>
            <param name="tx">The transaction (if any) under which to work.</param>
            <returns>Number of removed entries.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.ClearException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.Clear(System.Object,GigaSpaces.Core.ITransaction)">
            <summary>
            Removes all matching entries under the specified transaction from the space.
            </summary>
            <param name="template">The template/query used for matching.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <returns>Number of removed entries.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.ClearException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.Clear(System.Object,GigaSpaces.Core.ITransaction,GigaSpaces.Core.TakeModifiers)">
            <summary>
            Removes all matching entries under the specified transaction from the space.
            </summary>
            <param name="template">The template/query used for matching.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <param name="modifiers">The modifier(s) to define advanced operation behaviour.</param>
            <returns>Number of removed entries.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.ClearException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.Take``1(``0)">
            <summary>
            Take any matching object from the space, blocking until one exists. Return null if the timeout expires.
            </summary>
            <typeparam name="T">Type of object to take.</typeparam>
            <param name="template">The template used for matching.</param>
            <returns>The object taken from the space (null if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.UnusableEntryException">A serialized field of the object being read cannot be deserialized.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.EntryVersionConflictException">Operation is rejected as a result of optimistic locking version conflict.</exception>		
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.Take``1(``0,GigaSpaces.Core.ITransaction)">
            <summary>
            Take any matching object from the space, blocking until one exists. Return null if the timeout expires.
            </summary>
            <typeparam name="T">Type of object to take.</typeparam>
            <param name="template">The template used for matching.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <returns>The object taken from the space (null if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.UnusableEntryException">A serialized field of the object being read cannot be deserialized.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.EntryVersionConflictException">Operation is rejected as a result of optimistic locking version conflict.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.Take``1(``0,System.Int64)">
            <summary>
            Take any matching object from the space, blocking until one exists. Return null if the timeout expires.
            </summary>
            <typeparam name="T">Type of object to take.</typeparam>
            <param name="template">The template used for matching.</param>
            <param name="timeout">How long the client is willing to wait for a transactionally proper matching object.</param>
            <returns>The object taken from the space (null if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.UnusableEntryException">A serialized field of the object being read cannot be deserialized.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.EntryVersionConflictException">Operation is rejected as a result of optimistic locking version conflict.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.Take``1(``0,GigaSpaces.Core.ITransaction,System.Int64)">
            <summary>
            Take any matching object from the space, blocking until one exists. Return null if the timeout expires.
            </summary>
            <typeparam name="T">Type of object to take.</typeparam>
            <param name="template">The template used for matching.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <param name="timeout">How long the client is willing to wait for a transactionally proper matching object.</param>
            <returns>The object taken from the space (null if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.UnusableEntryException">A serialized field of the object being read cannot be deserialized.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.EntryVersionConflictException">Operation is rejected as a result of optimistic locking version conflict.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.Take``1(``0,GigaSpaces.Core.ITransaction,System.Int64,GigaSpaces.Core.TakeModifiers)">
            <summary>
            Take any matching object from the space, blocking until one exists. Return null if the timeout expires.
            </summary>
            <typeparam name="T">Type of object to take.</typeparam>
            <param name="template">The template used for matching.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <param name="timeout">How long the client is willing to wait for a transactionally proper matching object.</param>
            <param name="modifiers">The modifier(s) to define behaviour of the operation.</param>
            <returns>The object taken from the space (null if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.UnusableEntryException">A serialized field of the object being read cannot be deserialized.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.EntryVersionConflictException">Operation is rejected as a result of optimistic locking version conflict.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.Take``1(GigaSpaces.Core.IQuery{``0})">
            <summary>
            Take any matching object from the space, blocking until one exists. Return null if the timeout expires.
            </summary>
            <typeparam name="T">Type of object to take.</typeparam>
            <param name="query">The query used for matching.</param>
            <returns>The object taken from the space (null if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.UnusableEntryException">A serialized field of the object being read cannot be deserialized.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.EntryVersionConflictException">Operation is rejected as a result of optimistic locking version conflict.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.SqlQueryException">The query template is an illegal SqlQuery.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.Take``1(GigaSpaces.Core.IQuery{``0},GigaSpaces.Core.ITransaction)">
            <summary>
            Take any matching object from the space, blocking until one exists. Return null if the timeout expires.
            </summary>
            <typeparam name="T">Type of object to take.</typeparam>
            <param name="query">The query used for matching.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <returns>The object taken from the space (null if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.UnusableEntryException">A serialized field of the object being read cannot be deserialized.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.EntryVersionConflictException">Operation is rejected as a result of optimistic locking version conflict.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.SqlQueryException">The query template is an illegal SqlQuery.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.Take``1(GigaSpaces.Core.IQuery{``0},System.Int64)">
            <summary>
            Take any matching object from the space, blocking until one exists. Return null if the timeout expires.
            </summary>
            <typeparam name="T">Type of object to take.</typeparam>
            <param name="query">The query used for matching.</param>
            <param name="timeout">How long the client is willing to wait for a transactionally proper matching object.</param>
            <returns>The object taken from the space (null if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.UnusableEntryException">A serialized field of the object being read cannot be deserialized.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.EntryVersionConflictException">Operation is rejected as a result of optimistic locking version conflict.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.SqlQueryException">The query template is an illegal SqlQuery.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.Take``1(GigaSpaces.Core.IQuery{``0},GigaSpaces.Core.ITransaction,System.Int64)">
            <summary>
            Take any matching object from the space, blocking until one exists. Return null if the timeout expires.
            </summary>
            <typeparam name="T">Type of object to take.</typeparam>
            <param name="query">The query used for matching.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <param name="timeout">How long the client is willing to wait for a transactionally proper matching object.</param>
            <returns>The object taken from the space (null if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.UnusableEntryException">A serialized field of the object being read cannot be deserialized.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.EntryVersionConflictException">Operation is rejected as a result of optimistic locking version conflict.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.SqlQueryException">The query template is an illegal SqlQuery.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.Take``1(GigaSpaces.Core.IQuery{``0},GigaSpaces.Core.ITransaction,System.Int64,GigaSpaces.Core.TakeModifiers)">
            <summary>
            Take any matching object from the space, blocking until one exists. Return null if the timeout expires.
            </summary>
            <typeparam name="T">Type of object to take.</typeparam>
            <param name="query">The query used for matching.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <param name="timeout">How long the client is willing to wait for a transactionally proper matching object.</param>
            <param name="modifiers">The modifier(s) to define behaviour of the operation.</param>
            <returns>The object taken from the space (null if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.UnusableEntryException">A serialized field of the object being read cannot be deserialized.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.EntryVersionConflictException">Operation is rejected as a result of optimistic locking version conflict.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.SqlQueryException">The query template is an illegal SqlQuery.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeById(System.Type,System.Object)">
            <summary>
            Takes (removes) an entry of the specified type with the specified id from the space. 
            Blocks up to the specified timeout (if any) until a matching entry is available.
            </summary>
            <param name="type">Type of requested entry.</param>
            <param name="id">ID of requested entry.</param>
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeById(System.Type,System.Object,System.Object)">
            <summary>
            Takes (removes) an entry of the specified type with the specified id from the space. 
            Blocks up to the specified timeout (if any) until a matching entry is available.
            </summary>
            <param name="type">Type of requested entry.</param>
            <param name="id">ID of requested entry.</param>
            <param name="routing">Value to select partition in clustered environment.</param>
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeById(System.Type,System.Object,System.Object,GigaSpaces.Core.ITransaction)">
            <summary>
            Takes (removes) an entry of the specified type with the specified id from the space. 
            Blocks up to the specified timeout (if any) until a matching entry is available.
            </summary>
            <param name="type">Type of requested entry.</param>
            <param name="id">ID of requested entry.</param>
            <param name="routing">Value to select partition in clustered environment.</param>
            <param name="tx">The transaction which this operation will participate in.</param>
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeById(System.Type,System.Object,System.Object,GigaSpaces.Core.ITransaction,System.Int64)">
            <summary>
            Takes (removes) an entry of the specified type with the specified id from the space. 
            Blocks up to the specified timeout (if any) until a matching entry is available.
            </summary>
            <param name="type">Type of requested entry.</param>
            <param name="id">ID of requested entry.</param>
            <param name="routing">Value to select partition in clustered environment.</param>
            <param name="tx">The transaction which this operation will participate in.</param>
            <param name="timeout">Maximum time to wait for a matching entry (in milliseconds).</param>
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeById(System.Type,System.Object,System.Object,GigaSpaces.Core.ITransaction,System.Int64,GigaSpaces.Core.TakeModifiers)">
            <summary>
            Takes (removes) an entry of the specified type with the specified id from the space. 
            Blocks up to the specified timeout (if any) until a matching entry is available.
            </summary>
            <param name="type">Type of requested entry.</param>
            <param name="id">ID of requested entry.</param>
            <param name="routing">Value to select partition in clustered environment.</param>
            <param name="tx">The transaction which this operation will participate in.</param>
            <param name="timeout">Maximum time to wait for a matching entry (in milliseconds).</param>
            <param name="modifiers">The modifier(s) to define behaviour of the operation.</param>
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeById``1(System.Object)">
            <summary>
            Takes (removes) an entry of the specified type with the specified id from the space. 
            Blocks up to the specified timeout (if any) until a matching entry is available.
            </summary>
            <typeparam name="T">Type of requested entry.</typeparam>
            <param name="id">ID of requested entry.</param>
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeById``1(System.Object,System.Object)">
            <summary>
            Takes (removes) an entry of the specified type with the specified id from the space. 
            Blocks up to the specified timeout (if any) until a matching entry is available.
            </summary>
            <typeparam name="T">Type of requested entry.</typeparam>
            <param name="id">ID of requested entry.</param>
            <param name="routing">Value to select partition in clustered environment.</param>
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeById``1(System.Object,System.Object,GigaSpaces.Core.ITransaction)">
            <summary>
            Takes (removes) an entry of the specified type with the specified id from the space. 
            Blocks up to the specified timeout (if any) until a matching entry is available.
            </summary>
            <typeparam name="T">Type of requested entry.</typeparam>
            <param name="id">ID of requested entry.</param>
            <param name="routing">Value to select partition in clustered environment.</param>
            <param name="tx">The transaction which this operation will participate in.</param>
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeById``1(System.Object,System.Object,GigaSpaces.Core.ITransaction,System.Int64)">
            <summary>
            Takes (removes) an entry of the specified type with the specified id from the space. 
            Blocks up to the specified timeout (if any) until a matching entry is available.
            </summary>
            <typeparam name="T">Type of requested entry.</typeparam>
            <param name="id">ID of requested entry.</param>
            <param name="routing">Value to select partition in clustered environment.</param>
            <param name="tx">The transaction which this operation will participate in.</param>
            <param name="timeout">Maximum time to wait for a matching entry (in milliseconds).</param>
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeById``1(System.Object,System.Object,GigaSpaces.Core.ITransaction,System.Int64,GigaSpaces.Core.TakeModifiers)">
            <summary>
            Takes (removes) an entry of the specified type with the specified id from the space. 
            Blocks up to the specified timeout (if any) until a matching entry is available.
            </summary>
            <typeparam name="T">Type of requested entry.</typeparam>
            <param name="id">ID of requested entry.</param>
            <param name="routing">Value to select partition in clustered environment.</param>
            <param name="tx">The transaction which this operation will participate in.</param>
            <param name="timeout">Maximum time to wait for a matching entry (in milliseconds).</param>
            <param name="modifiers">The modifier(s) to define behaviour of the operation.</param>
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeById``1(GigaSpaces.Core.IdQuery{``0})">
            <summary>
            Takes (removes) an entry matching the specified id query from the space.
            Blocks up to the specified timeout (if any) until a matching entry is available.
            </summary>
            <typeparam name="T">Type of expected result entry.</typeparam>
            <param name="idQuery">The query to search by.</param>
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeById``1(GigaSpaces.Core.IdQuery{``0},GigaSpaces.Core.ITransaction)">
            <summary>
            Takes (removes) an entry matching the specified id query from the space.
            Blocks up to the specified timeout (if any) until a matching entry is available.
            </summary>
            <typeparam name="T">Type of expected result entry.</typeparam>
            <param name="idQuery">The query to search by.</param>
            <param name="tx">The transaction which this operation will participate in.</param>		
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeById``1(GigaSpaces.Core.IdQuery{``0},GigaSpaces.Core.ITransaction,System.Int64)">
            <summary>
            Takes (removes) an entry matching the specified id query from the space.
            Blocks up to the specified timeout (if any) until a matching entry is available.
            </summary>
            <typeparam name="T">Type of expected result entry.</typeparam>
            <param name="idQuery">The query to search by.</param>
            <param name="tx">The transaction which this operation will participate in.</param>
            <param name="timeout">Maximum time to wait for a matching entry (in milliseconds).</param>
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeById``1(GigaSpaces.Core.IdQuery{``0},GigaSpaces.Core.ITransaction,System.Int64,GigaSpaces.Core.TakeModifiers)">
            <summary>
            Takes (removes) an entry matching the specified id query from the space.
            Blocks up to the specified timeout (if any) until a matching entry is available.
            </summary>
            <typeparam name="T">Type of expected result entry.</typeparam>
            <param name="idQuery">The query to search by.</param>
            <param name="tx">The transaction which this operation will participate in.</param>
            <param name="timeout">Maximum time to wait for a matching entry (in milliseconds).</param>
            <param name="modifiers">Additional modifiers to control operation behaviour.</param>
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeByIds(System.Type,System.Object[])">
            <summary>
            Take (remove) objects from the space matching their IDs and the specified class.
            <para>Note, if the space is partitioned and the Class defines a specific property
            for its routing value (which means that the ID property is not used for routing),
            the operation will broadcast to all partitions.</para>
            <para>FIFO is not supported by this operation -
            the results are always ordered in correlation with the input IDs array.</para>
            </summary>
            <param name="type">The class.</param>
            <param name="ids">The object IDs array.</param>		
            <returns>An <see cref="T:GigaSpaces.Core.ITakeByIdsResult`1"/> containing the matched results.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.TakeByIdsException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeByIds(System.Type,System.Object[],System.Object)">
            <summary>
            Take (remove) objects from the space matching their IDs, the specified class and routing key.
            <para>Note, if routing key is null and the cluster is partitioned, the operation will broadcast
            to all of the partitions.</para>
            <para>FIFO is not supported by this operation -
            the results are always ordered in correlation with the input IDs array.</para>
            </summary>
            <param name="type">The class.</param>
            <param name="ids">The object IDs array.</param>
            <param name="routingKey">The routing key of the provided object IDs.</param>		
            <returns>An <see cref="T:GigaSpaces.Core.ITakeByIdsResult`1"/> containing the matched results.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.ReadByIdsException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeByIds(System.Type,System.Object[],System.Object,GigaSpaces.Core.ITransaction)">
            <summary>
            Take (remove) objects from the space matching their IDs, the specified class and routing key.
            <para>Note, if routing key is null and the cluster is partitioned, the operation will broadcast
            to all of the partitions.</para>
            <para>FIFO is not supported by this operation -
            the results are always ordered in correlation with the input IDs array.</para>
            </summary>
            <param name="type">The class.</param>
            <param name="ids">The object IDs array.</param>
            <param name="routingKey">The routing key of the provided object IDs.</param>
            <param name="tx">The transaction which this operation will participate in.</param>		
            <returns>An <see cref="T:GigaSpaces.Core.ITakeByIdsResult`1"/> containing the matched results.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.TakeByIdsException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeByIds(System.Type,System.Object[],System.Object,GigaSpaces.Core.ITransaction,GigaSpaces.Core.TakeModifiers)">
            <summary>
            Take (remove) objects from the space matching their IDs, the specified class type and routing key, with the
            provided <see ref="GigaSpaces.Core.TakeModifiers"/>.
            <para>Note, if routing key is null and the cluster is partitioned, the operation will broadcast
            to all of the partitions.</para>
            <para>FIFO is not supported by this operation - 
            the results are always ordered in correlation with the input IDs array.</para>
            </summary>
            <param name="type">The class.</param>
            <param name="ids">The object IDs array.</param>
            <param name="routingKey">The routing key of the provided object IDs.</param>
            <param name="tx">The transaction which this operation will participate in.</param>
            <param name="modifiers">The read modifier to use (One or several of <see ref="GigaSpaces.Core.TakeModifiers"/>).</param>
            <returns>An <see cref="T:GigaSpaces.Core.ITakeByIdsResult`1"/> reference containing the matched results.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.TakeByIdsException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeByIds(System.Type,System.Object[],System.Object[])">
            <summary>
            Take (remove) objects from the space matching their IDs, the specified class and the routing keys.
            <para>Note, the IDs array and routing keys array are correlated and should be of the same size.
            The routing key of ID i in the IDs array is the element at position i in the routing keys array.
            If routingKeys is null and the cluster is partitioned, the operation will broadcast to
            all of the partitions.</para>
            <para>FIFO is not supported by this operation -
            the results are always ordered in correlation with the input IDs array.</para>
            </summary>
            <param name="type">The class.</param>
            <param name="ids">The object IDs array.</param>
            <param name="routingKeys">The object routing keys array.</param>		
            <returns>An <see cref="T:GigaSpaces.Core.ITakeByIdsResult`1"/> containing the matched results.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.TakeByIdsException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeByIds(System.Type,System.Object[],System.Object[],GigaSpaces.Core.ITransaction)">
            <summary>
            Take (remove) objects from the space matching their IDs, the specified class and the routing keys.
            <para>Note, the IDs array and routing keys array are correlated and should be of the same size.
            The routing key of ID i in the IDs array is the element at position i in the routing keys array.
            If routingKeys is null and the cluster is partitioned, the operation will broadcast to
            all of the partitions.</para>
            <para>FIFO is not supported by this operation -
            the results are always ordered in correlation with the input IDs array.</para>
            </summary>
            <param name="type">The class type.</param>
            <param name="ids">The object IDs array.</param>
            <param name="routingKeys">The object routing keys array.</param>
            <param name="tx">The transaction which this operation will participate in.</param>		
            <returns>An <see cref="T:GigaSpaces.Core.ITakeByIdsResult`1"/> containing the matched results.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.TakeByIdsException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeByIds(System.Type,System.Object[],System.Object[],GigaSpaces.Core.ITransaction,GigaSpaces.Core.TakeModifiers)">
            <summary>
            Take (remove) objects from the space matching their IDs, the specified class and the routing keys, with the
            provided <see ref="GigaSpaces.Core.TakeModifiers"/>.
            <para>Note, the IDs array and routing keys array are correlated and should be of the same size.
            The routing key of ID i in the IDs array is the element at position i in the routing keys array.
            If routingKeys is null and the cluster is partitioned, the operation will broadcast to
            all of the partitions.</para>
            <para>FIFO is not supported by this operation -
            the results are always ordered in correlation with the input IDs array.</para>
            </summary>
            <param name="type">The class type.</param>
            <param name="ids">The object IDs array.</param>
            <param name="routingKeys">The object routing keys array.</param>
            <param name="tx">The transaction which this operation will participate in.</param>
            <param name="modifiers">The take modifier to use (One or several of <see ref="GigaSpaces.Core.TakeModifiers"/>).</param>
            <returns>An <see cref="T:GigaSpaces.Core.ITakeByIdsResult`1"/> containing the matched results.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.TakeByIdsException">The operation had a failure.</exception>        
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeByIds``1(System.Object[])">
            <summary>
            Take (remove) objects from the space matching their IDs and the specified class.
            <para>Note, if the space is partitioned and the Class defines a specific property
            for its routing value (which means that the ID property is not used for routing),
            the operation will broadcast to all partitions.</para>
            <para>FIFO is not supported by this operation -
            the results are always ordered in correlation with the input IDs array.</para>
            </summary>
            <typeparam name="T">The class.</typeparam>		
            <param name="ids">The object IDs array.</param>		
            <returns>An <see cref="T:GigaSpaces.Core.ITakeByIdsResult`1"/> containing the matched results.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.TakeByIdsException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeByIds``1(System.Object[],System.Object)">
            <summary>
            Take (remove) objects from the space matching their IDs, the specified class and routing key.
            <para>Note, if routing key is null and the cluster is partitioned, the operation will broadcast
            to all of the partitions.</para>
            <para>FIFO is not supported by this operation -
            the results are always ordered in correlation with the input IDs array.</para>
            </summary>
            <typeparam name="T">The class.</typeparam>		
            <param name="ids">The object IDs array.</param>
            <param name="routingKey">The routing key of the provided object IDs.</param>		
            <returns>An <see cref="T:GigaSpaces.Core.ITakeByIdsResult`1"/> containing the matched results.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.TakeByIdsException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeByIds``1(System.Object[],System.Object,GigaSpaces.Core.ITransaction)">
            <summary>
            Take (remove) objects from the space matching their IDs, the specified class and routing key.
            <para>Note, if routing key is null and the cluster is partitioned, the operation will broadcast
            to all of the partitions.</para>
            <para>FIFO is not supported by this operation -
            the results are always ordered in correlation with the input IDs array.</para>
            </summary>
            <typeparam name="T">The class.</typeparam>		
            <param name="ids">The object IDs array.</param>
            <param name="routingKey">The routing key of the provided object IDs.</param>
            <param name="tx">The transaction which this operation will participate in.</param>		
            <returns>An <see cref="T:GigaSpaces.Core.ITakeByIdsResult`1"/> containing the matched results.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.TakeByIdsException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeByIds``1(System.Object[],System.Object,GigaSpaces.Core.ITransaction,GigaSpaces.Core.TakeModifiers)">
            <summary>
            Take (remove) objects from the space matching their IDs, the specified class type and routing key, with the
            provided <see ref="GigaSpaces.Core.TakeModifiers"/>.
            <para>Note, if routing key is null and the cluster is partitioned, the operation will broadcast
            to all of the partitions.</para>
            <para>FIFO is not supported by this operation - 
            the results are always ordered in correlation with the input IDs array.</para>
            </summary>
            <typeparam name="T">The class.</typeparam>		
            <param name="ids">The object IDs array.</param>
            <param name="routingKey">The routing key of the provided object IDs.</param>
            <param name="tx">The transaction which this operation will participate in.</param>
            <param name="modifiers">The take modifier to use (One or several of <see ref="GigaSpaces.Core.TakeModifiers"/>).</param>
            <returns>An <see cref="T:GigaSpaces.Core.ITakeByIdsResult`1"/> containing the matched results.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.TakeByIdsException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeByIds``1(System.Object[],System.Object[])">
            <summary>
            Take (remove) objects from the space matching their IDs, the specified class and the routing keys.
            <para>Note, the IDs array and routing keys array are correlated and should be of the same size.
            The routing key of ID i in the IDs array is the element at position i in the routing keys array.
            If routingKeys is null and the cluster is partitioned, the operation will broadcast to
            all of the partitions.</para>
            <para>FIFO is not supported by this operation -
            the results are always ordered in correlation with the input IDs array.</para>
            </summary>
            <typeparam name="T">The class.</typeparam>
            <param name="ids">The object IDs array.</param>
            <param name="routingKeys">The object routing keys array.</param>		
            <returns>An <see cref="T:GigaSpaces.Core.ITakeByIdsResult`1"/> containing the matched results.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.TakeByIdsException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeByIds``1(System.Object[],System.Object[],GigaSpaces.Core.ITransaction)">
            <summary>
            Take (remove) objects from the space matching their IDs, the specified class and the routing keys.
            <para>Note, the IDs array and routing keys array are correlated and should be of the same size.
            The routing key of ID i in the IDs array is the element at position i in the routing keys array.
            If routingKeys is null and the cluster is partitioned, the operation will broadcast to
            all of the partitions.</para>
            <para>FIFO is not supported by this operation -
            the results are always ordered in correlation with the input IDs array.</para>
            </summary>
            <typeparam name="T">The class.</typeparam>
            <param name="ids">The object IDs array.</param>
            <param name="routingKeys">The object routing keys array.</param>		
            <param name="tx">The transaction which this operation will participate in.</param>
            <returns>An <see cref="T:GigaSpaces.Core.ITakeByIdsResult`1"/> containing the matched results.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.TakeByIdsException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeByIds``1(System.Object[],System.Object[],GigaSpaces.Core.ITransaction,GigaSpaces.Core.TakeModifiers)">
            <summary>
            Take (remove) objects from the space matching their IDs, the specified class and the routing keys, with the
            provided <see ref="GigaSpaces.Core.TakeModifiers"/>.
            <para>Note, the IDs array and routing keys array are correlated and should be of the same size.
            The routing key of ID i in the IDs array is the element at position i in the routing keys array.
            If routingKeys is null and the cluster is partitioned, the operation will broadcast to
            all of the partitions.</para>
            <para>FIFO is not supported by this operation -
            the results are always ordered in correlation with the input IDs array.</para>
            </summary>
            <typeparam name="T">The class.</typeparam>
            <param name="ids">The object IDs array.</param>
            <param name="routingKeys">The object routing keys array.</param>		
            <param name="tx">The transaction which this operation will participate in.</param>
            <param name="modifiers">The take modifier to use (One or several of <see ref="GigaSpaces.Core.TakeModifiers"/>).</param>
            <returns>An <see cref="T:GigaSpaces.Core.ITakeByIdsResult`1"/> containing the matched results.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.TakeByIdsException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeByIds``1(GigaSpaces.Core.IdsQuery{``0})">
            <summary>
            Take (remove) objects from the space matching the specified ids query. 
            </summary>
            <typeparam name="T">Type of expected result entry.</typeparam>
            <param name="idsQuery">The query to search by.</param>
            <returns>An <see cref="T:GigaSpaces.Core.ITakeByIdsResult`1"/> containing the matched results.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.TakeByIdsException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeByIds``1(GigaSpaces.Core.IdsQuery{``0},GigaSpaces.Core.ITransaction)">
            <summary>
            Take (remove) objects from the space matching the specified ids query. 
            </summary>
            <typeparam name="T">Type of expected result entry.</typeparam>
            <param name="idsQuery">The query to search by.</param>
            <param name="tx">The transaction which this operation will participate in.</param>
            <returns>An <see cref="T:GigaSpaces.Core.ITakeByIdsResult`1"/> containing the matched results.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.TakeByIdsException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeByIds``1(GigaSpaces.Core.IdsQuery{``0},GigaSpaces.Core.ITransaction,GigaSpaces.Core.TakeModifiers)">
            <summary>
            Take (remove) objects from the space matching the specified ids query, 
            with the provided <see cref="P:GigaSpaces.Core.ISpaceProxy.TakeModifiers"/>.
            </summary>
            <typeparam name="T">Type of expected result entry.</typeparam>
            <param name="idsQuery">The query to search by.</param>
            <param name="tx">The transaction which this operation will participate in.</param>
            <param name="modifiers">The read modifier to use (One or several of <see ref="GigaSpaces.Core.TakeModifiers"/>).</param>
            <returns>An <see cref="T:GigaSpaces.Core.ITakeByIdsResult`1"/> containing the matched results.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.TakeByIdsException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.BeginTake``1(``0,GigaSpaces.Core.AsyncCallback{``0},System.Object)">
            <summary>
            Begins an asynchronous <see cref="M:GigaSpaces.Core.ISpaceProxy.Take``1(``0,GigaSpaces.Core.ITransaction,System.Int64)"/> operation.
            </summary>
            <typeparam name="T">Type of object to take.</typeparam>
            <param name="template">The template used for matching.</param>
            <param name="userCallback">The method to be called when the asynchronous operation is complete.</param>
            <param name="stateObject">A user-provided object that distinguishes this particular asynchronous read request from other requests.</param>
            <returns>An IAsyncResult that references the asynchronous take.</returns>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.BeginTake``1(``0,GigaSpaces.Core.ITransaction,GigaSpaces.Core.AsyncCallback{``0},System.Object)">
            <summary>
            Begins an asynchronous <see cref="M:GigaSpaces.Core.ISpaceProxy.Take``1(``0,GigaSpaces.Core.ITransaction,System.Int64)"/> operation.
            </summary>
            <typeparam name="T">Type of object to take.</typeparam>
            <param name="template">The template used for matching.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <param name="userCallback">The method to be called when the asynchronous operation is complete.</param>
            <param name="stateObject">A user-provided object that distinguishes this particular asynchronous read request from other requests.</param>
            <returns>An IAsyncResult that references the asynchronous take.</returns>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.BeginTake``1(``0,System.Int64,GigaSpaces.Core.AsyncCallback{``0},System.Object)">
            <summary>
            Begins an asynchronous <see cref="M:GigaSpaces.Core.ISpaceProxy.Take``1(``0,GigaSpaces.Core.ITransaction,System.Int64)"/> operation.
            </summary>
            <typeparam name="T">Type of object to take.</typeparam>
            <param name="template">The template used for matching.</param>
            <param name="timeout">How long the client is willing to wait for a transactionally proper matching object.</param>		
            <param name="userCallback">The method to be called when the asynchronous operation is complete.</param>
            <param name="stateObject">A user-provided object that distinguishes this particular asynchronous read request from other requests.</param>
            <returns>An IAsyncResult that references the asynchronous take.</returns>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.BeginTake``1(``0,GigaSpaces.Core.ITransaction,System.Int64,GigaSpaces.Core.AsyncCallback{``0},System.Object)">
            <summary>
            Begins an asynchronous <see cref="M:GigaSpaces.Core.ISpaceProxy.Take``1(``0,GigaSpaces.Core.ITransaction,System.Int64)"/> operation.
            </summary>
            <typeparam name="T">Type of object to take.</typeparam>
            <param name="template">The template used for matching.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <param name="timeout">How long the client is willing to wait for a transactionally proper matching object.</param>		
            <param name="userCallback">The method to be called when the asynchronous operation is complete.</param>
            <param name="stateObject">A user-provided object that distinguishes this particular asynchronous read request from other requests.</param>
            <returns>An IAsyncResult that references the asynchronous take.</returns>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.BeginTake``1(``0,GigaSpaces.Core.ITransaction,System.Int64,GigaSpaces.Core.TakeModifiers,GigaSpaces.Core.AsyncCallback{``0},System.Object)">
            <summary>
            Begins an asynchronous <see cref="M:GigaSpaces.Core.ISpaceProxy.Take``1(``0,GigaSpaces.Core.ITransaction,System.Int64)"/> operation.
            </summary>
            <typeparam name="T">Type of object to take.</typeparam>
            <param name="template">The template used for matching.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <param name="timeout">How long the client is willing to wait for a transactionally proper matching object.</param>		
            <param name="modifiers">The modifier(s) to define behaviour of the operation.</param>
            <param name="userCallback">The method to be called when the asynchronous operation is complete.</param>
            <param name="stateObject">A user-provided object that distinguishes this particular asynchronous read request from other requests.</param>
            <returns>An IAsyncResult that references the asynchronous take.</returns>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.BeginTake``1(GigaSpaces.Core.IQuery{``0},GigaSpaces.Core.AsyncCallback{``0},System.Object)">
            <summary>
            Begins an asynchronous <see cref="M:GigaSpaces.Core.ISpaceProxy.Take``1(GigaSpaces.Core.IQuery{``0},GigaSpaces.Core.ITransaction,System.Int64)"/> operation.
            </summary>
            <typeparam name="T">Type of object to take.</typeparam>
            <param name="query">The query used for matching.</param>
            <param name="userCallback">The method to be called when the asynchronous operation is complete.</param>
            <param name="stateObject">A user-provided object that distinguishes this particular asynchronous read request from other requests.</param>
            <returns>An IAsyncResult that references the asynchronous take.</returns>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.BeginTake``1(GigaSpaces.Core.IQuery{``0},GigaSpaces.Core.ITransaction,GigaSpaces.Core.AsyncCallback{``0},System.Object)">
            <summary>
            Begins an asynchronous <see cref="M:GigaSpaces.Core.ISpaceProxy.Take``1(GigaSpaces.Core.IQuery{``0},GigaSpaces.Core.ITransaction,System.Int64)"/> operation.
            </summary>
            <typeparam name="T">Type of object to take.</typeparam>
            <param name="query">The query used for matching.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <param name="userCallback">The method to be called when the asynchronous operation is complete.</param>
            <param name="stateObject">A user-provided object that distinguishes this particular asynchronous read request from other requests.</param>
            <returns>An IAsyncResult that references the asynchronous take.</returns>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.BeginTake``1(GigaSpaces.Core.IQuery{``0},System.Int64,GigaSpaces.Core.AsyncCallback{``0},System.Object)">
            <summary>
            Begins an asynchronous <see cref="M:GigaSpaces.Core.ISpaceProxy.Take``1(GigaSpaces.Core.IQuery{``0},GigaSpaces.Core.ITransaction,System.Int64)"/> operation.
            </summary>
            <typeparam name="T">Type of object to take.</typeparam>
            <param name="query">The query used for matching.</param>
            <param name="timeout">How long the client is willing to wait for a transactionally proper matching object.</param>		
            <param name="userCallback">The method to be called when the asynchronous operation is complete.</param>
            <param name="stateObject">A user-provided object that distinguishes this particular asynchronous read request from other requests.</param>
            <returns>An IAsyncResult that references the asynchronous take.</returns>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.BeginTake``1(GigaSpaces.Core.IQuery{``0},GigaSpaces.Core.ITransaction,System.Int64,GigaSpaces.Core.AsyncCallback{``0},System.Object)">
            <summary>
            Begins an asynchronous <see cref="M:GigaSpaces.Core.ISpaceProxy.Take``1(GigaSpaces.Core.IQuery{``0},GigaSpaces.Core.ITransaction,System.Int64)"/> operation.
            </summary>
            <typeparam name="T">Type of object to take.</typeparam>
            <param name="query">The query used for matching.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <param name="timeout">How long the client is willing to wait for a transactionally proper matching object.</param>		
            <param name="userCallback">The method to be called when the asynchronous operation is complete.</param>
            <param name="stateObject">A user-provided object that distinguishes this particular asynchronous read request from other requests.</param>
            <returns>An IAsyncResult that references the asynchronous take.</returns>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.BeginTake``1(GigaSpaces.Core.IQuery{``0},GigaSpaces.Core.ITransaction,System.Int64,GigaSpaces.Core.TakeModifiers,GigaSpaces.Core.AsyncCallback{``0},System.Object)">
            <summary>
            Begins an asynchronous <see cref="M:GigaSpaces.Core.ISpaceProxy.Take``1(GigaSpaces.Core.IQuery{``0},GigaSpaces.Core.ITransaction,System.Int64)"/> operation.
            </summary>
            <typeparam name="T">Type of object to take.</typeparam>
            <param name="query">The query used for matching.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <param name="timeout">How long the client is willing to wait for a transactionally proper matching object.</param>		
            <param name="modifiers">The modifier(s) to define behaviour of the operation.</param>
            <param name="userCallback">The method to be called when the asynchronous operation is complete.</param>
            <param name="stateObject">A user-provided object that distinguishes this particular asynchronous read request from other requests.</param>
            <returns>An IAsyncResult that references the asynchronous take.</returns>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.EndTake``1(GigaSpaces.Core.IAsyncResult{``0})">
            <summary>
            Waits for the pending asynchronous take to complete.
            </summary>
            <typeparam name="T">Type of object to take.</typeparam>
            <param name="asyncResult">The reference to the pending asynchornous request to wait for.</param>
            <returns>A copy of the object taken from the space (null if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.UnusableEntryException">A serialized field of the object being read cannot be deserialized.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.EntryVersionConflictException">Operation is rejected as a result of optimistic locking version conflict.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.SqlQueryException">The query template is an illegal SqlQuery.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeIfExists``1(``0)">
            <summary>
            Take any matching object from the space, returning null if there currently is none.
            Equivalent to take, except that blocking is done only if necessary to wait for transactional state to settle. 
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="template">The template used for matching.</param>
            <returns>The object taken from the space (null if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.UnusableEntryException">A serialized field of the object being read cannot be deserialized.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.EntryVersionConflictException">Operation is rejected as a result of optimistic locking version conflict.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeIfExists``1(``0,GigaSpaces.Core.ITransaction)">
            <summary>
            Take any matching object from the space, returning null if there currently is none.
            Equivalent to take, except that blocking is done only if necessary to wait for transactional state to settle. 
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="template">The template used for matching.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <returns>The object taken from the space (null if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.UnusableEntryException">A serialized field of the object being read cannot be deserialized.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.EntryVersionConflictException">Operation is rejected as a result of optimistic locking version conflict.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeIfExists``1(``0,System.Int64)">
            <summary>
            Take any matching object from the space, returning null if there currently is none.
            Equivalent to take, except that blocking is done only if necessary to wait for transactional state to settle. 
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="template">The template used for matching.</param>
            <param name="timeout">How long the client is willing to wait for a transactionally proper matching object.</param>
            <returns>The object taken from the space (null if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.UnusableEntryException">A serialized field of the object being read cannot be deserialized.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.EntryVersionConflictException">Operation is rejected as a result of optimistic locking version conflict.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeIfExists``1(``0,GigaSpaces.Core.ITransaction,System.Int64)">
            <summary>
            Take any matching object from the space, returning null if there currently is none.
            Equivalent to take, except that blocking is done only if necessary to wait for transactional state to settle. 
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="template">The template used for matching.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <param name="timeout">How long the client is willing to wait for a transactionally proper matching object.</param>
            <returns>The object taken from the space (null if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.UnusableEntryException">A serialized field of the object being read cannot be deserialized.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.EntryVersionConflictException">Operation is rejected as a result of optimistic locking version conflict.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeIfExists``1(``0,GigaSpaces.Core.ITransaction,System.Int64,GigaSpaces.Core.TakeModifiers)">
            <summary>
            Take any matching object from the space, returning null if there currently is none.
            Equivalent to take, except that blocking is done only if necessary to wait for transactional state to settle. 
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="template">The template used for matching.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <param name="timeout">How long the client is willing to wait for a transactionally proper matching object.</param>
            <param name="modifiers">The modifier(s) to define behaviour of the operation.</param>
            <returns>The object taken from the space (null if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.UnusableEntryException">A serialized field of the object being read cannot be deserialized.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.EntryVersionConflictException">Operation is rejected as a result of optimistic locking version conflict.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeIfExists``1(GigaSpaces.Core.IQuery{``0})">
            <summary>
            Take any matching object from the space, returning null if there currently is none.
            Equivalent to take, except that blocking is done only if necessary to wait for transactional state to settle. 
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="query">The query used for matching.</param>
            <returns>The object taken from the space (null if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.UnusableEntryException">A serialized field of the object being read cannot be deserialized.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.EntryVersionConflictException">Operation is rejected as a result of optimistic locking version conflict.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.SqlQueryException">The query template is an illegal SqlQuery.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeIfExists``1(GigaSpaces.Core.IQuery{``0},GigaSpaces.Core.ITransaction)">
            <summary>
            Take any matching object from the space, returning null if there currently is none.
            Equivalent to take, except that blocking is done only if necessary to wait for transactional state to settle. 
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="query">The query used for matching.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <returns>The object taken from the space (null if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.UnusableEntryException">A serialized field of the object being read cannot be deserialized.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.EntryVersionConflictException">Operation is rejected as a result of optimistic locking version conflict.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.SqlQueryException">The query template is an illegal SqlQuery.</exception>		
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeIfExists``1(GigaSpaces.Core.IQuery{``0},System.Int64)">
            <summary>
            Take any matching object from the space, returning null if there currently is none.
            Equivalent to take, except that blocking is done only if necessary to wait for transactional state to settle. 
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="query">The query used for matching.</param>
            <param name="timeout">How long the client is willing to wait for a transactionally proper matching object.</param>
            <returns>The object taken from the space (null if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.UnusableEntryException">A serialized field of the object being read cannot be deserialized.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.EntryVersionConflictException">Operation is rejected as a result of optimistic locking version conflict.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.SqlQueryException">The query template is an illegal SqlQuery.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeIfExists``1(GigaSpaces.Core.IQuery{``0},GigaSpaces.Core.ITransaction,System.Int64)">
            <summary>
            Take any matching object from the space, returning null if there currently is none.
            Equivalent to take, except that blocking is done only if necessary to wait for transactional state to settle. 
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="query">The query used for matching.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <param name="timeout">How long the client is willing to wait for a transactionally proper matching object.</param>
            <returns>The object taken from the space (null if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.UnusableEntryException">A serialized field of the object being read cannot be deserialized.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.EntryVersionConflictException">Operation is rejected as a result of optimistic locking version conflict.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.SqlQueryException">The query template is an illegal SqlQuery.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeIfExists``1(GigaSpaces.Core.IQuery{``0},GigaSpaces.Core.ITransaction,System.Int64,GigaSpaces.Core.TakeModifiers)">
            <summary>
            Take any matching object from the space, returning null if there currently is none.
            Equivalent to take, except that blocking is done only if necessary to wait for transactional state to settle. 
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="query">The query used for matching.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <param name="timeout">How long the client is willing to wait for a transactionally proper matching object.</param>
            <param name="modifiers">The modifier(s) to define behaviour of the operation.</param>
            <returns>The object taken from the space (null if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.UnusableEntryException">A serialized field of the object being read cannot be deserialized.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.EntryVersionConflictException">Operation is rejected as a result of optimistic locking version conflict.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.SqlQueryException">The query template is an illegal SqlQuery.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeIfExistsById(System.Type,System.Object)">
            <summary>
            Takes (removes) an entry of the specified type with the specified id from the space. 
            Blocks up to the specified timeout (if any) only if a matching entry exists and it is 
            necessary to wait for transactional state to settle.
            </summary>
            <param name="type">Type of requested entry.</param>
            <param name="id">ID of requested entry.</param>
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeIfExistsById(System.Type,System.Object,System.Object)">
            <summary>
            Takes (removes) an entry of the specified type with the specified id from the space. 
            Blocks up to the specified timeout (if any) only if a matching entry exists and it is 
            necessary to wait for transactional state to settle.
            </summary>
            <param name="type">Type of requested entry.</param>
            <param name="id">ID of requested entry.</param>
            <param name="routing">Value to select partition in clustered environment.</param>
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeIfExistsById(System.Type,System.Object,System.Object,GigaSpaces.Core.ITransaction)">
            <summary>
            Takes (removes) an entry of the specified type with the specified id from the space. 
            Blocks up to the specified timeout (if any) only if a matching entry exists and it is 
            necessary to wait for transactional state to settle.
            </summary>
            <param name="type">Type of requested entry.</param>
            <param name="id">ID of requested entry.</param>
            <param name="routing">Value to select partition in clustered environment.</param>
            <param name="tx">The transaction which this operation will participate in.</param>
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeIfExistsById(System.Type,System.Object,System.Object,GigaSpaces.Core.ITransaction,System.Int64)">
            <summary>
            Takes (removes) an entry of the specified type with the specified id from the space. 
            Blocks up to the specified timeout (if any) only if a matching entry exists and it is 
            necessary to wait for transactional state to settle.
            </summary>
            <param name="type">Type of requested entry.</param>
            <param name="id">ID of requested entry.</param>
            <param name="routing">Value to select partition in clustered environment.</param>
            <param name="tx">The transaction which this operation will participate in.</param>
            <param name="timeout">The maximum time to wait for a transactionally proper matching object.</param>
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeIfExistsById(System.Type,System.Object,System.Object,GigaSpaces.Core.ITransaction,System.Int64,GigaSpaces.Core.TakeModifiers)">
            <summary>
            Takes (removes) an entry of the specified type with the specified id from the space. 
            Blocks up to the specified timeout (if any) only if a matching entry exists and it is 
            necessary to wait for transactional state to settle.
            </summary>
            <param name="type">Type of requested entry.</param>
            <param name="id">ID of requested entry.</param>
            <param name="routing">Value to select partition in clustered environment.</param>
            <param name="tx">The transaction which this operation will participate in.</param>
            <param name="timeout">The maximum time to wait for a transactionally proper matching object.</param>
            <param name="modifiers">The modifier(s) to define behaviour of the operation.</param>
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeIfExistsById``1(System.Object)">
            <summary>
            Takes (removes) an entry of the specified type with the specified id from the space. 
            Blocks up to the specified timeout (if any) only if a matching entry exists and it is 
            necessary to wait for transactional state to settle.
            </summary>
            <typeparam name="T">Type of requested entry.</typeparam>
            <param name="id">ID of requested entry.</param>
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeIfExistsById``1(System.Object,System.Object)">
            <summary>
            Takes (removes) an entry of the specified type with the specified id from the space. 
            Blocks up to the specified timeout (if any) only if a matching entry exists and it is 
            necessary to wait for transactional state to settle.
            </summary>
            <typeparam name="T">Type of requested entry.</typeparam>
            <param name="id">ID of requested entry.</param>
            <param name="routing">Value to select partition in clustered environment.</param>
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeIfExistsById``1(System.Object,System.Object,GigaSpaces.Core.ITransaction)">
            <summary>
            Takes (removes) an entry of the specified type with the specified id from the space. 
            Blocks up to the specified timeout (if any) until a matching entry exists.
            </summary>
            <typeparam name="T">Type of requested entry.</typeparam>
            <param name="id">ID of requested entry.</param>
            <param name="routing">Value to select partition in clustered environment.</param>
            <param name="tx">The transaction which this operation will participate in.</param>
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeIfExistsById``1(System.Object,System.Object,GigaSpaces.Core.ITransaction,System.Int64)">
            <summary>
            Takes (removes) an entry of the specified type with the specified id from the space. 
            Blocks up to the specified timeout (if any) only if a matching entry exists and it is 
            necessary to wait for transactional state to settle.
            </summary>
            <typeparam name="T">Type of requested entry.</typeparam>
            <param name="id">ID of requested entry.</param>
            <param name="routing">Value to select partition in clustered environment.</param>
            <param name="tx">The transaction which this operation will participate in.</param>
            <param name="timeout">The maximum time to wait for a transactionally proper matching object.</param>
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeIfExistsById``1(System.Object,System.Object,GigaSpaces.Core.ITransaction,System.Int64,GigaSpaces.Core.TakeModifiers)">
            <summary>
            Takes (removes) an entry of the specified type with the specified id from the space. 
            Blocks up to the specified timeout (if any) only if a matching entry exists and it is 
            necessary to wait for transactional state to settle.
            </summary>
            <typeparam name="T">Type of requested entry.</typeparam>
            <param name="id">ID of requested entry.</param>
            <param name="routing">Value to select partition in clustered environment.</param>
            <param name="tx">The transaction which this operation will participate in.</param>
            <param name="timeout">The maximum time to wait for a transactionally proper matching object.</param>
            <param name="modifiers">The modifier(s) to define behaviour of the operation.</param>
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeIfExistsById``1(GigaSpaces.Core.IdQuery{``0})">
            <summary>
            Takes (removes) an entry matching the specified id query from the space.
            Blocks up to the specified timeout (if any) only if a matching entry exists and it is 
            necessary to wait for transactional state to settle.
            </summary>
            <typeparam name="T">Type of expected result entry.</typeparam>
            <param name="idQuery">The query to search by.</param>
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeIfExistsById``1(GigaSpaces.Core.IdQuery{``0},GigaSpaces.Core.ITransaction)">
            <summary>
            Takes (removes) an entry matching the specified id query from the space.
            Blocks up to the specified timeout (if any) only if a matching entry exists and it is 
            necessary to wait for transactional state to settle.
            </summary>
            <typeparam name="T">Type of expected result entry.</typeparam>
            <param name="idQuery">The query to search by.</param>
            <param name="tx">The transaction which this operation will participate in.</param>
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeIfExistsById``1(GigaSpaces.Core.IdQuery{``0},GigaSpaces.Core.ITransaction,System.Int64)">
            <summary>
            Takes (removes) an entry matching the specified id query from the space.
            Blocks up to the specified timeout (if any) only if a matching entry exists and it is 
            necessary to wait for transactional state to settle.
            </summary>
            <typeparam name="T">Type of expected result entry.</typeparam>
            <param name="idQuery">The query to search by.</param>
            <param name="tx">The transaction which this operation will participate in.</param>
            <param name="timeout">The maximum time to wait for a transactionally proper matching object.</param>
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeIfExistsById``1(GigaSpaces.Core.IdQuery{``0},GigaSpaces.Core.ITransaction,System.Int64,GigaSpaces.Core.TakeModifiers)">
            <summary>
            Takes (removes) an entry matching the specified id query from the space.
            Blocks up to the specified timeout (if any) only if a matching entry exists and it is 
            necessary to wait for transactional state to settle.
            </summary>
            <typeparam name="T">Type of expected result entry.</typeparam>
            <param name="idQuery">The query to search by.</param>
            <param name="tx">The transaction which this operation will participate in.</param>
            <param name="timeout">The maximum time to wait for a transactionally proper matching object.</param>
            <param name="modifiers">Additional modifiers to control operation behaviour.</param>
            <returns>Result entry from space (null if not found).</returns>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeMultiple``1(``0)">
            <summary>
            Take an array of matching objects from the space.
            Matching is done as in Take with no timeout. 
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="template">The template used for matching.</param>
            <returns>An array of objects taken from the space (empty array if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.TakeMultipleException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeMultiple``1(``0,GigaSpaces.Core.ITransaction)">
            <summary>
            Take an array of matching objects from the space.
            Matching is done as in Take with no timeout. 
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="template">The template used for matching.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <returns>An array of objects taken from the space (empty array if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.TakeMultipleException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeMultiple``1(``0,System.Int32)">
            <summary>
            Take an array of matching objects from the space.
            Matching is done as in Take with no timeout. 
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="template">The template used for matching.</param>
            <param name="maxItems">Maximum number of objects to return.</param>
            <returns>An array of objects taken from the space (empty array if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.TakeMultipleException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeMultiple``1(``0,GigaSpaces.Core.ITransaction,System.Int32)">
            <summary>
            Take an array of matching objects from the space.
            Matching is done as in Take with no timeout. 
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="template">The template used for matching.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <param name="maxItems">Maximum number of objects to return.</param>
            <returns>An array of objects taken from the space (empty array if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.TakeMultipleException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeMultiple``1(``0,GigaSpaces.Core.ITransaction,System.Int32,GigaSpaces.Core.TakeModifiers)">
            <summary>
            Take an array of matching objects from the space.
            Matching is done as in Take with no timeout. 
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="template">The template used for matching.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <param name="maxItems">Maximum number of objects to return.</param>
            <param name="modifiers">The modifier(s) to define behaviour of the operation.</param>
            <returns>An array of objects taken from the space (empty array if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.TakeMultipleException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeMultiple``1(GigaSpaces.Core.IQuery{``0})">
            <summary>
            Take an array of matching objects from the space.
            Matching is done as in Take with no timeout. 
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="query">The query used for matching.</param>
            <returns>An array of objects taken from the space (empty array if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.TakeMultipleException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeMultiple``1(GigaSpaces.Core.IQuery{``0},GigaSpaces.Core.ITransaction)">
            <summary>
            Take an array of matching objects from the space.
            Matching is done as in Take with no timeout. 
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="query">The query used for matching.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <returns>An array of objects taken from the space (empty array if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.TakeMultipleException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeMultiple``1(GigaSpaces.Core.IQuery{``0},System.Int32)">
            <summary>
            Take an array of matching objects from the space.
            Matching is done as in Take with no timeout. 
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="query">The query used for matching.</param>
            <param name="maxItems">Maximum number of objects to return.</param>
            <returns>An array of objects taken from the space (empty array if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.TakeMultipleException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeMultiple``1(GigaSpaces.Core.IQuery{``0},GigaSpaces.Core.ITransaction,System.Int32)">
            <summary>
            Take an array of matching objects from the space.
            Matching is done as in Take with no timeout. 
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="query">The query used for matching.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <param name="maxItems">Maximum number of objects to return.</param>
            <returns>An array of objects taken from the space (empty array if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.TakeMultipleException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.TakeMultiple``1(GigaSpaces.Core.IQuery{``0},GigaSpaces.Core.ITransaction,System.Int32,GigaSpaces.Core.TakeModifiers)">
            <summary>
            Take an array of matching objects from the space.
            Matching is done as in Take with no timeout. 
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
            <param name="query">The query used for matching.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <param name="maxItems">Maximum number of objects to return.</param>
            <param name="modifiers">The modifier(s) to define behaviour of the operation.</param>
            <returns>An array of objects taken from the space (empty array if no match was found).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.TakeMultipleException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.Write``1(``0)">
            <summary>
            Writes a new object to the space.
            </summary>
            <typeparam name="T">Type of object to write.</typeparam>
            <param name="obj">The object to write.</param>
            <returns>A lease handle on successful write (null if NoWriteLease is set).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.EntryAlreadyInSpaceException">An entry with matching ID exists in space (WriteModifiers.WriteOnly).</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.EntryNotInSpaceException">An entry with matching ID does not exist in space (WriteModifiers.UpdateOnly).</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.OperationTimeoutException">Timeout expired after waiting for a transactional proper matching entry (when using WriteModifiers.UpdateOrWrite).</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.EntryVersionConflictException">Operation is rejected as a result of optimistic locking version conflict.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.Write``1(``0,GigaSpaces.Core.WriteModifiers)">
            <summary>
            Writes a new object to the space.
            </summary>
            <typeparam name="T">Type of object to write.</typeparam>
            <param name="obj">The object to write.</param>
            <param name="modifiers">Operation modifiers.</param>
            <returns>A lease handle on successful write (null if NoWriteLease is set).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.EntryAlreadyInSpaceException">An entry with matching ID exists in space (WriteModifiers.WriteOnly).</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.EntryNotInSpaceException">An entry with matching ID does not exist in space (WriteModifiers.UpdateOnly).</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.OperationTimeoutException">Timeout expired after waiting for a transactional proper matching entry (when using WriteModifiers.UpdateOrWrite).</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.EntryVersionConflictException">Operation is rejected as a result of optimistic locking version conflict.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.Write``1(``0,GigaSpaces.Core.ITransaction)">
            <summary>
            Writes a new object to the space.
            </summary>
            <typeparam name="T">Type of object to write.</typeparam>
            <param name="obj">The object to write.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <returns>A lease handle on successful write (null if NoWriteLease is set).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.EntryAlreadyInSpaceException">An entry with matching ID exists in space (WriteModifiers.WriteOnly).</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.EntryNotInSpaceException">An entry with matching ID does not exist in space (WriteModifiers.UpdateOnly).</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.OperationTimeoutException">Timeout expired after waiting for a transactional proper matching entry (when using WriteModifiers.UpdateOrWrite).</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.EntryVersionConflictException">Operation is rejected as a result of optimistic locking version conflict.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.Write``1(``0,GigaSpaces.Core.ITransaction,GigaSpaces.Core.WriteModifiers)">
            <summary>
            Writes a new object to the space.
            </summary>
            <typeparam name="T">Type of object to write.</typeparam>
            <param name="obj">The object to write.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <param name="modifiers">Operation modifiers.</param>
            <returns>A lease handle on successful write (null if NoWriteLease is set).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.EntryAlreadyInSpaceException">An entry with matching ID exists in space (WriteModifiers.WriteOnly).</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.EntryNotInSpaceException">An entry with matching ID does not exist in space (WriteModifiers.UpdateOnly).</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.OperationTimeoutException">Timeout expired after waiting for a transactional proper matching entry (when using WriteModifiers.UpdateOrWrite).</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.EntryVersionConflictException">Operation is rejected as a result of optimistic locking version conflict.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.Write``1(``0,System.Int64)">
            <summary>
            Writes a new object to the space.
            </summary>
            <typeparam name="T">Type of object to write.</typeparam>
            <param name="obj">The object to write.</param>
            <param name="leaseTime">The requested lease time, in milliseconds.</param>
            <returns>A lease handle on successful write (null if NoWriteLease is set).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.EntryAlreadyInSpaceException">An entry with matching ID exists in space (WriteModifiers.WriteOnly).</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.EntryNotInSpaceException">An entry with matching ID does not exist in space (WriteModifiers.UpdateOnly).</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.OperationTimeoutException">Timeout expired after waiting for a transactional proper matching entry (when using WriteModifiers.UpdateOrWrite).</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.EntryVersionConflictException">Operation is rejected as a result of optimistic locking version conflict.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.Write``1(``0,GigaSpaces.Core.ITransaction,System.Int64)">
            <summary>
            Writes a new object to the space.
            </summary>
            <typeparam name="T">Type of object to write.</typeparam>
            <param name="obj">The object to write.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <param name="leaseTime">The requested lease time, in milliseconds.</param>
            <returns>A lease handle on successful write (null if NoWriteLease is set).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.EntryAlreadyInSpaceException">An entry with matching ID exists in space (WriteModifiers.WriteOnly).</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.EntryNotInSpaceException">An entry with matching ID does not exist in space (WriteModifiers.UpdateOnly).</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.OperationTimeoutException">Timeout expired after waiting for a transactional proper matching entry (when using WriteModifiers.UpdateOrWrite).</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.EntryVersionConflictException">Operation is rejected as a result of optimistic locking version conflict.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.Write``1(``0,GigaSpaces.Core.ITransaction,System.Int64,System.Int64)">
            <summary>
            Writes a new object to the space.
            </summary>
            <typeparam name="T">Type of object to write.</typeparam>
            <param name="obj">The object to write.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <param name="leaseTime">The requested lease time, in milliseconds.</param>
            <param name="timeout">How long the client is willing to wait for a transactionally proper matching entry.</param>
            <returns>A lease handle on successful write (null if NoWriteLease is set).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.EntryAlreadyInSpaceException">An entry with matching ID exists in space (WriteModifiers.WriteOnly).</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.EntryNotInSpaceException">An entry with matching ID does not exist in space (WriteModifiers.UpdateOnly).</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.OperationTimeoutException">Timeout expired after waiting for a transactional proper matching entry (when using WriteModifiers.UpdateOrWrite).</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.EntryVersionConflictException">Operation is rejected as a result of optimistic locking version conflict.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.Write``1(``0,GigaSpaces.Core.ITransaction,System.Int64,System.Int64,GigaSpaces.Core.WriteModifiers)">
            <summary>
            Writes a new object to the space.
            </summary>
            <typeparam name="T">Type of object to write.</typeparam>
            <param name="obj">The object to write.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <param name="leaseTime">The requested lease time, in milliseconds.</param>
            <param name="timeout">How long the client is willing to wait for a transactionally proper matching entry.</param>
            <param name="modifiers">Operation modifiers.</param>
            <returns>A lease handle on successful write (null if NoWriteLease is set).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.EntryAlreadyInSpaceException">An entry with matching ID exists in space (WriteModifiers.WriteOnly).</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.EntryNotInSpaceException">An entry with matching ID does not exist in space (WriteModifiers.UpdateOnly).</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.OperationTimeoutException">Timeout expired after waiting for a transactional proper matching entry (when using WriteModifiers.UpdateOrWrite).</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TransactionException">Transaction error occured.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.EntryVersionConflictException">Operation is rejected as a result of optimistic locking version conflict.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">The space is in backup mode and therefore is not active.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.WriteMultiple``1(``0[])">
            <summary>
            Same as a single write but for a group of entities sharing the same transaction (if any).
            </summary>
            <typeparam name="T">Type of object to write.</typeparam>
            <param name="objects">The objects to write.</param>
            <returns>An array of leases on successful write (null if NoWriteLease is set).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.WriteMultipleException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.WriteMultiple``1(``0[],GigaSpaces.Core.WriteModifiers)">
            <summary>
            Same as a single write but for a group of entities sharing the same transaction (if any).
            </summary>
            <typeparam name="T">Type of object to write.</typeparam>
            <param name="objects">The objects to write.</param>
            <param name="modifiers">Operation modifiers.</param>
            <returns>An array of leases on successful write (null if NoWriteLease is set).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.WriteMultipleException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.WriteMultiple``1(``0[],GigaSpaces.Core.ITransaction)">
            <summary>
            Same as a single write but for a group of entities sharing the same transaction (if any).
            </summary>
            <typeparam name="T">Type of object to write.</typeparam>
            <param name="objects">The objects to write.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <returns>An array of leases on successful write (null if NoWriteLease is set).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.WriteMultipleException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.WriteMultiple``1(``0[],GigaSpaces.Core.ITransaction,GigaSpaces.Core.WriteModifiers)">
            <summary>
            Same as a single write but for a group of entities sharing the same transaction (if any).
            </summary>
            <typeparam name="T">Type of object to write.</typeparam>
            <param name="objects">The objects to write.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <param name="modifiers">Operation modifiers.</param>
            <returns>An array of leases on successful write (null if NoWriteLease is set).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.WriteMultipleException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.WriteMultiple``1(``0[],System.Int64)">
            <summary>
            Same as a single write but for a group of entities sharing the same transaction (if any).
            </summary>
            <typeparam name="T">Type of object to write.</typeparam>
            <param name="objects">The objects to write.</param>
            <param name="leaseTime">The requested lease time, in milliseconds.</param>
            <returns>An array of leases on successful write (null if NoWriteLease is set).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.WriteMultipleException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.WriteMultiple``1(``0[],GigaSpaces.Core.ITransaction,System.Int64)">
            <summary>
            Same as a single write but for a group of entities sharing the same transaction (if any).
            </summary>
            <typeparam name="T">Type of object to write.</typeparam>
            <param name="objects">The objects to write.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <param name="leaseTime">The requested lease time, in milliseconds.</param>
            <returns>An array of leases on successful write (null if NoWriteLease is set).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.WriteMultipleException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.WriteMultiple``1(``0[],GigaSpaces.Core.ITransaction,System.Int64,GigaSpaces.Core.WriteModifiers)">
            <summary>
            Same as a single write but for a group of entities sharing the same transaction (if any).
            </summary>
            <typeparam name="T">Type of object to write.</typeparam>
            <param name="objects">The objects to write.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <param name="leaseTime">The requested lease time, in milliseconds.</param>
            <param name="modifiers">Operation modifiers.</param>
            <returns>An array of leases on successful write (null if NoWriteLease is set).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.WriteMultipleException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.WriteMultiple``1(``0[],GigaSpaces.Core.ITransaction,System.Int64[],GigaSpaces.Core.WriteModifiers)">
            <summary>
            Same as a single write but for a group of entities sharing the same transaction (if any).
            </summary>
            <typeparam name="T">Type of object to write.</typeparam>
            <param name="objects">The objects to write.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <param name="leasesTime">The requested lease time per object, in milliseconds.</param>
            <param name="modifiers">Operation modifiers.</param>
            <returns>An array of leases on successful write (null if NoWriteLease is set).</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.WriteMultipleException">The operation had a failure.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.Execute``1(GigaSpaces.Core.Executors.ISpaceTask{``0},System.Object)">
            <summary>
            Executes a task on a specific space node. The space node it will
            execute on is controlled by the routing value provided as a second parameter.
            </summary>
            <typeparam name="T">Type of task execution result.</typeparam>
            <param name="task">The space task to execute.</param>
            <param name="routing">Controls routing of the task.</param>		
            <returns>An IAsyncResult that references the asynchronous execution.</returns>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.Execute``1(GigaSpaces.Core.Executors.ISpaceTask{``0},System.Object,GigaSpaces.Core.ITransaction)">
            <summary>
            Executes a task on a specific space node. The space node it will
            execute on is controlled by the routing value provided as a second parameter.
            </summary>
            <typeparam name="T">Type of task execution result.</typeparam>
            <param name="task">The space task to execute.</param>
            <param name="routing">Controls routing of the task.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <returns>An IAsyncResult that references the asynchronous execution.</returns>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.Execute``1(GigaSpaces.Core.Executors.ISpaceTask{``0},System.Object,GigaSpaces.Core.ITransaction,System.Int32)">
            <summary>
            Executes a task on a specific space node. The space node it will
            execute on is controlled by the routing value provided as a second parameter.
            </summary>
            <typeparam name="T">Type of task execution result.</typeparam>
            <param name="task">The space task to execute.</param>
            <param name="routing">Controls routing of the task.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <param name="timeout">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite"/> (-1) to wait indefinitely. </param>
            <returns>An IAsyncResult that references the asynchronous execution.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.OperationTimeoutException">Timeout expired.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.Execute``2(GigaSpaces.Core.Executors.IDistributedSpaceTask{``0,``1})">
             <summary>
             Executes the task on all the primary space nodes within the cluster (broadcast). The task is executed
             on each space node with all the results reduced by the <see cref="M:GigaSpaces.Core.Executors.ISpaceTaskResultsReducer`2.Reduce(GigaSpaces.Core.Executors.SpaceTaskResultsCollection{`1})"/> operation.
            
             The task can optionally implement <see cref="T:GigaSpaces.Core.Executors.ISpaceTaskResultsFilter`1"/> that can control
             if tasks should continue to accumelate or it should break and execute the reduce operation on the
             results received so far.
            
             The execution actual result will be the reduced result of the execution, or the exception thrown during
             during the reduce operation. The moderator can be used as a mechanism to listen for results as they arrive.
             </summary>
             <typeparam name="R">Type of distributed task reduced result.</typeparam>
             <typeparam name="T">Type of each single space task execution result.</typeparam>
             <param name="task">The distributed space task to execute.</param>
             <returns>An IAsyncResult that references the asynchronous execution.</returns>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.Execute``2(GigaSpaces.Core.Executors.IDistributedSpaceTask{``0,``1},GigaSpaces.Core.ITransaction)">
             <summary>
             Executes the task on all the primary space nodes within the cluster (broadcast). The task is executed
             on each space node with all the results reduced by the <see cref="T:GigaSpaces.Core.Executors.IDistributedSpaceTask`2"/> Reduce operation.
            
             The task can optionally implement <see cref="T:GigaSpaces.Core.Executors.ISpaceTaskResultsFilter`1"/> that can control
             if tasks should continue to accumelate or it should break and execute the reduce operation on the
             results received so far.
            
             The execution actual result will be the reduced result of the execution, or the exception thrown during
             during the reduce operation. The moderator can be used as a mechanism to listen for results as they arrive.
             </summary>
             <typeparam name="R">Type of distributed task reduced result.</typeparam>
             <typeparam name="T">Type of each single space task execution result.</typeparam>
             <param name="task">The distributed space task to execute.</param>
             <param name="tx">The transaction (if any) under which to work.</param>
             <returns>An IAsyncResult that references the asynchronous execution.</returns>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.Execute``2(GigaSpaces.Core.Executors.IDistributedSpaceTask{``0,``1},GigaSpaces.Core.ITransaction,System.Int32)">
             <summary>
             Executes the task on all the primary space nodes within the cluster (broadcast). The task is executed
             on each space node with all the results reduced by the <see cref="T:GigaSpaces.Core.Executors.IDistributedSpaceTask`2"/> Reduce operation.
            
             The task can optionally implement <see cref="T:GigaSpaces.Core.Executors.ISpaceTaskResultsFilter`1"/> that can control
             if tasks should continue to accumelate or it should break and execute the reduce operation on the
             results received so far.
            
             The execution actual result will be the reduced result of the execution, or the exception thrown during
             during the reduce operation. The moderator can be used as a mechanism to listen for results as they arrive.
             </summary>
             <typeparam name="R">Type of distributed task reduced result.</typeparam>
             <typeparam name="T">Type of each single space task execution result.</typeparam>
             <param name="task">The distributed space task to execute.</param>
             <param name="tx">The transaction (if any) under which to work.</param>
             <param name="timeout">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite"/> (-1) to wait indefinitely. </param>
             <returns>An IAsyncResult that references the asynchronous execution.</returns>
             <exception cref="T:GigaSpaces.Core.Exceptions.OperationTimeoutException">Timeout expired.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.BeginExecute``1(GigaSpaces.Core.Executors.ISpaceTask{``0},System.Object,GigaSpaces.Core.AsyncCallback{``0},System.Object)">
            <summary>
            Begins asynchronous execute operation which executes a task on a specific space node. The space node it will
            execute on is controlled by the routing value provided as a second parameter.
            </summary>
            <typeparam name="T">Type of task execution result.</typeparam>
            <param name="task">The space task to execute.</param>
            <param name="routing">Controls routing of the task.</param>
            <param name="userCallback">The method to be called when the asynchronous operation is complete.</param>
            <param name="stateObject">A user-provided object that distinguishes this particular asynchronous read request from other requests.</param>
            <returns>An IAsyncResult that references the asynchronous execution.</returns>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.BeginExecute``1(GigaSpaces.Core.Executors.ISpaceTask{``0},System.Object,GigaSpaces.Core.ITransaction,GigaSpaces.Core.AsyncCallback{``0},System.Object)">
            <summary>
            Begins asynchronous execute operation which executes a task on a specific space node. The space node it will
            execute on is controlled by the routing value provided as a second parameter.
            </summary>
            <typeparam name="T">Type of task execution result.</typeparam>
            <param name="task">The space task to execute.</param>
            <param name="routing">Controls routing of the task.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <param name="userCallback">The method to be called when the asynchronous operation is complete.</param>
            <param name="stateObject">A user-provided object that distinguishes this particular asynchronous read request from other requests.</param>
            <returns>An IAsyncResult that references the asynchronous execution.</returns>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.BeginExecute``2(GigaSpaces.Core.Executors.IDistributedSpaceTask{``0,``1},GigaSpaces.Core.AsyncCallback{``0},System.Object)">
             <summary>
             Begins asynchronous execute operation which executes the task on all the primary space nodes within the cluster (broadcast). The task is executed
             on each space node with all the results reduced by the <see cref="T:GigaSpaces.Core.Executors.IDistributedSpaceTask`2"/> Reduce operation.
            
             The task can optionally implement <see cref="T:GigaSpaces.Core.Executors.ISpaceTaskResultsFilter`1"/> that can control
             if tasks should continue to accumelate or it should break and execute the reduce operation on the
             results received so far.
            
             The execution actual result will be the reduced result of the execution, or the exception thrown during
             during the reduce operation. The moderator can be used as a mechanism to listen for results as they arrive.
             </summary>
             <typeparam name="R">Type of distributed task reduced result.</typeparam>
             <typeparam name="T">Type of each single space task execution result.</typeparam>
             <param name="task">The distributed space task to execute.</param>
             <param name="userCallback">The method to be called when the asynchronous operation is complete.</param>
             <param name="stateObject">A user-provided object that distinguishes this particular asynchronous read request from other requests.</param>
             <returns>An IAsyncResult that references the asynchronous execution.</returns>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.BeginExecute``2(GigaSpaces.Core.Executors.IDistributedSpaceTask{``0,``1},GigaSpaces.Core.ITransaction,GigaSpaces.Core.AsyncCallback{``0},System.Object)">
             <summary>
             Begins asynchronous execute operation which executes the task on all the primary space nodes within the cluster (broadcast). The task is executed
             on each space node with all the results reduced by the <see cref="T:GigaSpaces.Core.Executors.IDistributedSpaceTask`2"/> Reduce operation.
            
             The task can optionally implement <see cref="T:GigaSpaces.Core.Executors.ISpaceTaskResultsFilter`1"/> that can control
             if tasks should continue to accumelate or it should break and execute the reduce operation on the
             results received so far.
            
             The execution actual result will be the reduced result of the execution, or the exception thrown during
             during the reduce operation. The moderator can be used as a mechanism to listen for results as they arrive.
             </summary>
             <typeparam name="R">Type of distributed task reduced result.</typeparam>
             <typeparam name="T">Type of each single space task execution result.</typeparam>
             <param name="task">The distributed space task to execute.</param>
             <param name="tx">The transaction (if any) under which to work.</param>
             <param name="userCallback">The method to be called when the asynchronous operation is complete.</param>
             <param name="stateObject">A user-provided object that distinguishes this particular asynchronous read request from other requests.</param>
             <returns>An IAsyncResult that references the asynchronous execution.</returns>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.EndExecute``1(GigaSpaces.Core.IAsyncResult{``0})">
            <summary>
            Waits for the pending asynchronous execution to complete.
            </summary>
            <typeparam name="T">Type of task execution result.</typeparam>
            <param name="asyncResult">The reference to the pending asynchornous request to wait for.</param>
            <returns>Execution result.</returns>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.Change``1(``0,GigaSpaces.Core.ChangeSet)">
            <summary>
            Changes an existing object in space, returning a change result which provides details of the operation affect.
            The change operation is designed for performance optimization, By allowing to change an existing object unlike 
            with regular updating write operation which usually requires reading the object before applying to update to it. 
            As part of the optimization, when the operation is replicated, on a best effort it will 
            try to replicate only the required data which is needed to apply the changes on the entry in the replicated target.
            
            Modifiers can be used to specify behavior of the change operation, by default uses the <see cref="F:GigaSpaces.Core.ChangeModifiers.None"/> modifier.		 
            </summary>
            <typeparam name="T">Type of object to change.</typeparam>
            <param name="template">Query to search by.</param>
            <param name="changeSet">Changes to apply to the matched entry.</param>        
            <returns>A <see cref="T:GigaSpaces.Core.IChangeResult`1"/> containing the details of the change operation affect.</returns>        
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.Change``1(``0,GigaSpaces.Core.ChangeSet,GigaSpaces.Core.ITransaction)">
            <summary>
            Changes an existing object in space, returning a change result which provides details of the operation affect.
            The change operation is designed for performance optimization, By allowing to change an existing object unlike 
            with regular updating write operation which usually requires reading the object before applying to update to it. 
            As part of the optimization, when the operation is replicated, on a best effort it will 
            try to replicate only the required data which is needed to apply the changes on the entry in the replicated target.
            
            Modifiers can be used to specify behavior of the change operation, by default uses the <see cref="F:GigaSpaces.Core.ChangeModifiers.None"/> modifier.		 
            </summary>
            <typeparam name="T">Type of object to change.</typeparam>
            <param name="template">Query to search by.</param>
            <param name="changeSet">Changes to apply to the matched entry.</param>
            <param name="tx">The transaction (if any) under which to work.</param>        
            <returns>A <see cref="T:GigaSpaces.Core.IChangeResult`1"/> containing the details of the change operation affect.</returns>        
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.Change``1(``0,GigaSpaces.Core.ChangeSet,System.Int64)">
            <summary>
            Changes an existing object in space, returning a change result which provides details of the operation affect.
            The change operation is designed for performance optimization, By allowing to change an existing object unlike 
            with regular updating write operation which usually requires reading the object before applying to update to it. 
            As part of the optimization, when the operation is replicated, on a best effort it will 
            try to replicate only the required data which is needed to apply the changes on the entry in the replicated target.
            
            Modifiers can be used to specify behavior of the change operation, by default uses the <see cref="F:GigaSpaces.Core.ChangeModifiers.None"/> modifier.		 
            </summary>
            <typeparam name="T">Type of object to change.</typeparam>
            <param name="template">Query to search by.</param>
            <param name="changeSet">Changes to apply to the matched entry.</param>
            <param name="timeout">The timeout of the operation, in <b>milliseconds</b>. If the entry is locked by another transaction
            wait for the specified number of milliseconds for it to be released.</param>
            <returns>A <see cref="T:GigaSpaces.Core.IChangeResult`1"/> containing the details of the change operation affect.</returns>        
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.Change``1(``0,GigaSpaces.Core.ChangeSet,GigaSpaces.Core.ITransaction,System.Int64)">
            <summary>
            Changes an existing object in space, returning a change result which provides details of the operation affect.
            The change operation is designed for performance optimization, By allowing to change an existing object unlike 
            with regular updating write operation which usually requires reading the object before applying to update to it. 
            As part of the optimization, when the operation is replicated, on a best effort it will 
            try to replicate only the required data which is needed to apply the changes on the entry in the replicated target.
            
            Modifiers can be used to specify behavior of the change operation, by default uses the <see cref="F:GigaSpaces.Core.ChangeModifiers.None"/> modifier.		 
            </summary>
            <typeparam name="T">Type of object to change.</typeparam>
            <param name="template">Query to search by.</param>
            <param name="changeSet">Changes to apply to the matched entry.</param>
            <param name="tx">The transaction (if any) under which to work.</param>        
            <param name="timeout">The timeout of the operation, in <b>milliseconds</b>. If the entry is locked by another transaction
            wait for the specified number of milliseconds for it to be released.</param>
            <returns>A <see cref="T:GigaSpaces.Core.IChangeResult`1"/> containing the details of the change operation affect.</returns>        
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.Change``1(``0,GigaSpaces.Core.ChangeSet,GigaSpaces.Core.ITransaction,System.Int64,GigaSpaces.Core.ChangeModifiers)">
            <summary>
            Changes an existing object in space, returning a change result which provides details of the operation affect.
            The change operation is designed for performance optimization, By allowing to change an existing object unlike 
            with regular updating write operation which usually requires reading the object before applying to update to it. 
            As part of the optimization, when the operation is replicated, on a best effort it will 
            try to replicate only the required data which is needed to apply the changes on the entry in the replicated target.
            
            Modifiers can be used to specify behavior of the change operation, by default uses the <see cref="F:GigaSpaces.Core.ChangeModifiers.None"/> modifier.		 
            </summary>
            <typeparam name="T">Type of object to change.</typeparam>
            <param name="template">Query to search by.</param>
            <param name="changeSet">Changes to apply to the matched entry.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <param name="modifiers">Operation modifiers.</param>
            <param name="timeout">The timeout of the operation, in <b>milliseconds</b>. If the entry is locked by another transaction
            wait for the specified number of milliseconds for it to be released.</param>
            <returns>A <see cref="T:GigaSpaces.Core.IChangeResult`1"/> containing the details of the change operation affect.</returns>        
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.Change``1(GigaSpaces.Core.IQuery{``0},GigaSpaces.Core.ChangeSet)">
            <summary>
            Changes an existing object in space, returning a change result which provides details of the operation affect.
            The change operation is designed for performance optimization, By allowing to change an existing object unlike 
            with regular updating write operation which usually requires reading the object before applying to update to it. 
            As part of the optimization, when the operation is replicated, on a best effort it will 
            try to replicate only the required data which is needed to apply the changes on the entry in the replicated target.
            
            Modifiers can be used to specify behavior of the change operation, by default uses the <see cref="F:GigaSpaces.Core.ChangeModifiers.None"/> modifier.		 
            </summary>
            <typeparam name="T">Type of object to change.</typeparam>
            <param name="query">Query to search by.</param>
            <param name="changeSet">Changes to apply to the matched entry.</param>        
            <returns>A <see cref="T:GigaSpaces.Core.IChangeResult`1"/> containing the details of the change operation affect.</returns>        
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.Change``1(GigaSpaces.Core.IQuery{``0},GigaSpaces.Core.ChangeSet,GigaSpaces.Core.ITransaction)">
            <summary>
            Changes an existing object in space, returning a change result which provides details of the operation affect.
            The change operation is designed for performance optimization, By allowing to change an existing object unlike 
            with regular updating write operation which usually requires reading the object before applying to update to it. 
            As part of the optimization, when the operation is replicated, on a best effort it will 
            try to replicate only the required data which is needed to apply the changes on the entry in the replicated target.
            
            Modifiers can be used to specify behavior of the change operation, by default uses the <see cref="F:GigaSpaces.Core.ChangeModifiers.None"/> modifier.		 
            </summary>
            <typeparam name="T">Type of object to change.</typeparam>
            <param name="query">Query to search by.</param>
            <param name="changeSet">Changes to apply to the matched entry.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <returns>A <see cref="T:GigaSpaces.Core.IChangeResult`1"/> containing the details of the change operation affect.</returns>        
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.Change``1(GigaSpaces.Core.IQuery{``0},GigaSpaces.Core.ChangeSet,System.Int64)">
            <summary>
            Changes an existing object in space, returning a change result which provides details of the operation affect.
            The change operation is designed for performance optimization, By allowing to change an existing object unlike 
            with regular updating write operation which usually requires reading the object before applying to update to it. 
            As part of the optimization, when the operation is replicated, on a best effort it will 
            try to replicate only the required data which is needed to apply the changes on the entry in the replicated target.
            
            Modifiers can be used to specify behavior of the change operation, by default uses the <see cref="F:GigaSpaces.Core.ChangeModifiers.None"/> modifier.		 
            </summary>
            <typeparam name="T">Type of object to change.</typeparam>
            <param name="query">Query to search by.</param>
            <param name="changeSet">Changes to apply to the matched entry.</param>
            <param name="timeout">The timeout of the operation, in <b>milliseconds</b>. If the entry is locked by another transaction
            wait for the specified number of milliseconds for it to be released.</param>
            <returns>A <see cref="T:GigaSpaces.Core.IChangeResult`1"/> containing the details of the change operation affect.</returns>        
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.Change``1(GigaSpaces.Core.IQuery{``0},GigaSpaces.Core.ChangeSet,GigaSpaces.Core.ITransaction,System.Int64)">
            <summary>
            Changes an existing object in space, returning a change result which provides details of the operation affect.
            The change operation is designed for performance optimization, By allowing to change an existing object unlike 
            with regular updating write operation which usually requires reading the object before applying to update to it. 
            As part of the optimization, when the operation is replicated, on a best effort it will 
            try to replicate only the required data which is needed to apply the changes on the entry in the replicated target.
            
            Modifiers can be used to specify behavior of the change operation, by default uses the <see cref="F:GigaSpaces.Core.ChangeModifiers.None"/> modifier.		 
            </summary>
            <typeparam name="T">Type of object to change.</typeparam>
            <param name="query">Query to search by.</param>
            <param name="changeSet">Changes to apply to the matched entry.</param>
            <param name="tx">The transaction (if any) under which to work.</param>        
            <param name="timeout">The timeout of the operation, in <b>milliseconds</b>. If the entry is locked by another transaction
            wait for the specified number of milliseconds for it to be released.</param>
            <returns>A <see cref="T:GigaSpaces.Core.IChangeResult`1"/> containing the details of the change operation affect.</returns>        
        </member>
        <member name="M:GigaSpaces.Core.ISpaceProxy.Change``1(GigaSpaces.Core.IQuery{``0},GigaSpaces.Core.ChangeSet,GigaSpaces.Core.ITransaction,System.Int64,GigaSpaces.Core.ChangeModifiers)">
            <summary>
            Changes an existing object in space, returning a change result which provides details of the operation affect.
            The change operation is designed for performance optimization, By allowing to change an existing object unlike 
            with regular updating write operation which usually requires reading the object before applying to update to it. 
            As part of the optimization, when the operation is replicated, on a best effort it will 
            try to replicate only the required data which is needed to apply the changes on the entry in the replicated target.
            
            Modifiers can be used to specify behavior of the change operation, by default uses the <see cref="F:GigaSpaces.Core.ChangeModifiers.None"/> modifier.		 
            </summary>
            <typeparam name="T">Type of object to change.</typeparam>
            <param name="query">Query to search by.</param>
            <param name="changeSet">Changes to apply to the matched entry.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <param name="modifiers">Operation modifiers.</param>
            <param name="timeout">The timeout of the operation, in <b>milliseconds</b>. If the entry is locked by another transaction
            wait for the specified number of milliseconds for it to be released.</param>
            <returns>A <see cref="T:GigaSpaces.Core.IChangeResult`1"/> containing the details of the change operation affect.</returns>        
        </member>
        <member name="P:GigaSpaces.Core.ISpaceProxy.NoWriteLeaseMode">
            <summary>
            Gets or sets if write operations return lease handles.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.ISpaceProxy.OptimisticLocking">
            <summary>
            Gets or sets the status of the optimistic locking mechanism.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.ISpaceProxy.TakeModifiers">
            <summary>
            Gets or sets the default <see cref="T:GigaSpaces.Core.TakeModifiers"/> associated with the proxy. 
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.ISpaceProxy.WriteModifiers">
            <summary>
            Gets or sets the default <see cref="T:GigaSpaces.Core.WriteModifiers"/> associated with the proxy. 
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.ISpaceProxy.ChangeModifiers">
            <summary>
            Gets or sets the default <see cref="T:GigaSpaces.Core.ChangeModifiers"/> associated with the proxy. 
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.ISpaceProxy.LocalTransactionManager">
            <summary>
            Gets the default local transaction manager associated with the proxy.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Cache.ILocalCache">
            <summary>
            Encapsulates a local cache over a space proxy
            </summary>
            <preliminary/>
        </member>
        <member name="P:GigaSpaces.Core.Cache.ILocalCache.LocalCacheManager">
            <summary>
            Gets the local cache manager.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Utils.Concurrent.IConcurrentDictionary`2.Replace(`0,`1,`1)">
            <summary>
            Replaces the value held at key with the new value only if the current value is old value as an
            atomic operation
            </summary>
            <param name="key"></param>
            <param name="oldValue"></param>
            <param name="newValue"></param>
            <returns>Old value if didn't succeed or new value if succeeded</returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Utils.Concurrent.IConcurrentDictionary`2.Put(`0,`1)">
            <summary>
            Replaces the value held at key with the new value as an
            atomic operation
            </summary>
            <param name="key"></param>		
            <param name="newValue"></param>
            <returns>Previous value held at key</returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Utils.Concurrent.IConcurrentDictionary`2.PutIfAbsent(`0,`1)">
            <summary>
            Puts a key and value into the dictionary if this key doesn't exist
            </summary>
            <param name="key">Key to insert into</param>
            <param name="value">Value to put</param>
            <returns>Previous value is this key already exists or latest value if operation succeeded.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Utils.Concurrent.IConcurrentDictionary`2.Take(`0)">
            <summary>
            Act as remove but returns the contained value is exists, other wise null
            </summary>
            <param name="key">Key to take</param>
            <returns>contained value is exists, other wise null</returns>
        </member>
        <member name="T:GigaSpaces.Core.Cache.Eviction.EvictableConcurrentDictionary`2.CachedTypesFilterEvictionStrategyDecorator">
            <summary>
            Decorates an eviction strategy with a filter that filters out entries that their types is not supposed to be cached
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Cache.Eviction.IEvictionStrategy`2">
            <summary>
            Provider an interface for an eviction strategy.	
            </summary>
            <typeparam name="TKey">Type of key.</typeparam>
            <typeparam name="TValue">Type of value.</typeparam>
            <preliminary/>
        </member>
        <member name="M:GigaSpaces.Core.Cache.Eviction.IEvictionStrategy`2.Introduce(`0,`1)">
            <summary>
            Called when a new cache entry is inserted into the cache, this method can also be called for items that have already been introduced and not yet removed.
            </summary>
            <param name="key">Entry key.</param>
            <param name="value">Entry value.</param>
            <returns>Whether to accept this entry or to reject it.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Cache.Eviction.IEvictionStrategy`2.Remove(`0,`1)">
            <summary>
            Called when a cache entry is removed from cache.
            </summary>
            <param name="key">Entry key.</param>
            <param name="value">Entry value.</param>
        </member>
        <member name="M:GigaSpaces.Core.Cache.Eviction.IEvictionStrategy`2.Remove(`0)">
            <summary>
            Called when a cache entry is removed from cache.
            </summary>
            <param name="key">Entry key.</param>		
        </member>
        <member name="M:GigaSpaces.Core.Cache.Eviction.IEvictionStrategy`2.Touch(`0,`1)">
            <summary>
            Called when a cache entry is touched inside the cache. (Read operation)
            </summary>
            <param name="key">Entry key.</param>
            <param name="value">Entry value.</param>
        </member>
        <member name="M:GigaSpaces.Core.Cache.Eviction.IEvictionStrategy`2.Clear">
            <summary>
            Called when the cache is cleared
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Cache.Eviction.IEvictionStrategy`2.Initialize(GigaSpaces.Core.Cache.Eviction.IEvictionFacade{`0})">
            <summary>
            Called upon cache initialization
            </summary>
            <param name="evictionFacade">Callback for eviction interaction, actual eviction is done using this facade.</param>
        </member>
        <member name="P:GigaSpaces.Core.Cache.Eviction.IEvictionStrategy`2.RequiresLockOnTouch">
            <summary>
            States whether this eviction strategy requires lock on touch, if not multi threads can call touch concurrently.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Cache.Eviction.FifoSegmentEvictionStrategyBuilder">
            <summary>
            First in first out based eviction startegy builder
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Cache.Eviction.PeriodicClearSegmentEvictionStrategyBuilder">
            <summary>
            A base class for <see cref="T:GigaSpaces.Core.Cache.Eviction.ISegmentEvictionStrategyBuilder"/> implementors that supports periodic eviction
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Cache.Eviction.PeriodicClearSegmentEvictionStrategyBuilder.#ctor(System.TimeSpan)">
            <summary>
            Constructs a builder
            </summary>
            <param name="periodicClearTime">Timespan between preiodic cache clears, each time this time span passes the local cache will be cleared</param>
        </member>
        <member name="M:GigaSpaces.Core.Cache.Eviction.PeriodicClearSegmentEvictionStrategyBuilder.#ctor">
            <summary>
            Constructs a builder
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Cache.Eviction.PeriodicClearSegmentEvictionStrategyBuilder.#ctor(System.Boolean)">
            <summary>
            Constructs a builder
            </summary>
            <param name="doPeriodicClear">Should clear local cahe periodicly</param>
        </member>
        <member name="P:GigaSpaces.Core.Cache.Eviction.PeriodicClearSegmentEvictionStrategyBuilder.PeriodicClearTimer">
            <summary>
            Get the timer that will raise the periodic clear event
            </summary>
            <returns></returns>
        </member>
        <member name="T:GigaSpaces.Core.Cache.Eviction.ISegmentEvictionStrategyBuilder">
            <summary>
            Provider an interface to build <see cref="T:GigaSpaces.Core.Cache.Eviction.IEvictionStrategy`2"/> per segment of the <see cref="T:GigaSpaces.Core.Cache.ILocalCache"/> storage.
            Each instance of the eviction strategy will only be aware and in charge of evicting from a certain segment of the cache.
            <seealso cref="T:GigaSpaces.Core.Cache.ILocalCache"/>
            <seealso cref="T:GigaSpaces.Core.Cache.Eviction.LruSegmentEvictionStrategyBuilder"/>
            <seealso cref="T:GigaSpaces.Core.Cache.Eviction.FifoSegmentEvictionStrategyBuilder"/>
            <seealso cref="T:GigaSpaces.Core.Cache.Eviction.TimeBasedSegmentEvictionStrategyBuilder"/>
            <seealso cref="T:GigaSpaces.Core.Cache.Eviction.UnlimitedCacheSegmentEvictionStrategyBuilder"/>
            </summary>
            <preliminary/>
        </member>
        <member name="M:GigaSpaces.Core.Cache.Eviction.ISegmentEvictionStrategyBuilder.CreateSegmentEvictionStrategy``2(System.Int32,System.Int32)">
            <summary>
            Create a instance of <see cref="T:GigaSpaces.Core.Cache.Eviction.IEvictionStrategy`2"/>, each segment of the storage will
            call this method upon construction. This method will be called according to the supplied numberOfSegments parameter times.
            </summary>
            <typeparam name="TKey">Type of key.</typeparam>
            <typeparam name="TValue">Type of value.</typeparam>
            <param name="segmentIndex">The index of the construcred segment.</param>
            <param name="totalSegments">Total number of segments.</param>
            <returns>Instance of <see cref="T:GigaSpaces.Core.Cache.Eviction.IEvictionStrategy`2"/>.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Cache.Eviction.FifoSegmentEvictionStrategyBuilder.#ctor(System.Int32,System.Int32,System.TimeSpan)">
            <summary>
            Construct the builder
            </summary>
            <param name="sizeLimit">Local Cache sizelimit (Of all the segments)</param>
            <param name="evictionBatchSize">How many entries to evict from cache when an eviction is required</param>
            <param name="periodicClearTime">Timespan between preiodic cache clears, each time this time span passes the local cache will be cleared</param>
        </member>
        <member name="M:GigaSpaces.Core.Cache.Eviction.FifoSegmentEvictionStrategyBuilder.#ctor(System.Int32,System.Int32)">
            <summary>
            Construct the builder
            </summary>
            <param name="sizeLimit">Local Cache sizelimit (Of all the segments)</param>
            <param name="evictionBatchSize">How many entries to evict from cache when an eviction is required</param>		
        </member>
        <member name="M:GigaSpaces.Core.Cache.Eviction.FifoSegmentEvictionStrategyBuilder.#ctor(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Construct the builder
            </summary>
            <param name="sizeLimit">Local Cache sizelimit (Of all the segments)</param>
            <param name="evictionBatchSize">How many entries to evict from cache when an eviction is required</param>
            <param name="doPeriodicClear">Should clear local cahe periodicly</param>
        </member>
        <member name="M:GigaSpaces.Core.Cache.Eviction.FifoSegmentEvictionStrategyBuilder.CreateSegmentEvictionStrategy``2(System.Int32,System.Int32)">
            <summary>
            Create a instance of <see cref="T:GigaSpaces.Core.Cache.Eviction.IEvictionStrategy`2"/>, each segment of the storage will
            call this method upon construction. This method will be called according to the supplied numberOfSegments parameter times.
            </summary>
            <typeparam name="TKey">Type of key.</typeparam>
            <typeparam name="TValue">Type of value.</typeparam>
            <param name="segmentIndex">The index of the construcred segment.</param>
            <param name="totalSegments">Total number of segments.</param>
            <returns>Instance of <see cref="T:GigaSpaces.Core.Cache.Eviction.IEvictionStrategy`2"/>.</returns>
        </member>
        <member name="T:GigaSpaces.Core.Cache.Eviction.IEvictionFacade`1">
            <summary>
            Acts as a callback for <see cref="T:GigaSpaces.Core.Cache.Eviction.IEvictionStrategy`2"/> that accept eviction commands.
            </summary>
            <typeparam name="TKey">Type of key.</typeparam>
            <preliminary/>
        </member>
        <member name="M:GigaSpaces.Core.Cache.Eviction.IEvictionFacade`1.Evict(`0[])">
            <summary>
            Evict cache entries, the cache implementation must evict the cache entries that correlates to the supplied keys.
            <remarks>
            Calling this method may assume thread safetly only if it is synchroniously through the thread that called the eviction strategy
            methods. Otherwise, for instance a background timer thread that evict items from the cache on a timely basis, a call to <see cref="M:GigaSpaces.Core.Cache.Eviction.IEvictionFacade`1.LockStorage"/> must be
            called to ensure no concurrent modifications are being done while evicting.
            </remarks>
            </summary>
            <param name="keys">Array of keys of which to evict from the cache</param>
        </member>
        <member name="M:GigaSpaces.Core.Cache.Eviction.IEvictionFacade`1.EvictAll">
            <summary>
            Evict all the items in the cache, the cache implementation must evict all the cache entries.
            <remarks>
            Calling this method may assume thread safetly only if it is synchroniously through the thread that called the eviction strategy
            methods. Otherwise, for instance a background timer thread that evict items from the cache on a timely basis, a call to <see cref="M:GigaSpaces.Core.Cache.Eviction.IEvictionFacade`1.LockStorage"/> must be
            called to ensure no concurrent modifications are being done while evicting.
            </remarks>
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Cache.Eviction.IEvictionFacade`1.LockStorage">
            <summary>
            Locks the storage, any concurrent operation will block until <see cref="M:GigaSpaces.Core.Cache.Eviction.IEvictionFacade`1.UnlockStorage"/> is called.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Cache.Eviction.IEvictionFacade`1.UnlockStorage">
            <summary>
            Unlock the storage, A call to this method should follow a previous <see cref="M:GigaSpaces.Core.Cache.Eviction.IEvictionFacade`1.LockStorage"/> call.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Cache.Eviction.LfuSegmentEvictionStrategyBuilder">
            <summary>
            Least frequently used based eviction strategy builder
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Cache.Eviction.LfuSegmentEvictionStrategyBuilder.DefaultTouchThreshold">
            <summary>
            Specify default value for the touch threshold
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Cache.Eviction.LfuSegmentEvictionStrategyBuilder.#ctor(System.Int32,System.Int32,System.TimeSpan)">
            <summary>
            Construct the builder
            </summary>
            <param name="sizeLimit">Local Cache sizelimit (Of all the segments)</param>
            <param name="evictionBatchSize">How many entries to evict from cache when an eviction is required</param>
            <param name="periodicClearTime">Timespan between preiodic cache clears, each time this time span passes the local cache will be cleared</param>
        </member>
        <member name="M:GigaSpaces.Core.Cache.Eviction.LfuSegmentEvictionStrategyBuilder.#ctor(System.Int32,System.Int32,System.TimeSpan,System.Double)">
            <summary>
            Construct the builder
            </summary>
            <param name="sizeLimit">Local Cache sizelimit (Of all the segments)</param>
            <param name="evictionBatchSize">How many entries to evict from cache when an eviction is required</param>
            <param name="periodicClearTime">Timespan between preiodic cache clears, each time this time span passes the local cache will be cleared</param>
            <param name="touchThreshold">When the number of objects in the cache exceeds this threshold, each time an object is accessed at the cache, the <see cref="M:GigaSpaces.Core.Cache.Eviction.IEvictionStrategy`2.Touch(`0,`1)"/> method of the eviction strategy will be called.
            Before the threshold is exceeded the <see cref="M:GigaSpaces.Core.Cache.Eviction.IEvictionStrategy`2.Touch(`0,`1)"/> method will not called thus improving the performance of the cache when it is not near its size limit because eviction is not likely to occur.
            The threshold is a number between 0 and 1 which represents a capacity out of the size limit, this is done by the following formula: touchThreshold * sizeLimit.</param>
        </member>
        <member name="M:GigaSpaces.Core.Cache.Eviction.LfuSegmentEvictionStrategyBuilder.#ctor(System.Int32,System.Int32)">
            <summary>
            Construct the builder
            </summary>
            <param name="sizeLimit">Local Cache sizelimit (Of all the segments)</param>
            <param name="evictionBatchSize">How many entries to evict from cache when an eviction is required</param>		
        </member>
        <member name="M:GigaSpaces.Core.Cache.Eviction.LfuSegmentEvictionStrategyBuilder.#ctor(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Construct the builder
            </summary>
            <param name="sizeLimit">Local Cache sizelimit (Of all the segments)</param>
            <param name="evictionBatchSize">How many entries to evict from cache when an eviction is required</param>
            <param name="doPeriodicClear">Should clear local cahe periodicly</param>
        </member>
        <member name="M:GigaSpaces.Core.Cache.Eviction.LfuSegmentEvictionStrategyBuilder.#ctor(System.Int32,System.Int32,System.Boolean,System.Double)">
            <summary>
            Construct the builder
            </summary>
            <param name="sizeLimit">Local Cache sizelimit (Of all the segments)</param>
            <param name="evictionBatchSize">How many entries to evict from cache when an eviction is required</param>
            <param name="doPeriodicClear">Should clear local cahe periodicly</param>
            <param name="touchThreshold">When the number of objects in the cache exceeds this threshold, each time an object is accessed at the cache, the <see cref="M:GigaSpaces.Core.Cache.Eviction.IEvictionStrategy`2.Touch(`0,`1)"/> method of the eviction strategy will be called.
            Before the threshold is exceeded the <see cref="M:GigaSpaces.Core.Cache.Eviction.IEvictionStrategy`2.Touch(`0,`1)"/> method will not called thus improving the performance of the cache when it is not near its size limit because eviction is not likely to occur.
            The threshold is a number between 0 and 1 which represents a capacity out of the size limit, this is done by the following formula: touchThreshold * sizeLimit.</param>
        </member>
        <member name="M:GigaSpaces.Core.Cache.Eviction.LfuSegmentEvictionStrategyBuilder.CreateSegmentEvictionStrategy``2(System.Int32,System.Int32)">
            <summary>
            Create a instance of <see cref="T:GigaSpaces.Core.Cache.Eviction.IEvictionStrategy`2"/>, each segment of the storage will
            call this method upon construction. This method will be called according to the supplied numberOfSegments parameter times.
            </summary>
            <typeparam name="TKey">Type of key.</typeparam>
            <typeparam name="TValue">Type of value.</typeparam>
            <param name="segmentIndex">The index of the construcred segment.</param>
            <param name="totalSegments">Total number of segments.</param>
            <returns>Instance of <see cref="T:GigaSpaces.Core.Cache.Eviction.IEvictionStrategy`2"/>.</returns>
        </member>
        <member name="T:GigaSpaces.Core.Cache.Eviction.LruSegmentEvictionStrategyBuilder">
            <summary>
            Least recently used based eviction strategy builder
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Cache.Eviction.LruSegmentEvictionStrategyBuilder.DefaultTouchThreshold">
            <summary>
            Specify default value for the touch threshold
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Cache.Eviction.LruSegmentEvictionStrategyBuilder.#ctor(System.Int32,System.Int32,System.TimeSpan)">
            <summary>
            Construct the builder
            </summary>
            <param name="sizeLimit">Local Cache sizelimit (Of all the segments)</param>
            <param name="evictionBatchSize">How many entries to evict from cache when an eviction is required</param>
            <param name="periodicClearTime">Timespan between preiodic cache clears, each time this time span passes the local cache will be cleared</param>
        </member>
        <member name="M:GigaSpaces.Core.Cache.Eviction.LruSegmentEvictionStrategyBuilder.#ctor(System.Int32,System.Int32,System.TimeSpan,System.Double)">
            <summary>
            Construct the builder
            </summary>
            <param name="sizeLimit">Local Cache sizelimit (Of all the segments)</param>
            <param name="evictionBatchSize">How many entries to evict from cache when an eviction is required</param>
            <param name="periodicClearTime">Timespan between preiodic cache clears, each time this time span passes the local cache will be cleared</param>
            <param name="touchThreshold">When the number of objects in the cache exceeds this threshold, each time an object is accessed at the cache, the <see cref="M:GigaSpaces.Core.Cache.Eviction.IEvictionStrategy`2.Touch(`0,`1)"/> method of the eviction strategy will be called.
            Before the threshold is exceeded the <see cref="M:GigaSpaces.Core.Cache.Eviction.IEvictionStrategy`2.Touch(`0,`1)"/> method will not called thus improving the performance of the cache when it is not near its size limit because eviction is not likely to occur.
            The threshold is a number between 0 and 1 which represents a capacity out of the size limit, this is done by the following formula: touchThreshold * sizeLimit.</param>
        </member>
        <member name="M:GigaSpaces.Core.Cache.Eviction.LruSegmentEvictionStrategyBuilder.#ctor(System.Int32,System.Int32)">
            <summary>
            Construct the builder
            </summary>
            <param name="sizeLimit">Local Cache sizelimit (Of all the segments)</param>
            <param name="evictionBatchSize">How many entries to evict from cache when an eviction is required</param>
        </member>
        <member name="M:GigaSpaces.Core.Cache.Eviction.LruSegmentEvictionStrategyBuilder.#ctor(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Construct the builder
            </summary>
            <param name="sizeLimit">Local Cache sizelimit (Of all the segments)</param>
            <param name="evictionBatchSize">How many entries to evict from cache when an eviction is required</param>
            <param name="doPeriodicClear">Should clear local cahe periodicly</param>
        </member>
        <member name="M:GigaSpaces.Core.Cache.Eviction.LruSegmentEvictionStrategyBuilder.#ctor(System.Int32,System.Int32,System.Boolean,System.Double)">
            <summary>
            Construct the builder
            </summary>
            <param name="sizeLimit">Local Cache sizelimit (Of all the segments)</param>
            <param name="evictionBatchSize">How many entries to evict from cache when an eviction is required</param>
            <param name="doPeriodicClear">Should clear local cahe periodicly</param>
            <param name="touchThreshold">When the number of objects in the cache exceeds this threshold, each time an object is accessed at the cache, the <see cref="M:GigaSpaces.Core.Cache.Eviction.IEvictionStrategy`2.Touch(`0,`1)"/> method of the eviction strategy will be called.
            Before the threshold is exceeded the <see cref="M:GigaSpaces.Core.Cache.Eviction.IEvictionStrategy`2.Touch(`0,`1)"/> method will not called thus improving the performance of the cache when it is not near its size limit because eviction is not likely to occur.
            The threshold is a number between 0 and 1 which represents a capacity out of the size limit, this is done by the following formula: touchThreshold * sizeLimit.</param>
        </member>
        <member name="M:GigaSpaces.Core.Cache.Eviction.LruSegmentEvictionStrategyBuilder.CreateSegmentEvictionStrategy``2(System.Int32,System.Int32)">
            <summary>
            Create a instance of <see cref="T:GigaSpaces.Core.Cache.Eviction.IEvictionStrategy`2"/>, each segment of the storage will
            call this method upon construction. This method will be called according to the supplied numberOfSegments parameter times.
            </summary>
            <typeparam name="TKey">Type of key.</typeparam>
            <typeparam name="TValue">Type of value.</typeparam>
            <param name="segmentIndex">The index of the construcred segment.</param>
            <param name="totalSegments">Total number of segments.</param>
            <returns>Instance of <see cref="T:GigaSpaces.Core.Cache.Eviction.IEvictionStrategy`2"/>.</returns>
        </member>
        <member name="T:GigaSpaces.Core.Cache.Eviction.TimeBasedSegmentEvictionStrategyBuilder">
            <summary>
            Time based eviction strategy builder, an entry is evicted if it has not been accessed for the specified time.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Cache.Eviction.TimeBasedSegmentEvictionStrategyBuilder.#ctor(System.TimeSpan,System.TimeSpan)">
            <summary>
            Construct a builder
            </summary>
            <param name="timeToLive">Specifies how much an untouched entry remains in the local cache.</param>
            <param name="periodicClearTime">Timespan between preiodic cache clears, each time this time span passes the local cache will be cleared</param>
        </member>
        <member name="M:GigaSpaces.Core.Cache.Eviction.TimeBasedSegmentEvictionStrategyBuilder.#ctor(System.TimeSpan)">
            <summary>
            Construct a builder
            </summary>
            <param name="timeToLive">Specifies how much an untouched entry remains in the local cache.</param>		
        </member>
        <member name="M:GigaSpaces.Core.Cache.Eviction.TimeBasedSegmentEvictionStrategyBuilder.#ctor(System.TimeSpan,System.Boolean)">
            <summary>
            Construct a builder
            </summary>
            <param name="timeToLive">Specifies how much an untouched entry remains in the local cache.</param>
            <param name="doPeriodicClear">Should clear local cahe periodicly</param>
        </member>
        <member name="M:GigaSpaces.Core.Cache.Eviction.TimeBasedSegmentEvictionStrategyBuilder.CreateSegmentEvictionStrategy``2(System.Int32,System.Int32)">
            <summary>
            Create a instance of <see cref="T:GigaSpaces.Core.Cache.Eviction.IEvictionStrategy`2"/>, each segment of the storage will
            call this method upon construction. This method will be called according to the supplied numberOfSegments parameter times.
            </summary>
            <typeparam name="TKey">Type of key.</typeparam>
            <typeparam name="TValue">Type of value.</typeparam>
            <param name="segmentIndex">The index of the construcred segment.</param>
            <param name="totalSegments">Total number of segments.</param>
            <returns>Instance of <see cref="T:GigaSpaces.Core.Cache.Eviction.IEvictionStrategy`2"/>.</returns>
        </member>
        <member name="T:GigaSpaces.Core.Cache.Eviction.UnlimitedCacheSegmentEvictionStrategyBuilder">
            <summary>
            Builder for eviction strategy that does not limit the cache size, it only executes periodic clears if configured to do so.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Cache.Eviction.UnlimitedCacheSegmentEvictionStrategyBuilder.#ctor(System.TimeSpan)">
            <summary>
            Construct the builder
            </summary>
            <param name="periodicClearTime">Timespan between preiodic cache clears, each time this time span passes the local cache will be cleared</param>
        </member>
        <member name="M:GigaSpaces.Core.Cache.Eviction.UnlimitedCacheSegmentEvictionStrategyBuilder.#ctor(System.Boolean)">
            <summary>
            Construct the builder
            </summary>		
            <param name="doPeriodicClear">Should clear local cahe periodicly</param>
        </member>
        <member name="M:GigaSpaces.Core.Cache.Eviction.UnlimitedCacheSegmentEvictionStrategyBuilder.CreateSegmentEvictionStrategy``2(System.Int32,System.Int32)">
            <summary>
            Create a instance of <see cref="T:GigaSpaces.Core.Cache.Eviction.IEvictionStrategy`2"/>, each segment of the storage will
            call this method upon construction. This method will be called according to the supplied numberOfSegments parameter times.
            </summary>
            <typeparam name="TKey">Type of key.</typeparam>
            <typeparam name="TValue">Type of value.</typeparam>
            <param name="segmentIndex">The index of the construcred segment.</param>
            <param name="totalSegments">Total number of segments.</param>
            <returns>Instance of <see cref="T:GigaSpaces.Core.Cache.Eviction.IEvictionStrategy`2"/>.</returns>
        </member>
        <member name="T:GigaSpaces.Core.Cache.ILocalCacheManager">
            <summary>
             Manages a local cache.
             
             <see cref="T:GigaSpaces.Core.Cache.ILocalCache"/>
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Cache.ILocalCacheManager.ClearLocalCache">
            <summary>
            Clears the local cache storage, does not affect items in the cached space.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Cache.ILocalCacheManager.ReadByIdFromCache(System.Type,System.Object)">
            <summary>
            Reads an entry from the local cache only, this operation will not be delegated to the cached proxy if the entry
            is not present in the local cache.
            </summary>
            <param name="type">entry type.</param>
            <param name="id">id of the entry.</param>
            <returns>Matching entry or null if it not present in the local cache</returns>
        </member>
        <member name="M:GigaSpaces.Core.Cache.ILocalCacheManager.ReadByIdFromCache``1(System.Object)">
            <summary>
            Reads an entry from the local cache only, this operation will not be delegated to the cached proxy if the entry
            is not present in the local cache.
            </summary>
            <typeparam name="T">entry type.</typeparam>
            <param name="id">id of the entry.</param>
            <returns>Matching entry or null if it not present in the local cache</returns>
        </member>
        <member name="M:GigaSpaces.Core.Cache.ILocalCacheManager.ReadByIdFromCache(System.String,System.Object)">
            <summary>
            Reads an entry from the local cache only, this operation will not be delegated to the cached proxy if the entry
            is not present in the local cache.
            </summary>		
            <param name="typeName">entry type name.</param>
            <param name="id">id of the entry.</param>
            <returns>Matching entry or null if it not present in the local cache</returns>
        </member>
        <member name="M:GigaSpaces.Core.Cache.ILocalCacheManager.EvictFromCache``1(System.Object)">
            <summary>
            Evicts an entry from the cache only, does not affect entries in the cached space.
            </summary>
            <typeparam name="T">entry type.</typeparam>
            <param name="id">id of the entry.</param>		
        </member>
        <member name="M:GigaSpaces.Core.Cache.ILocalCacheManager.EvictFromCache(System.Type,System.Object)">
            <summary>
            Evicts an entry from the cache only, does not affect entries in the cached space.
            </summary>
            <param name="type">entry type.</param>
            <param name="id">id of the entry.</param>		
        </member>
        <member name="M:GigaSpaces.Core.Cache.ILocalCacheManager.EvictFromCache(System.String,System.Object)">
            <summary>
            Evicts an entry from the cache only, does not affect entries in the cached space.
            </summary>
            <param name="typeName">entry type name.</param>
            <param name="id">id of the entry.</param>		
        </member>
        <member name="P:GigaSpaces.Core.Cache.ILocalCacheManager.CachedEntriesCount">
            <summary>
            Number of entries stored in the local cache storage.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Cache.IdBasedLocalCacheInternal.ReadByIdFromCache(System.Type,System.Object)">
            <summary>
            Reads an entry from the local cache only.
            </summary>
            <param name="type">entry type.</param>
            <param name="id">id of the entry.</param>
            <returns>Matching entry or null if it not present in the local cache</returns>
        </member>
        <member name="M:GigaSpaces.Core.Cache.IdBasedLocalCacheInternal.ReadByIdFromCache``1(System.Object)">
            <summary>
            Reads an entry from the local cache only.
            </summary>
            <typeparam name="T">entry type.</typeparam>
            <param name="id">id of the entry.</param>
            <returns>Matching entry or null if it not present in the local cache</returns>
        </member>
        <member name="M:GigaSpaces.Core.Cache.IdBasedLocalCacheInternal.ReadByIdFromCache(System.String,System.Object)">
            <summary>
            Reads an entry from the local cache only, this operation will not be delegated to the cached proxy if the entry
            is not present in the local cache.
            </summary>		
            <param name="typeName">entry type name.</param>
            <param name="id">id of the entry.</param>
            <returns>Matching entry or null if it not present in the local cache</returns>
        </member>
        <member name="M:GigaSpaces.Core.Cache.IdBasedLocalCacheInternal.EvictFromCache``1(System.Object)">
            <summary>
            Clears an entry from the cache only.
            </summary>
            <typeparam name="T">entry type.</typeparam>
            <param name="id">id of the entry.</param>
            <returns>true if removed an entry matching the specified type and id.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Cache.IdBasedLocalCacheInternal.EvictFromCache(System.Type,System.Object)">
            <summary>
            Clears an entry from the cache only.
            </summary>
            <param name="type">entry type.</param>
            <param name="id">id of the entry.</param>
            <returns>true if removed an entry matching the specified type and id.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Cache.IdBasedLocalCacheInternal.EvictFromCache(System.String,System.Object)">
            <summary>
            Evicts an entry from the cache only, does not affect entries in the cached space.
            </summary>
            <param name="typeName">entry type name.</param>
            <param name="id">id of the entry.</param>		
        </member>
        <member name="T:GigaSpaces.Core.IAsyncResult`1">
            <summary>
            Represnts the status of an asynchronous operation.
            </summary>
            <typeparam name="T">Type of object that will be the result of the operation.</typeparam>
        </member>
        <member name="T:GigaSpaces.Core.Cache.ILockManager`1">
            <summary>
            Manager locking for keys
            </summary>
            <typeparam name="TKey">Type of key</typeparam>
        </member>
        <member name="T:GigaSpaces.Core.Cache.IdBasedLocalCacheConfig">
            <summary>
            Configures an ID-based local cache.
            </summary>
            <preliminary/>
        </member>
        <member name="M:GigaSpaces.Core.Cache.IdBasedLocalCacheConfig.FilterDuplicateTypes(System.Collections.Generic.IList{System.Type})">
            <summary>
            Filter duplicate types
            </summary>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.Cache.IdBasedLocalCacheConfig.FilterInheritedTypes(System.Collections.Generic.IList{System.Type})">
            <summary>
            Filters the types list to contain only types that does not inherit from each other (root types)
            </summary>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="P:GigaSpaces.Core.Cache.IdBasedLocalCacheConfig.EvictionStrategyBuilder">
            <summary>
            Gets or sets which <see cref="T:GigaSpaces.Core.Cache.Eviction.ISegmentEvictionStrategyBuilder"/> to use.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Cache.IdBasedLocalCacheConfig.SynchronizeWithRemoteSpace">
            <summary>
            Gets or sets whether to synchronize the local cache entries state with the remote space.
            Meaning, if an entry is stored in the local cache and the same entry is updated in the remote space, whether is should
            be updated in the local cache as well.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Cache.IdBasedLocalCacheConfig.SynchronizeMode">
            <summary>
            Gets or sets the local cache synchronization mode, affects only if <see cref="P:GigaSpaces.Core.Cache.IdBasedLocalCacheConfig.SynchronizeWithRemoteSpace"/> is enabled.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Cache.IdBasedLocalCacheConfig.NumberOfSegments">
            <summary>
            Gets or sets the number of segments to construct inside the local cache storage.
            <remarks>
            Increasing this value decreased concurrency bottlenecks but increases storage overhead.
            </remarks>
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Cache.IdBasedLocalCacheConfig.SynchronizeBatchSize">
            <summary>
            Gets or sets the number of entries to recieve in each synchronization with remote space.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Cache.IdBasedLocalCacheConfig.SynchronizeBatchTime">
            <summary>
            Gets or sets the maximum time allowed between synchronization cycles.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Cache.IdBasedLocalCacheConfig.DisconnectionDetectionTime">
            <summary>
            Gets or sets the time between disconnection detection.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Cache.IdBasedLocalCacheConfig.CachedTypes">
            <summary>
            Gets or sets the types that will be stored in the local cache.
            <remarks>
            The cached types support inheritance, there is no need to add two types to the list if one inherits from the other.
            </remarks>
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Cache.LocalViewConfig">
            <summary>
            A configuration object use to configure creation of a local view.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Cache.LocalViewConfig.BatchSize">
            <summary>
            Gets or sets the local view batch size which will be used for synchronizing the view with the remote space.        
            Null value indicates that the default value will be used.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Cache.LocalViewConfig.BatchTimeout">
            <summary>
            Gets or sets the local view batch timeout (i.e. maximum time the server will batch entries before updating the client.
            Null value indicates that the default value will be used.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Cache.LocalViewConfig.MaxDisconnectionDuration">
            <summary>
            Gets or sets the maximum allowed duration to hold stale data in the view before restarting the view. This occurrs when the connection is lost
            with the remote space for the specified duration.
            Null value indicates that the default value will be used.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Cache.LocalViewConfig.InitialSynchronizationTimeout">
            <summary>
            Gets or sets the initial synchronization process timeout, once exceeded the process is considered failed and 
            will be retried (Defaults to 5 minutes). 
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Cache.LockManager`1">
            <summary>
            Default implementation for ILockManager
            </summary>
            <typeparam name="TKey">type of key</typeparam>
        </member>
        <member name="T:GigaSpaces.Core.IChangedEntryDetails`1">
            <summary>
            The result of a change operation executed on an entry
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:GigaSpaces.Core.IChangedEntryDetails`1.TypeName">
            <summary>
            Gets the changed entry type name.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.IChangedEntryDetails`1.Id">
            <summary>
            Gets the id of the changed entry.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.IChangedEntryDetails`1.Version">
            <summary>
            Gets the version of the entry after the change opertion.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.IChangedEntryDetails`1.ChangeOperationsResults">
            <summary>
            Gets the results of the change operations which were inflicted on the changed entry. 
            The order of the list will be correlated to the order of operation which were specified on the <see cref="T:GigaSpaces.Core.ChangeSet"/> that
            was used for this change operation. 
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.IChangeResult`1">
            <summary>
            Result of a change operation.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:GigaSpaces.Core.IChangeResult`1.Results">
            <summary>
            Gets a collection of <see cref="T:GigaSpaces.Core.IChangedEntryDetails`1"/>  of the changed
            entries. 
            This is only supported if the <see cref="F:GigaSpaces.Core.ChangeModifiers.ReturnDetailedResults"/> modifier was used,
            otherwise this method will throw unsupported operation exception.	
            </summary>
            <exception cref="T:System.NotSupportedException">If the corresponding change
            operation was not used with the <see cref="F:GigaSpaces.Core.ChangeModifiers.ReturnDetailedResults"/>.</exception>
        </member>
        <member name="P:GigaSpaces.Core.IChangeResult`1.NumberOfChangedEntries">
            <summary>
            Gets the number of changed entries.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.ChangeSet">
            <summary>
            The set of changes to apply for matches entries of the change operation.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.ChangeSet.Set(System.String,System.Object)">
            <summary>
            Sets the value of the given path.
            </summary>
            <param name="path">The path that needs its value set.</param>
            <param name="value">The value to set for the given path.</param>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.ChangeSet.Set(System.String,System.Object,GigaSpaces.Core.Metadata.StorageType)">
            <summary>
            Sets the value of the given path.
            </summary>
            <param name="path">The path that needs its value set.</param>
            <param name="value">The value to set for the given path.</param>
            <param name="storageType">The storage type in which to keep the value.</param>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.ChangeSet.Unset(System.String)">
            <summary>
            Unsets the specified path. If the path points to a dynamic property or a map key it will be removed, if it points to a fixed
            property it will be set to null, in that case, the target path must point to a nullable property otherwise an error will occur.
            </summary>
            <param name="path">Path pointing to the requested property.</param>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.ChangeSet.Increment(System.String,System.Byte)">
            <summary>
            Increment a property with the given delta. 
            </summary>
            <param name="path">The path pointing to a numeric property that needs its value increased.</param>
            <param name="delta">The delta to increment by.</param>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.ChangeSet.Increment(System.String,System.Int16)">
            <summary>
            Increment a property with the given delta. 
            </summary>
            <param name="path">The path pointing to a numeric property that needs its value increased.</param>
            <param name="delta">The delta to increment by.</param>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.ChangeSet.Increment(System.String,System.Int32)">
            <summary>
            Increment a property with the given delta. 
            </summary>
            <param name="path">The path pointing to a numeric property that needs its value increased.</param>
            <param name="delta">The delta to increment by.</param>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.ChangeSet.Increment(System.String,System.Int64)">
            <summary>
            Increment a property with the given delta. 
            </summary>
            <param name="path">The path pointing to a numeric property that needs its value increased.</param>
            <param name="delta">The delta to increment by.</param>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.ChangeSet.Increment(System.String,System.Single)">
            <summary>
            Increment a property with the given delta. 
            </summary>
            <param name="path">The path pointing to a numeric property that needs its value increased.</param>
            <param name="delta">The delta to increment by.</param>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.ChangeSet.Increment(System.String,System.Double)">
            <summary>
            Increment a property with the given delta. 
            </summary>
            <param name="path">The path pointing to a numeric property that needs its value increased.</param>
            <param name="delta">The delta to increment by.</param>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.ChangeSet.Decrement(System.String,System.Byte)">
            <summary>
            Decrement a property with the given delta. 
            </summary>
            <param name="path">The path pointing to a numeric property that needs its value decreased.</param>
            <param name="delta">The delta to decrement by.</param>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.ChangeSet.Decrement(System.String,System.Int16)">
            <summary>
            Decrement a property with the given delta. 
            </summary>
            <param name="path">The path pointing to a numeric property that needs its value decreased.</param>
            <param name="delta">The delta to decrement by.</param>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.ChangeSet.Decrement(System.String,System.Int32)">
            <summary>
            Decrement a property with the given delta. 
            </summary>
            <param name="path">The path pointing to a numeric property that needs its value decreased.</param>
            <param name="delta">The delta to decrement by.</param>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.ChangeSet.Decrement(System.String,System.Int64)">
            <summary>
            Decrement a property with the given delta. 
            </summary>
            <param name="path">The path pointing to a numeric property that needs its value decreased.</param>
            <param name="delta">The delta to decrement by.</param>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.ChangeSet.Decrement(System.String,System.Single)">
            <summary>
            Decrement a property with the given delta. 
            </summary>
            <param name="path">The path pointing to a numeric property that needs its value decreased.</param>
            <param name="delta">The delta to decrement by.</param>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.ChangeSet.Decrement(System.String,System.Double)">
            <summary>
            Decrement a property with the given delta. 
            </summary>
            <param name="path">The path pointing to a numeric property that needs its value decreased.</param>
            <param name="delta">The delta to decrement by.</param>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.ChangeSet.AddToCollection(System.String,System.Object)">
            <summary>
            Adds the given item to a collection property. 
            </summary>
            <param name="path">The path pointing to the collection that the item should be added to.</param>
            <param name="newItem">The item to add to the collection.</param>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.ChangeSet.AddToCollection(System.String,System.Object,GigaSpaces.Core.Metadata.StorageType)">
            <summary>
            Adds the given item to a collection property. 
            </summary>
            <param name="path">The path pointing to the collection that the item should be added to.</param>
            <param name="newItem">The item to add to the collection.</param>
            <param name="storageType">The storage type in which to keep the item.</param>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.ChangeSet.AddRangeToCollection(System.String,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Adds the given items to a collection property.
            </summary>
            <param name="path">The path pointing to the collection that the item should be added to.</param>
            <param name="newItems">newItems The items to add to the collection.</param>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.ChangeSet.RemoveFromCollection(System.String,System.Object)">
            <summary>
            Removes the given item from a collection property. 
            </summary>
            <param name="path">The path pointing to the collection that the item should be removed from.</param>
            <param name="itemToRemove">The item to remove from the collection.</param>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.ChangeSet.SetInDictionary(System.String,System.Object,System.Object)">
            <summary>
            Sets the given key and value in a dictionary property, this is equivallent to using the [] indexer of a dictionary.
            </summary>
            <param name="path">The path pointing to the dictionary that the key and value should be put into.</param>
            <param name="key">The dictionary's key.</param>
            <param name="value">The value to associate with the given key.</param>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.ChangeSet.SetInDictionary(System.String,System.Object,System.Object,GigaSpaces.Core.Metadata.StorageType)">
            <summary>
            Sets the given key and value in a dictionary property, this is equivallent to using the [] indexer of a dictionary.
            </summary>
            <param name="path">The path pointing to the dictionary that the key and value should be put into.</param>
            <param name="key">The dictionary's key.</param>
            <param name="value">The value to associate with the given key.</param>
            <param name="storageType">The storage type in which to keep the value.</param>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.ChangeSet.RemoveFromDictionary(System.String,System.Object)">
            <summary>
            Removes the given key from a dictionary property. 
            </summary>
            <param name="path">The path pointing to the dictionary that the key should be removed from.</param>
            <param name="key">The dictionary's key.</param>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.ChangeSet.Lease(System.Int64)">
            <summary>
            Change the entry lease with the new lease. 
            </summary>
            <param name="lease">Change the lease duration with the new lease, the lease specifies how much time the lease of a changed 
            entry should be after the change operation takes affect in milliseconds.</param>        
        </member>
        <member name="T:GigaSpaces.Core.ClusterInfo">
            <summary>
            Holds cluster related information.	
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.ClusterInfo.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Construct a new cluster info
            </summary>
            <param name="schema">Cluster schema</param>
            <param name="instanceId">Instance Id</param>
            <param name="backupId">Backup Id</param>
            <param name="numberOfInstances">Total number of instances</param>
            <param name="numberOfBackups">Total number of backups</param>
        </member>
        <member name="M:GigaSpaces.Core.ClusterInfo.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.ClusterInfo.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
            </summary>
            
            <returns>
            A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:GigaSpaces.Core.ClusterInfo.Schema">
            <summary>
            Gets or sets the schema the cluster operates under. Usually maps to a Space cluster schema. Can
            have null value which means that it was not set.     
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.ClusterInfo.InstanceId">
            <summary>
            Gets or sets the instance id of the specific cluster member. Can have null value
            which means that it was not set and should not be taken into account.
            </summary>				 
        </member>
        <member name="P:GigaSpaces.Core.ClusterInfo.BackupId">
            <summary>
            Gets or sets the backup id of the specific cluster member. Can have null value
            which means that it was not set and should not be taken into account.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.ClusterInfo.NumberOfInstances">
            <summary>
            Gets or sets the number of primary instances that are running within the cluster. Note, this are
            the number of primary instances. Each instance might also have one or more backups. Can have null
            value which means that it was not set and should not be taken into account.     
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.ClusterInfo.NumberOfBackups">
            <summary>
            Gets or sets the number of backups that each primary instance will have in a cluster. Can have
            null value which means that it was not set and should not be taken into account.     
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.ClusterInfo.Name">
            <summary>
             Gets or sets the logical name of the cluster.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.ClusterInfo.RunningNumber">
             <summary>
             Gets a "running" number represented by the cluster info.
             Some examples:
            
             1. NumberOfInstances=2, numberOfBackups=0, instanceId=1: RunningNumber = 0.
             2. NumberOfInstances=2, numberOfBackups=0, instanceId=2: RunningNumber = 1.
             3. NumberOfInstances=2, numberOfBackups=1, instanceId=1, backupId=0: RunningNumber = 0.
             4. NumberOfInstances=2, numberOfBackups=1, instanceId=1, backupId=1: RunningNumber = 1.
             5. NumberOfInstances=2, numberOfBackups=1, instanceId=2, backupId=0: RunningNumber = 2.
             6. NumberOfInstances=2, numberOfBackups=1, instanceId=2, backupId=1: RunningNumber = 3.
             </summary>
        </member>
        <member name="T:GigaSpaces.Core.Configuration.BaseConfigurationFileConfigurationElement">
            <summary>
            Represents the configuration for a Base configuration file path.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Configuration.GigaSpacesConfigurationElement">
            <summary>
            Base class for GigaSpaces configuration elements.
            This class is intended for internal usage only.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Configuration.GigaSpacesConfigurationElement.IsReadOnly">
            <summary>
            Overridden to support runtime changes to configuration.
            </summary>
            <returns>Always returns false.</returns>
        </member>
        <member name="P:GigaSpaces.Core.Configuration.BaseConfigurationFileConfigurationElement.Path">
            <summary>
            Gets or sets the path.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Configuration.DataTypesConfigurationElement">
            <summary>
            Encapsulates configuration that defines discovery of data types used by spaces.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Configuration.DataTypesConfigurationElement.ScanAssemblies">
            <summary>
            Gets or sets the configuration of the assemblies which should be auto scanned for data types.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Configuration.GigaSpacesConfigurationElementCollection">
            <summary>
            Base class for GigaSpaces configuration element collections.
            This class is intended for internal usage only.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Configuration.GigaSpacesConfigurationElementCollection.IsReadOnly">
            <summary>
            Overridden to support runtime changes to configuration.
            </summary>
            <returns>Always returns false.</returns>
        </member>
        <member name="T:GigaSpaces.Core.Configuration.GigaSpacesCoreConfiguration">
            <summary>
            Custom configuration section class for GigaSpaces core component.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Configuration.GigaSpacesCoreConfiguration.BaseConfigFile">
            <summary>
            Gets the base configuration file configuration.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Configuration.GigaSpacesCoreConfiguration.XapNetSettingsFile">
            <summary>
            Gets the settings file configuration.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Configuration.GigaSpacesCoreConfiguration.RuntimeDir">
            <summary>
            Gets the product runtime directory configuration.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Configuration.GigaSpacesCoreConfiguration.Provider">
            <summary>
            Gets the default provider that will be used.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Configuration.GigaSpacesCoreConfiguration.JvmSettings">
            <summary>
            Gets the Jvm Settings configuration.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Configuration.GigaSpacesCoreConfiguration.SystemProperties">
            <summary>
            Gets the System properties collection.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Configuration.GigaSpacesCoreConfiguration.DataTypes">
            <summary>
            Gets the data types configuration.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Configuration.JetProviderConfigurationElement">
            <summary>
            Encapsulates configuration for jet provider
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Configuration.JetProviderConfigurationElement.LoggingLevel">
            <summary>
            Gets or sets the provider's trace level
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Configuration.JetProviderConfigurationElement.AutoDetachThread">
            <summary>
            Gets or sets the provider's automatic thread detach behavior.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Configuration.JvmBootClassPathConfigurationElement">
            <summary>
            Encapsulates configuration for boot class path
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Configuration.JvmBootClassPathConfigurationElement.CreateNewElement">
            <summary>
            When overridden in a derived class, creates a new <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </summary>
            
            <returns>
            A new <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </returns>
            
        </member>
        <member name="M:GigaSpaces.Core.Configuration.JvmBootClassPathConfigurationElement.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the element key for a specified configuration element when overridden in a derived class.
            </summary>
            
            <returns>
            An <see cref="T:System.Object"></see> that acts as the key for the specified <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </returns>
            
            <param name="element">The <see cref="T:System.Configuration.ConfigurationElement"></see> to return the key for. </param>
        </member>
        <member name="M:GigaSpaces.Core.Configuration.JvmBootClassPathConfigurationElement.GetPathList">
            <summary>
            Returns a list of the boot class paths
            </summary>
            <returns>list of the class paths</returns>
        </member>
        <member name="M:GigaSpaces.Core.Configuration.JvmBootClassPathConfigurationElement.AddPath(System.String)">
            <summary>
            Adds a path to the boot class path.
            </summary>
            <param name="path">Path to add</param>
        </member>
        <member name="T:GigaSpaces.Core.Configuration.JvmClassPathConfigurationElement">
            <summary>
            Encapsulates configuration for class path
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Configuration.JvmClassPathConfigurationElement.CreateNewElement">
            <summary>
            When overridden in a derived class, creates a new <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </summary>
            <returns>
            A new <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </returns>
        </member>
        <member name="M:GigaSpaces.Core.Configuration.JvmClassPathConfigurationElement.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the element key for a specified configuration element when overridden in a derived class.
            </summary>
            <returns>
            An <see cref="T:System.Object"></see> that acts as the key for the specified <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </returns>
            <param name="element">The <see cref="T:System.Configuration.ConfigurationElement"></see> to return the key for. </param>
        </member>
        <member name="M:GigaSpaces.Core.Configuration.JvmClassPathConfigurationElement.GetPathList">
            <summary>
            Returns a list of the class paths
            </summary>
            <returns>list of the class paths</returns>
        </member>
        <member name="M:GigaSpaces.Core.Configuration.JvmClassPathConfigurationElement.AddPath(System.String)">
            <summary>
            Adds a path to the class path.
            </summary>
            <param name="path">Path to add</param>
        </member>
        <member name="T:GigaSpaces.Core.Configuration.JvmClassPathEntryConfigurationElement">
            <summary>
            Encapsulates configuration that defines a single path for the class paths
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Configuration.JvmClassPathEntryConfigurationElement.Path">
            <summary>
            Gets the depedency path
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Configuration.JvmDllConfigurationElement">
            <summary>
            Encapsulates configuration that defines the location of the Jvm dll
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Configuration.JvmDllConfigurationElement.Path">
            <summary>
            Gets the jvm dll path
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Configuration.JvmDllConfigurationElement.Mode">
            <summary>
            Gets or sets the used provider
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Configuration.JvmMemoryConfigurationElement">
            <summary>
            Encapsulates configuration that defines the memory settings of the Jvm
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Configuration.JvmMemoryConfigurationElement.InitialHeapSizeInMB">
            <summary>
            Gets the initial heap size in MegaBytes
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Configuration.JvmMemoryConfigurationElement.MaximumHeapSizeInMB">
            <summary>
            Gets the maximum heap size in MegaBytes
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Configuration.JvmOptionConfigurationElement">
            <summary>
            Encapsulates configuration that defines a jvm option
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Configuration.JvmOptionConfigurationElement.Option">
            <summary>
            Gets the custom option
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Configuration.JvmCustomOptionsConfigurationElement">
            <summary>
            Encapsulates configuration for defining custom jvm options
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Configuration.JvmCustomOptionsConfigurationElement.CreateNewElement">
            <summary>
            When overridden in a derived class, creates a new <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </summary>
            
            <returns>
            A new <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </returns>
            
        </member>
        <member name="M:GigaSpaces.Core.Configuration.JvmCustomOptionsConfigurationElement.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the element key for a specified configuration element when overridden in a derived class.
            </summary>
            
            <returns>
            An <see cref="T:System.Object"></see> that acts as the key for the specified <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </returns>
            
            <param name="element">The <see cref="T:System.Configuration.ConfigurationElement"></see> to return the key for. </param>
        </member>
        <member name="M:GigaSpaces.Core.Configuration.JvmCustomOptionsConfigurationElement.GetCustomOptions">
            <summary>
            Returns a list of the custom options values.
            </summary>
            <returns>list of the custom options values.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Configuration.JvmCustomOptionsConfigurationElement.AddOption(System.String)">
            <summary>
            Adds an option to the Jvm Custom Options
            </summary>
            <param name="option">Option to add</param>
        </member>
        <member name="P:GigaSpaces.Core.Configuration.JvmCustomOptionsConfigurationElement.IgnoreUnrecognized">
            <summary>
            Gets if the creation of a Jvm should ignore unrecognized options or fail if such exists.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Configuration.JvmSettingsConfigurationElement">
            <summary>
            Encapsulates configuration for jvm setting.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Configuration.JvmSettingsConfigurationElement.JvmCustomOptions">
            <summary>
            Gets the Jvm custom options configuration
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Configuration.JvmSettingsConfigurationElement.JvmClassPath">
            <summary>
            Gets the Jvm class path configuration
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Configuration.JvmSettingsConfigurationElement.JvmBootClassPath">
            <summary>
            Gets the Jvm boot class path configuration
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Configuration.JvmSettingsConfigurationElement.JvmDll">
            <summary>
            Gets the Jvm dll configuration
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Configuration.JvmSettingsConfigurationElement.JvmMemory">
            <summary>
            Gets the Jvm memory configuration
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Configuration.ScanAssembliesConfigurationElement">
            <summary>
            Configuration for a collection of assemblies that will be automatically scanned.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Configuration.ScanAssembliesConfigurationElement.CreateNewElement">
            <summary>
            When overridden in a derived class, creates a new <see cref="T:System.Configuration.ConfigurationElement" />.
            </summary>
            
            <returns>
            A new <see cref="T:System.Configuration.ConfigurationElement" />.
            </returns>
            
        </member>
        <member name="M:GigaSpaces.Core.Configuration.ScanAssembliesConfigurationElement.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the element key for a specified configuration element when overridden in a derived class.
            </summary>
            
            <returns>
            An <see cref="T:System.Object" /> that acts as the key for the specified <see cref="T:System.Configuration.ConfigurationElement" />.
            </returns>
            
            <param name="element">The <see cref="T:System.Configuration.ConfigurationElement" /> to return the key for. </param>
        </member>
        <member name="M:GigaSpaces.Core.Configuration.ScanAssembliesConfigurationElement.Add(GigaSpaces.Core.Configuration.ScanAssemblyConfigurationElement)">
            <summary>
            Adds a scan assembly configuration element.
            </summary>
            <param name="assemblyConfigurationElement">Scan assembly configuration element to add.</param>
        </member>
        <member name="P:GigaSpaces.Core.Configuration.ScanAssembliesConfigurationElement.Disabled">
            <summary>
            Gets or sets wether the scan is disabled
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Configuration.ScanAssemblyConfigurationElement">
            <summary>
            Configuration of an assembly that will be automatically scanned.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Configuration.ScanAssemblyConfigurationElement.AssemblyName">
            <summary>
            Gets or sets the name of the assembly that should be scanned.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Configuration.ScanAssemblyConfigurationElement.NameSpace">
            <summary>
            Gets or sets the name space within the assembly that should be scanned, null means all.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Exceptions.CannotJoinException">
            <summary>
            Thrown when a transaction cannot join.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Exceptions.TransactionException">
            <summary>
            Base class for exceptions thrown during a transaction.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Exceptions.SpaceException">
            <summary>
            The exception that is thrown for a general space-related error.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Exceptions.GigaSpacesException">
            <summary>
            The exception that is thrown for a general gigaspaces related error.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.GigaSpacesException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.GigaSpacesException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.GigaSpacesException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.GigaSpacesException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.GigaSpacesException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.GigaSpacesException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.GigaSpacesException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.GigaSpacesException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.GigaSpacesException.ToString">
            <summary>
            ToString implementation.  
            </summary>
            <returns>returns string with this.Source, this.Message, this.StackTrace and InnerException.ToString()</returns>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.SpaceException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.SpaceException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.SpaceException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.SpaceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.SpaceException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.SpaceException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.SpaceException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.SpaceException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.TransactionException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.TransactionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.TransactionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.TransactionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.TransactionException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.TransactionException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.TransactionException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.TransactionException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.CannotJoinException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.CannotJoinException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.CannotJoinException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.CannotJoinException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="T:GigaSpaces.Core.Exceptions.ChangeException">
            <summary>
            Thrown when an error occurred while performing a <see cref="M:GigaSpaces.Core.ISpaceProxy.Change``1(``0,GigaSpaces.Core.ChangeSet,GigaSpaces.Core.ITransaction,System.Int64,GigaSpaces.Core.ChangeModifiers)"/> operation.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.ChangeException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.ChangeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.ChangeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.ChangeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="P:GigaSpaces.Core.Exceptions.ChangeException.Errors">
            <summary>
            Gets the failed changes.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Exceptions.ChangeException.FailedChanges">
            <summary>
            Gets the entries that failed to change result.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Exceptions.ChangeException.SuccessfulChanges">
            <summary>
            Gets the successfully done changes.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Exceptions.ChangeException.NumOfSuccessfulChanges">
            <summary>
            Gets the number of succesfull changes
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.IFailedChangedEntryDetails">
            <summary>
            The result of a change operation of a specific entry that raised an exception
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.IFailedChangedEntryDetails.TypeName">
            <summary>
            Gets the changed entry type name.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.IFailedChangedEntryDetails.Id">
            <summary>
            Gets the id of the changed entry.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.IFailedChangedEntryDetails.Version">
            <summary>
            Gets the version of the entry after the change opertion.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.IFailedChangedEntryDetails.Error">
            <summary>
            Gets the failure caused by attempting to update this entry.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.IChangeOperationResult">
            <summary>
            A single change result which was applied on an object.
            See the following operations to obtain the relevant constant values in order to extract the data from the change operation
            <pre>
            <see cref="T:GigaSpaces.Core.Change.IncrementOperation"/>
            <see cref="T:GigaSpaces.Core.Change.AddToCollectionOperation"/>
            <see cref="T:GigaSpaces.Core.Change.AddRangeToCollectionOperation"/>
            <see cref="T:GigaSpaces.Core.Change.RemoveFromCollectionOperation"/>
            <see cref="T:GigaSpaces.Core.Change.SetInDictionaryOperation"/>
            <see cref="T:GigaSpaces.Core.Change.RemoveFromDictionaryOperation"/>
            <see cref="T:GigaSpaces.Core.Change.SetOperation"/>
            <see cref="T:GigaSpaces.Core.Change.UnsetOperation"/>    
            </pre>
            <p>
            <pre>
            <example>
            <code> 
            IChangeResult{MyObject} changeResult = space.Change(new SqlQuery{MyObject}("someField = 'someValue'), 
                                                                new ChangeSet().Increment("counterField", 1), ChangeModifiers.ReturnDetailedResults)
            foreach (IChangedEntryDetails{MyObject} changeEntryDetails in changeResult.Results) 
            {
              IList{IChangeOperationResult} operations = changeEntryDetails.ChangeOperationsResults;
              foreach(IChangeOperationResult operationResult in operations) 
              {
                if (IncrementOperation.Represents(operationResult.Operation) 
                {
                  String path = IncrementOperation.GetPath(operationResult.Operation);
                  Number delta = IncrementOperation.GetDelta(operationResult.Operation);
                  Number result = IncrementOperation.GetNewValue(operationResult);
                  // ... do something with the result, path and delta
                }
                //...
              }
            } 
            </code>
            </example>
            </pre>
            </p>
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.IChangeOperationResult.Operation">
            <summary>
            this change operation
            </summary>
            <returns></returns>
        </member>
        <member name="P:GigaSpaces.Core.IChangeOperationResult.Result">
            <summary>
            Gets the result of this change operation an a specific entry
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Commands.ISpaceProxy.PbsISpaceProxyGetClusteredProxy.Execute(GigaSpaces.Core.Internal.Providers.Cmd.CmdSpaceProxy)">
            <summary>
            Executes GetClusteredProxy over a proxy
            </summary>
            <param name="proxy">proxy to get clustered proxy over</param>
            <returns>created clustered proxy</returns>
        </member>
        <member name="T:GigaSpaces.Core.Internal.ProjectionTemplate">
            <summary>
            Contains SQLQuery projections.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.ILease">
            <summary>
            Defines a type of object that is issued by the lease grantor and returned to the lease holder. 
            </summary>
            <remarks>
            Particular instances of the Lease type will be created by the grantors of a lease, and 
            returned to the holder of the lease as part of the return value from a call that allocates 
            a leased resource. The call that requests a leased resource will typically include a 
            requested duration for the lease. If the request is for a particular duration, the lease 
            grantor is required to grant a lease of no more than the requested period of time. A lease 
            may be granted for a period of time shorter than that requested. 
            </remarks>
        </member>
        <member name="M:GigaSpaces.Core.ILease.Cancel">
            <summary>
            Used by the lease holder to indicate that it is no longer interested in the resource 
            or information held by the lease.
            </summary>
            <exception cref="T:GigaSpaces.Core.Exceptions.UnknownLeaseException">
            The lease being cancelled is unknown to the lease grantor.
            </exception>
        </member>
        <member name="M:GigaSpaces.Core.ILease.Renew(System.Int64)">
            <summary>
            Used to renew a lease for an additional period of time.
            </summary>
            <param name="duration">A period of time, specified in milliseconds.</param>
            <exception cref="T:GigaSpaces.Core.Exceptions.UnknownLeaseException">
            The lease being cancelled is unknown to the lease grantor.
            </exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.LeaseDeniedException">
            The lease grantor is unable or unwilling to renew the lease.
            </exception>
        </member>
        <member name="P:GigaSpaces.Core.ILease.Expiration">
            <summary>
            Returns the absolute time that the lease will expire, represented as milliseconds from
            the beginning of the epoch, relative to the local clock.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.ILeaseContext`1">
            <summary>
            Extends the basic <see cref="T:GigaSpaces.Core.ILease"/> to provide additional functionality.
            </summary>
            <typeparam name="T">The type of object related to the lease.</typeparam>
        </member>
        <member name="P:GigaSpaces.Core.ILeaseContext`1.Uid">
            <summary>
            Gets the unique identifier of the written entry
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.ILeaseContext`1.Version">
            <summary>
            Gets the version of the entry (1 if entry was written, greater value if it was updated).
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.ILeaseContext`1.Object">
            <summary>
            Gets the previous value of the entry (null on first write).
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.ILeaseContext`1.LeaseDisabled">
            <summary>
            Returns true if lease functionality is disabled for this instance.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Utils.Concurrent.BlockingQueue`1.Stop">
            <summary>
            Prevent from enqueueing more items, allow keep dequeuing until queue is empty and then return null
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Linq.Evaluator.PartialEval(System.Linq.Expressions.Expression)">
            <summary>
            Performs evaluation and replacement of independent sub-trees
            </summary>
            <param name="expression">The root of the expression tree.</param>
            <returns>A new tree with sub-trees evaluated and replaced.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Linq.Evaluator.PartialEval(System.Linq.Expressions.Expression,System.Func{System.Linq.Expressions.Expression,System.Boolean})">
            <summary>
            Performs evaluation and replacement of independent sub-trees
            </summary>
            <param name="expression">The root of the expression tree.</param>
            <param name="fnCanBeEvaluated">A function that decides whether a given expression node can be part of the local function.</param>
            <returns>A new tree with sub-trees evaluated and replaced.</returns>
        </member>
        <member name="T:GigaSpaces.Core.Linq.Evaluator.SubtreeEvaluator">
            <summary>
            Evaluates and replaces sub-trees when first candidate is reached (top-down)
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Linq.Evaluator.Nominator">
            <summary>
            Performs bottom-up analysis to determine which nodes can possibly
            be part of an evaluated sub-tree.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Linq.ExpressionQuery`1">
            <summary>
            Represents an expression-based template you can use to query the space. 
            </summary>
            <typeparam name="T">Type to be used in the instance.</typeparam>
        </member>
        <member name="T:GigaSpaces.Core.IQuery`1">
            <summary>
            Base interface for various space query types.
            </summary>
            <typeparam name="T">Query object type.</typeparam>
        </member>
        <member name="M:GigaSpaces.Core.Linq.ExpressionQuery`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Creates a new ExpressionQuery using the specified predicate.
            </summary>
            <param name="predicate">A predicate expression</param>
        </member>
        <member name="M:GigaSpaces.Core.Linq.ExpressionQuery`1.#ctor(System.Linq.IQueryable{`0})">
            <summary>
            Creates a new ExpressionQuery using the specified LINQ query.
            </summary>
            <param name="query">A LINQ query</param>
        </member>
        <member name="M:GigaSpaces.Core.Linq.ExpressionQuery`1.ToString">
            <summary>
            Returns a string that represents the current query.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Linq.ExpressionQuery`1.TypeName">
            <summary>
            Get's the query's type name.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Linq.ExpressionQuery`1.Routing">
            <summary>
            Gets or sets the value that controls this query routing behavior.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Linq.ExpressionQuery`1.Projections">
            <summary>
            Gets or sets projection properties which specifies that a result for an operation using this query should
            contain data for the specified projection properties.
            Other properties which were not specifies as a projection will not contain data.
            By default, if no projection was added, all the properties are returned with full data.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Linq.SpaceProxyExtensions">
            <summary>
            Extension methods to provide LINQ support for space proxies.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Linq.SpaceProxyExtensions.Query``1(GigaSpaces.Core.IReadOnlySpaceProxy)">
            <summary>
            Creates a LINQ query using the specified space proxy.
            </summary>
            <typeparam name="T">The query's type</typeparam>
            <param name="spaceProxy">The space proxy which will be used to execute the query</param>
            <returns>A LINQ query.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Linq.SpaceProxyExtensions.ToSpaceQuery``1(System.Linq.IQueryable{``0})">
            <summary>
            Convert a LINQ Expression query to a space Expression query, which can be executed directly on the space proxy.
            </summary>
            <typeparam name="T">The result type</typeparam>
            <param name="query">A LINQ expression</param>
            <returns>A space expression query</returns>
        </member>
        <member name="M:GigaSpaces.Core.Linq.SpaceProxyExtensions.Batch``1(System.Linq.IQueryable{``0})">
            <summary>
            Returns the results from the space in multiple batches instead of a single array.
            </summary>
            <param name="query">Query to configure</param>
        </member>
        <member name="M:GigaSpaces.Core.Linq.SpaceProxyExtensions.Batch``1(System.Linq.IQueryable{``0},System.Int32)">
            <summary>
            Returns the results from the space in multiple batches instead of a single array.
            </summary>
            <param name="query">Query to configure</param>
            <param name="batchSize">Maximum number of results per batch</param>
        </member>
        <member name="T:GigaSpaces.Core.Metadata.ISpaceIndex">
            <summary>
            Encapsulates information about an index of a space type.
            <see cref="T:GigaSpaces.Core.Metadata.ISpaceTypeDescriptor"/>
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.ISpaceIndex.Name">
            <summary>
            Gets the name of the index.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.ISpaceIndex.IndexType">
            <summary>
            Gets the type of the index.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.ISpaceIndex.Unique">
            <summary>
            Indicates if unique constraint is applied for this index.
            The constraint is per partition.
            default is false
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Metadata.CompoundSpaceIndexAttribute">
            <summary>
            Specify a compound space index.	
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.CompoundSpaceIndexAttribute.Paths">
            <summary>
            Specifies the segments of the compound index, each segment can be a property or a path within a property.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.CompoundSpaceIndexAttribute.Unique">
            <summary>
            Indicates if unique constraint is applied for this index.
            The constraint is per partition.
            default is false
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Metadata.SpaceFifoGroupingIndexAttribute">
            <summary>
             Specifies that the annotated property will be used as a fifo grouping index.
             Defines a space FIFO grouping index. 
             Can be declared on several properties in a class in order to assist in efficient traversal. 
             If defined, there must be a property in the class, marked as <see cref="T:GigaSpaces.Core.Metadata.SpaceFifoGroupingPropertyAttribute"/>
             A compound index that contains this FIFO grouping index and the FIFO grouping property will be created.
             FIFO grouping index can be declared on a nested property, by specifying a path as done for <see cref="T:GigaSpaces.Core.Metadata.ISpaceIndex"/>.
             For example:
             1. To index the 'socialSecurity' property
             <code>
                 [SpaceFifoGroupingIndex]
                 public long SocialSecurity() { get; set; }
             </code>
             2. To index 'personalInfo.name': 
             <code>
                 [SpaceFifoGroupingIndex(path = "name")]
                 public long SocialSecurity() { get; set; }
             </code>
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.SpaceFifoGroupingIndexAttribute.Path">
            <summary>
            Gets or sets a fifo grouping index path. 
            The path specifies which property path is used for fifo grouping index.
            If none is defined - the property itself is used for fifo grouping index.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Metadata.SpaceFifoGroupingPropertyAttribute">
            <summary>
             Specifies that the annotated property will be used as the fifo grouping property.
             If defined, the <see cref="F:GigaSpaces.Core.ReadModifiers.FifoGroupingPoll"/> or <see cref="F:GigaSpaces.Core.TakeModifiers.FifoGroupingPoll"/>
             modifiers can be used to return all space entries that match the selection template in FIFO order.
             
             Different values of the FG property define groups of space entries that match each value - 
             FIFO ordering exists within each group and not between different groups.
             
             There can be only one FIFO Grouping property per type.
             FIFO grouping property can be declared on a nested property, by specifying a path as done for SpaceIndex.
             
             For example:
             1. To declare the 'symbolName' property as fifoGroupingProperty
             <code>
              	[SpaceFifoGroupingProperty]
                 public String SymbolName { get; set; } 
             
                 gigaSpace.take(new Symbol("symbolA"), timeout, <see cref="F:GigaSpaces.Core.TakeModifiers.FifoGroupingPoll"/>)
             </code>
                 will return all the space entries with symbolName equal to "symbolA" in FIFO order. 
             
             
             2. To index 'personalInfo.name': 
             <code>
                 [spaceFifoGroupingProperty(path = "name")]
                 public Info PersonalInfo { get; set; } 
             </code>
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.SpaceFifoGroupingPropertyAttribute.Path">
            <summary>
            Gets or sets the fifo grouping property path. 
            The path specifies which property path is used for fifo grouping.
            If none is defined - the property itself is used for fifo grouping.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Replication.GatewayTargetConfig">
            <summary>
            Encapsulates gateway target configuration.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Replication.GatewayTargetConfig.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Replication.GatewayTargetConfig.BulkSize">
            <summary>
            Gets or sets the number of packets in each replication bulk sent to this gateway.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Replication.GatewayTargetConfig.IdleTimeThreshold">
            <summary>
            Gets or sets the maximum time (in milliseconds) pending replication packets should 
            wait before being replicated if <see cref="P:GigaSpaces.Core.Replication.GatewayTargetConfig.PendingOperationThreshold"/> has not been breached.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Replication.GatewayTargetConfig.PendingOperationThreshold">
            <summary>
            Gets or sets the threshold count for pending replication packets that once reached, 
            the packets will be replicated using the <see cref="P:GigaSpaces.Core.Replication.GatewayTargetConfig.BulkSize"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Replication.GatewayTargetConfig.MaxRedoLogCapacity">
            <summary>
            Gets or sets the redo log capacity for this gateway (use -1 for unlimited capacity).
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Replication.GatewayTargetConfig.OnRedoLogCapacityExceeded">
            <summary>
            Gets or sets the behavior once the defined redo log capacity is exceeded (irrelevant if the capacity is unlimited).
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Replication.GatewayTargetConfig.ReplicateChangeOnUpdate">
            <summary>
            Gets or sets whether change should be replicated as full update.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Replication.GatewayConfig">
            <summary>
            Encapsulates a gateway configuration.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Replication.GatewayConfig.LocalGatewayName">
            <summary>
            
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Replication.GatewayConfig.GatewayTargets">
            <summary>
            Gets or sets the gateway targets configurations.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Replication.GatewayConfig.BulkSize">
            <summary>
            Gets or sets the number of packets in each replication bulk sent to this gateway.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Replication.GatewayConfig.IdleTimeThreshold">
            <summary>
            Gets or sets the maximum time (in milliseconds) pending replication packets should 
            wait before being replicated if <see cref="P:GigaSpaces.Core.Replication.GatewayConfig.PendingOperationThreshold"/> has not been breached.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Replication.GatewayConfig.PendingOperationThreshold">
            <summary>
            Gets or sets the threshold count for pending replication packets that once reached, 
            the packets will be replicated using the <see cref="P:GigaSpaces.Core.Replication.GatewayConfig.BulkSize"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Replication.GatewayConfig.MaxRedoLogCapacity">
            <summary>
            Gets or sets the redo log capacity for this gateway (use -1 for unlimited capacity).
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Replication.GatewayConfig.OnRedoLogCapacityExceeded">
            <summary>
            Gets or sets the behavior once the defined redo log capacity is exceeded (irrelevant if the capacity is unlimited).
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Replication.GatewayConfig.ReplicateChangeOnUpdate">
            <summary>
            Gets or sets whether change should be replicated as full update.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Replication.RedoLogCapacityExceededPolicy">
            <summary>
            Dictates which action to take when the redo log capacity is exceeded.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Replication.RedoLogCapacityExceededPolicy.BlockOperations">
            <summary>
            Block operations until redo log size will decrease.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Replication.RedoLogCapacityExceededPolicy.DropOldest">
            <summary>
            Drop oldest pending item in the redo log.
            </summary>
        </member>
        <member name="T:GigaSpaces.Services.Configuration.EnvironmentVariableConfigurationElement">
            <summary>
            Encapsulates Information about an environment variable.
            </summary>
        </member>
        <member name="M:GigaSpaces.Services.Configuration.EnvironmentVariableConfigurationElement.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="M:GigaSpaces.Services.Configuration.EnvironmentVariableConfigurationElement.#ctor(System.String,System.String)">
            <summary>
            Constructor to set property's name and value
            </summary>
            <param name="name">Property's name</param>
            <param name="value">Property's value</param>
        </member>
        <member name="P:GigaSpaces.Services.Configuration.EnvironmentVariableConfigurationElement.Name">
            <summary>
            Gets the property's name
            </summary>
        </member>
        <member name="P:GigaSpaces.Services.Configuration.EnvironmentVariableConfigurationElement.Value">
            <summary>
            Gets the property's name
            </summary>
        </member>
        <member name="T:GigaSpaces.Services.Configuration.EnvironmentVariablesConfigurationElement">
            <summary>
            Encapsulates configuration for environment variables.
            </summary>
        </member>
        <member name="M:GigaSpaces.Services.Configuration.EnvironmentVariablesConfigurationElement.CreateNewElement">
            <summary>
            When overridden in a derived class, creates a new <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </summary>
            <returns>
            A new <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </returns>
        </member>
        <member name="M:GigaSpaces.Services.Configuration.EnvironmentVariablesConfigurationElement.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the element key for a specified configuration element when overridden in a derived class.
            </summary>
            <returns>
            An <see cref="T:System.Object"></see> that acts as the key for the specified <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </returns>
            <param name="element">The <see cref="T:System.Configuration.ConfigurationElement"></see> to return the key for. </param>
        </member>
        <member name="M:GigaSpaces.Services.Configuration.EnvironmentVariablesConfigurationElement.GetProperty(System.String)">
            <summary>
            Gets the system property with the specified name.
            </summary>
            <param name="name">Name of property to retrieve.</param>
            <returns>System property with specified name. If no such property exists null is returned.</returns>
        </member>
        <member name="M:GigaSpaces.Services.Configuration.EnvironmentVariablesConfigurationElement.PutProperty(GigaSpaces.Services.Configuration.EnvironmentVariableConfigurationElement)">
            <summary>
            Puts the system property into the collection. If a property with the same name exists it is overridden.
            </summary>
            <param name="property">System property to put.</param>
        </member>
        <member name="M:GigaSpaces.Services.Configuration.EnvironmentVariablesConfigurationElement.AddProperty(GigaSpaces.Services.Configuration.EnvironmentVariableConfigurationElement)">
            <summary>
            Puts the system property into the collection. If a property with the same name exists an exception is thrown.
            </summary>
            <param name="property">System property to add</param>
        </member>
        <member name="M:GigaSpaces.Services.Configuration.EnvironmentVariablesConfigurationElement.RemoveProperty(System.String)">
            <summary>
            Removes a system property by its name.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:GigaSpaces.Services.Configuration.EnvironmentVariablesConfigurationElement.GetPropertyValue(System.String)">
            <summary>
            Gets the system property value by its name.
            </summary>
            <param name="name">Name of property value to retrieve.</param>
            <returns>Value of System property with specified name. If no such property exists null is returned.</returns>
        </member>
        <member name="M:GigaSpaces.Services.Configuration.EnvironmentVariablesConfigurationElement.SetPropertyValue(System.String,System.String)">
            <summary>
            Sets the value of the specified property's name to the specified value.
            </summary>
            <param name="name">Name of property to set.</param>
            <param name="value">Value of property to set.</param>
        </member>
        <member name="T:GigaSpaces.Services.Configuration.GigaSpacesServiceConfiguration">
            <summary>
            Custom configuration section class for GigaSpaces Services.
            </summary>
        </member>
        <member name="P:GigaSpaces.Services.Configuration.GigaSpacesServiceConfiguration.DisplayName">
            <summary>
            Gets the service type
            </summary>
        </member>
        <member name="P:GigaSpaces.Services.Configuration.GigaSpacesServiceConfiguration.Type">
            <summary>
            Gets the service type
            </summary>
        </member>
        <member name="P:GigaSpaces.Services.Configuration.GigaSpacesServiceConfiguration.CommandLine">
            <summary>
            Gets the service command line
            </summary>
        </member>
        <member name="P:GigaSpaces.Services.Configuration.GigaSpacesServiceConfiguration.EnvironmentVariables">
            <summary>
            Gets the Environment Variables collection.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.XAP.Configuration.GatewayConfigurationElement">
            <summary>
            Encapsulates gateway configuration data.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.XAP.Configuration.GatewayConfigurationElement.LocalGatewayName">
            <summary>
            Gets or sets the local gateway name.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.XAP.Configuration.GatewayConfigurationElement.BulkSize">
            <summary>
            Gets or sets the number of packets in each replication bulk sent to this gateway.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.XAP.Configuration.GatewayConfigurationElement.IdleTimeThreshold">
            <summary>
            Gets or sets the maximum time (in milliseconds) pending replication packets should 
            wait before being replicated if <see cref="P:GigaSpaces.Core.XAP.Configuration.GatewayConfigurationElement.PendingOperationThreshold"/> has not been breached.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.XAP.Configuration.GatewayConfigurationElement.PendingOperationThreshold">
            <summary>
            Gets or sets the threshold count for pending replication packets that once reached, 
            the packets will be replicated using the <see cref="P:GigaSpaces.Core.XAP.Configuration.GatewayConfigurationElement.BulkSize"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.XAP.Configuration.GatewayConfigurationElement.MaxRedoLogCapacity">
            <summary>
            Gets or sets the redo log capacity for this gateway (use -1 for unlimited capacity).
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.XAP.Configuration.GatewayConfigurationElement.OnRedoLogCapacityExceeded">
            <summary>
            Gets or sets the behavior once the defined redo log capacity is exceeded (irrelevant if the capacity is unlimited).
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.XAP.Configuration.GatewayConfigurationElement.ReplicateChangeAsUpdate">
            <summary>
            Gets or sets whether change should be replicated as full update.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.XAP.Configuration.GatewayConfigurationElement.Targets">
            <summary>
            Gets or sets the gateway targets configurations.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.XAP.Configuration.GatewayTargetConfigurationElement">
            <summary>
            Encapsulates a gateway target configuration.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.XAP.Configuration.GatewayTargetConfigurationElement.Name">
            <summary>
            Gets or sets the local gateway name.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.XAP.Configuration.GatewayTargetConfigurationElement.BulkSize">
            <summary>
            Gets or sets the number of packets in each replication bulk sent to this gateway.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.XAP.Configuration.GatewayTargetConfigurationElement.IdleTimeThreshold">
            <summary>
            Gets or sets the maximum time (in milliseconds) pending replication packets should 
            wait before being replicated if <see cref="P:GigaSpaces.Core.XAP.Configuration.GatewayTargetConfigurationElement.PendingOperationThreshold"/> has not been breached.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.XAP.Configuration.GatewayTargetConfigurationElement.PendingOperationThreshold">
            <summary>
            Gets or sets the threshold count for pending replication packets that once reached, 
            the packets will be replicated using the <see cref="P:GigaSpaces.Core.XAP.Configuration.GatewayTargetConfigurationElement.BulkSize"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.XAP.Configuration.GatewayTargetConfigurationElement.MaxRedoLogCapacity">
            <summary>
            Gets or sets the redo log capacity for this gateway (use -1 for unlimited capacity).
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.XAP.Configuration.GatewayTargetConfigurationElement.OnRedoLogCapacityExceeded">
            <summary>
            Gets or sets the behavior once the defined redo log capacity is exceeded (irrelevant if the capacity is unlimited).
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.XAP.Configuration.GatewayTargetConfigurationElement.ReplicateChangeAsUpdate">
            <summary>
            Gets or sets whether change should be replicated as full update.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.XAP.Configuration.GatewayTargetsConfigurationElementCollection">
            <summary>
            Encapsulates gateway targets configuration.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.XAP.Configuration.GatewayTargetsConfigurationElementCollection.CreateNewElement">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.XAP.Configuration.GatewayTargetsConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="T:GigaSpaces.XAP.Configuration.SpaceProxyPropertiesConfigurationElement">
            <summary>
            Configuration for space properties for a managed space proxy within a <see cref="T:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicProcessingUnitContainer"/>. 
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Configuration.SpaceProxyPropertiesConfigurationElement.CreateNewElement">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.XAP.Configuration.SpaceProxyPropertiesConfigurationElement.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.XAP.Configuration.SpaceProxyPropertiesConfigurationElement.Add(GigaSpaces.XAP.Configuration.SpaceProxyPropertyConfigurationElement)">
            <summary>
            Add Space proxy property config to the space proxy properties config collection.
            </summary>
            <param name="spaceProxyPropertyConfigurationElement">Space proxy config to add.</param>
        </member>
        <member name="T:GigaSpaces.XAP.Configuration.SpaceProxyPropertyConfigurationElement">
            <summary>
            Encapsulates Information about a space property.
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Configuration.SpaceProxyPropertyConfigurationElement.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Configuration.SpaceProxyPropertyConfigurationElement.#ctor(System.String,System.String)">
            <summary>
            Constructor to set property's name and value
            </summary>
            <param name="name">Property's name</param>
            <param name="value">Property's value</param>
        </member>
        <member name="P:GigaSpaces.XAP.Configuration.SpaceProxyPropertyConfigurationElement.Name">
            <summary>
            Gets the property's name
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Configuration.SpaceProxyPropertyConfigurationElement.Value">
            <summary>
            Gets the property's name
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Configuration.SystemPropertiesConfigurationElement">
            <summary>
            Encapsulates configuration for system properties.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Configuration.SystemPropertiesConfigurationElement.CreateNewElement">
            <summary>
            When overridden in a derived class, creates a new <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </summary>
            <returns>
            A new <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </returns>
        </member>
        <member name="M:GigaSpaces.Core.Configuration.SystemPropertiesConfigurationElement.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the element key for a specified configuration element when overridden in a derived class.
            </summary>
            <returns>
            An <see cref="T:System.Object"></see> that acts as the key for the specified <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </returns>
            <param name="element">The <see cref="T:System.Configuration.ConfigurationElement"></see> to return the key for. </param>
        </member>
        <member name="M:GigaSpaces.Core.Configuration.SystemPropertiesConfigurationElement.GetProperty(System.String)">
            <summary>
            Gets the system property with the specified name.
            </summary>
            <param name="name">Name of property to retrieve.</param>
            <returns>System property with specified name. If no such property exists null is returned.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Configuration.SystemPropertiesConfigurationElement.PutProperty(GigaSpaces.Core.Configuration.SystemPropertyConfigurationElement)">
            <summary>
            Puts the system property into the collection. If a property with the same name exists it is overridden.
            </summary>
            <param name="property">System property to put.</param>
        </member>
        <member name="M:GigaSpaces.Core.Configuration.SystemPropertiesConfigurationElement.AddProperty(GigaSpaces.Core.Configuration.SystemPropertyConfigurationElement)">
            <summary>
            Puts the system property into the collection. If a property with the same name exists an exception is thrown.
            </summary>
            <param name="property">System property to add</param>
        </member>
        <member name="M:GigaSpaces.Core.Configuration.SystemPropertiesConfigurationElement.RemoveProperty(System.String)">
            <summary>
            Removes a system property by its name.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:GigaSpaces.Core.Configuration.SystemPropertiesConfigurationElement.GetPropertyValue(System.String)">
            <summary>
            Gets the system property value by its name.
            </summary>
            <param name="name">Name of property value to retrieve.</param>
            <returns>Value of System property with specified name. If no such property exists null is returned.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Configuration.SystemPropertiesConfigurationElement.SetPropertyValue(System.String,System.String)">
            <summary>
            Sets the value of the specified property's name to the specified value.
            </summary>
            <param name="name">Name of property to set.</param>
            <param name="value">Value of property to set.</param>
        </member>
        <member name="T:GigaSpaces.Core.Configuration.SystemPropertyConfigurationElement">
            <summary>
            Encapsulates Information about a system property.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Configuration.SystemPropertyConfigurationElement.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Configuration.SystemPropertyConfigurationElement.#ctor(System.String,System.String)">
            <summary>
            Constructor to set property's name and value
            </summary>
            <param name="name">Property's name</param>
            <param name="value">Property's value</param>
        </member>
        <member name="P:GigaSpaces.Core.Configuration.SystemPropertyConfigurationElement.Name">
            <summary>
            Gets the property's name
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Configuration.SystemPropertyConfigurationElement.Value">
            <summary>
            Gets the property's name
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Document.DocumentProperties">
            <summary>
            Holds properties that are placed inside <see cref="T:GigaSpaces.Core.Document.SpaceDocument"/>
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Document.DocumentProperties.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
             Initializes new document properties whos elements are containing the same elements as in the given dictionary
            </summary>
            <param name="dictionary">Dictionary containing elements that should be contained in this document properties</param>
        </member>
        <member name="M:GigaSpaces.Core.Document.DocumentProperties.#ctor(System.Int32)">
            <summary>
            Initializes new document properties with the given initial capacity.
            </summary>
            <param name="capacity">Initial capacity.</param>
        </member>
        <member name="M:GigaSpaces.Core.Document.DocumentProperties.#ctor">
            <summary>
            Initializes new empty document properties 
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Document.DocumentProperties.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:GigaSpaces.Core.Document.DocumentProperties.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:GigaSpaces.Core.Document.DocumentProperties.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>. 
                            </param><exception cref="T:System.NullReferenceException">The <paramref name="obj"/> parameter is null.
                            </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:GigaSpaces.Core.Document.DocumentProperties.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:GigaSpaces.Core.Document.SpaceDocument">
            <summary>
            Represents a document which can be stored and retrieved from the space. 
            
            A document is a collection of properties (which are name-value pairs) associated with a type.
            A property name is a string. A property value can be of any type, but it is usually either a scalar
            (e.g. int, String, Date, etc.), a set of properties <see cref="T:System.Collections.Generic.IDictionary`2"/>, 
            or an array/collection or scalars or maps. 
            
            Documents of the same type can have different properties, which provides more dynamic schema than concrete types.
            <see cref="T:GigaSpaces.Core.Metadata.SpaceTypeDescriptorBuilder"/>
            <see cref="T:GigaSpaces.Core.Metadata.ISpaceTypeDescriptor"/>
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Document.SpaceDocument.#ctor(System.String)">
            <summary>
            Creates a space document of the specified type.
            </summary>
            <param name="typeName">Name of document's type.</param>
        </member>
        <member name="M:GigaSpaces.Core.Document.SpaceDocument.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Creates a space document of the specified type with the specified properties.
            <NOTE>Using this constructor with given properties introduce the overhead of copying the given properties
            to the inner document properties</NOTE>
            </summary>
            <param name="typeName">Name of document's type.</param>
            <param name="properties">Properties to set in document.</param>
        </member>
        <member name="M:GigaSpaces.Core.Document.SpaceDocument.ContainsProperty(System.String)">
            <summary>
            Returns <tt>true</tt> if this document contains the specified property.
            </summary>
            <param name="name">Name of property to look for.</param>
            <returns>True if this document contains the specified property, false otherwise.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Document.SpaceDocument.RemoveProperty(System.String)">
            <summary>
            Removes the property from the document (if it exists).
            </summary>
            <param name="name">Name of property to remove.</param>
        </member>
        <member name="M:GigaSpaces.Core.Document.SpaceDocument.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:GigaSpaces.Core.Document.SpaceDocument.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>. 
                            </param><exception cref="T:System.NullReferenceException">The <paramref name="obj"/> parameter is null.
                            </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:GigaSpaces.Core.Document.SpaceDocument.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:GigaSpaces.Core.Document.SpaceDocument.TypeName">
            <summary>
            Gets the type name.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Document.SpaceDocument.Item(System.String)">
            <summary>
            Gets or sets the value of the specified property.
            </summary>
            <param name="propertyName">Name of property to get or set the value of.</param>
            <returns>The value of the specified property name</returns>
        </member>
        <member name="P:GigaSpaces.Core.Document.SpaceDocument.Properties">
            <summary>
            Gets all the properties and their values of the dictionary. The result is a readonly dictionary.
            </summary>		
        </member>
        <member name="P:GigaSpaces.Core.Document.SpaceDocument.Version">
            <summary>
            Gets or sets the document's version.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Document.SpaceDocument.Transient">
            <summary>
            Gets or sets the document's transient state.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Events.SpaceBatchDataEventArgs`1">
            <summary>
            Encapsulates arguments related to space data batch events.
            <seealso cref="P:GigaSpaces.Core.Events.EventSessionConfig.Batch"/>
            </summary>
            <typeparam name="T">Type of entry which triggered the event.</typeparam>
        </member>
        <member name="T:GigaSpaces.Core.Events.SpaceEventArgs">
            <summary>
            Encapsulates arguments related to space events.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Events.SpaceEventArgs.#ctor(GigaSpaces.Core.ISpaceProxy)">
            <summary>
            Create an instance of the event arguments with the specified values.
            </summary>
            <param name="space">The space proxy.</param>
        </member>
        <member name="P:GigaSpaces.Core.Events.SpaceEventArgs.Space">
            <summary>
            Returns the space proxy associated with the event.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Events.SpaceBatchDataEventArgs`1.#ctor(GigaSpaces.Core.Events.SpaceDataEventArgs{`0}[],GigaSpaces.Core.ISpaceProxy,System.Object)">
            <summary>
            Create an instance of the event arguments with the specified values.
            </summary>
            <param name="space">The space proxy.</param>
            <param name="template">The template which was used during subscription.</param>
            <param name="batchEventArgs">The batch event args.</param>
        </member>
        <member name="P:GigaSpaces.Core.Events.SpaceBatchDataEventArgs`1.BatchEventArgs">
            <summary>
            Gets the batch data event args.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Events.SpaceBatchDataEventArgs`1.Template">
            <summary>
            Gets the template which was used during subscription.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Exceptions.GigaSpacesConfigurationException">
            <summary>
            Thrown when a configuration problem is detected.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.GigaSpacesConfigurationException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.GigaSpacesConfigurationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.GigaSpacesConfigurationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.GigaSpacesConfigurationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.GigaSpacesConfigurationException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.GigaSpacesConfigurationException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.GigaSpacesConfigurationException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.GigaSpacesConfigurationException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="T:GigaSpaces.Core.Exceptions.ClearException">
            <summary>
            Thrown when a <see cref="M:GigaSpaces.Core.ISpaceProxy.Clear"/> operations fails, due to partial or complete failure, cluster/single space topologies and SqlQueries/Templates.
            The exception contains an array of exceptions that caused it, one exception per each space that failed.	
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.ClearException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.ClearException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.ClearException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.ClearException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="P:GigaSpaces.Core.Exceptions.ClearException.Exceptions">
            <summary>
            Gets all the exceptions that caused this exception.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Exceptions.ReadByIdsException">
            <summary>
            Thrown when <see ref="ISpaceProxy.ReadByIds"/> operation fails.
            <para>
            <list type="number">
            <listheader>Thrown on:</listheader>
            <item>Partial and complete failure.</item>
            <item>Cluster/single space topologies.</item>
            </list></para>
            <para>
            The exception contains an array of <see ref="IReadByIdResult"/> objects where each result in the array contains
            either a read object or an exception upon failure. The result array index corresponds to the ID index in
            the operation's supplied IDs array.
            </para>
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.ReadByIdsException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.ReadByIdsException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.ReadByIdsException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.ReadByIdsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.ReadByIdsException.#ctor(GigaSpaces.Core.Exceptions.ReadByIdsException.IReadByIdResult[],System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
            <param name="results">Exception results</param>
        </member>
        <member name="P:GigaSpaces.Core.Exceptions.ReadByIdsException.Results">
            <summary>
            Returns information about each operation in the batch.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Exceptions.ReadByIdsException.ResultType">
            <summary>
            Determines the type of a single read by id operation result.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Exceptions.ReadByIdsException.ResultType.Object">
            <summary>
            Operation succeeded - result is the object matching the corresponding id.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Exceptions.ReadByIdsException.ResultType.Error">
            <summary>
            Operation failed - result is the exception that caused the failure.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Exceptions.ReadByIdsException.ResultType.NotFound">
            <summary>
            Operation succeeded - there is no object matching the corresponding id.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Exceptions.ReadByIdsException.IReadByIdResult">
            <summary>
            Encapsulates information about a single read by id operation.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Exceptions.ReadByIdsException.IReadByIdResult.ResultType">
            <summary>
            Gets the result type of the current read by id operation.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Exceptions.ReadByIdsException.IReadByIdResult.Id">
            <summary>
            Gets the id of the corresponding read by id operation.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Exceptions.ReadByIdsException.IReadByIdResult.Object">
            <summary>
            Gets the resulting object, if any.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Exceptions.ReadByIdsException.IReadByIdResult.Exception">
            <summary>
            Gets the exception that failed the read by id operation, if any.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Exceptions.ReadMultipleException">
            <summary>
            Thrown when a <see cref="M:GigaSpaces.Core.IReadOnlySpaceProxy.ReadMultiple``1(``0)"/> operations fails, due to partial or complete failure, cluster/single space topologies and SqlQueries/Templates.
            The exception contains an array of exceptions that caused it, one exception per each space that failed, 
            and an array of entries that were successfully read.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.ReadMultipleException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.ReadMultipleException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.ReadMultipleException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.ReadMultipleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="P:GigaSpaces.Core.Exceptions.ReadMultipleException.Results">
            <summary>
            Gets the partial results.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Exceptions.ReadMultipleException.Exceptions">
            <summary>
            Gets all the exceptions that caused this exception.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Exceptions.RedoLogCapacityExceededException">
            <summary>
            Thrown when the redo log reach its planned capacity and replicated operations 
            are blocked until the redolog size is reduced
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Exceptions.ResourceCapacityExceededException">
            <summary>
            This exception indicates that a resource usage on the server is exceeding its capacity
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.ResourceCapacityExceededException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.ResourceCapacityExceededException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.ResourceCapacityExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.ResourceCapacityExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.ResourceCapacityExceededException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.ResourceCapacityExceededException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.ResourceCapacityExceededException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.ResourceCapacityExceededException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.RedoLogCapacityExceededException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the exception.		
            </summary>
            <param name="spaceName">The name of the space that caused this exception.</param>		
            <param name="targetName">The name of the replication target that the redolog is kept for.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.RedoLogCapacityExceededException.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
            <param name="spaceName">The name of the space that caused this exception.</param>		
            <param name="targetName">The name of the replication target that the redolog is kept for.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.RedoLogCapacityExceededException.#ctor(System.String,System.String,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
            <param name="spaceName">The name of the space that caused this exception.</param>		
            <param name="targetName">The name of the replication target that the redolog is kept for.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.RedoLogCapacityExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>		
        </member>
        <member name="P:GigaSpaces.Core.Exceptions.RedoLogCapacityExceededException.SpaceName">
            <summary>
            Gets the name of the space that is keeping the redo log.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Exceptions.RedoLogCapacityExceededException.TargetName">
            <summary>
            Gets the name of the target that the redo log is kept for.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Exceptions.TakeByIdsException">
            <summary>
            Thrown when <see ref="ISpaceProxy.TakeByIds"/> operation fails.
            <para>
            <list type="number">
            <listheader>Thrown on:</listheader>
            <item>Partial and complete failure.</item>
            <item>Cluster/single space topologies.</item>
            </list></para>
            <para>
            The exception contains an array of <see ref="ITakeByIdResult"/> objects where each result in the array contains
            either a read object or an exception upon failure. The result array index corresponds to the ID index in
            the operation's supplied IDs array.
            </para>
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.TakeByIdsException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.TakeByIdsException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.TakeByIdsException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.TakeByIdsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.TakeByIdsException.#ctor(GigaSpaces.Core.Exceptions.TakeByIdsException.ITakeByIdResult[],System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
            <param name="results">Exception results</param>
        </member>
        <member name="P:GigaSpaces.Core.Exceptions.TakeByIdsException.Results">
            <summary>
            Returns information about each operation in the batch.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Exceptions.TakeByIdsException.ResultType">
            <summary>
            Determines the type of a single take by id operation result.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Exceptions.TakeByIdsException.ResultType.Object">
            <summary>
            Operation succeeded - result is the object matching the corresponding id.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Exceptions.TakeByIdsException.ResultType.Error">
            <summary>
            Operation failed - result is the exception that caused the failure.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Exceptions.TakeByIdsException.ResultType.NotFound">
            <summary>
            Operation succeeded - there is no object matching the corresponding id.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Exceptions.TakeByIdsException.ITakeByIdResult">
            <summary>
            Encapsulates information about a single take by id operation.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Exceptions.TakeByIdsException.ITakeByIdResult.ResultType">
            <summary>
            Gets the result type of the current take by id operation.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Exceptions.TakeByIdsException.ITakeByIdResult.Id">
            <summary>
            Gets the id of the corresponding take by id operation.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Exceptions.TakeByIdsException.ITakeByIdResult.Object">
            <summary>
            Gets the resulting object, if any.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Exceptions.TakeByIdsException.ITakeByIdResult.Exception">
            <summary>
            Gets the exception that failed the take by id operation, if any.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Exceptions.TakeMultipleException">
            <summary>
            Thrown when a <see cref="M:GigaSpaces.Core.ISpaceProxy.TakeMultiple``1(``0)"/> operations fails, due to partial or complete failure, cluster/single space topologies and SqlQueries/Templates.
            The exception contains an array of exceptions that caused it, one exception per each space that failed, 
            and an array of entries that were successfully taken.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.TakeMultipleException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.TakeMultipleException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.TakeMultipleException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.TakeMultipleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="P:GigaSpaces.Core.Exceptions.TakeMultipleException.Results">
            <summary>
            Gets the partial results.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Exceptions.TakeMultipleException.Exceptions">
            <summary>
            Gets all the exceptions that caused this exception.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Executors.ISpaceTaskResultsReducer`2">
            <summary>
             A generic interface that reduces a list of <see cref="T:GigaSpaces.Core.Executors.SpaceTaskResult`1"/>.
             
             <see cref="T:GigaSpaces.Core.Executors.IDistributedSpaceTask`2"/>
            </summary>
             <typeparam name="R">Type of distributed task reduced result.</typeparam>
             <typeparam name="T">Type of each single space task execution result.</typeparam>
        </member>
        <member name="M:GigaSpaces.Core.Executors.ISpaceTaskResultsReducer`2.Reduce(GigaSpaces.Core.Executors.SpaceTaskResultsCollection{`1})">
            <summary>
            Reduce a list of <see cref="T:GigaSpaces.Core.Executors.SpaceTaskResult`1"/> into a single result.
            </summary>
            <param name="results">The list of space task results to reduce.</param>
            <returns>Reduced result.</returns>
        </member>
        <member name="T:GigaSpaces.Core.Executors.SpaceTaskResultsCollection`1">
            <summary>
            Collection of <see cref="T:GigaSpaces.Core.Executors.SpaceTaskResult`1"/>
            </summary>
            <typeparam name="T">Type of task execution result.</typeparam>
        </member>
        <member name="T:GigaSpaces.Core.Executors.ISpaceTaskResultsFilter`1">
            <summary>
            An optional filter that can be used with <see cref="T:GigaSpaces.Core.Executors.IDistributedSpaceTask`2"/>. Allows to be notified
            for each <see cref="T:GigaSpaces.Core.Executors.SpaceTaskResult`1"/> that arrives and decide what
            should be done with it.
            </summary>
            <typeparam name="T">Type of execution result.</typeparam>
        </member>
        <member name="M:GigaSpaces.Core.Executors.ISpaceTaskResultsFilter`1.GetFilterDecision(GigaSpaces.Core.Executors.SpaceTaskFilterInfo{`0})">
            <summary>
            A callback invoked for each result that arrives as a result of a distributed space task execution allowing
            to access the result that caused this event, the events received so far, and the total expected results.     
            </summary>
            <param name="info">Current filter info.</param>
            <returns>Filter's decision</returns>
        </member>
        <member name="T:GigaSpaces.Core.Executors.ISpaceTask`1">
            <summary>
            A task executed on a space node (processing unit) that returns a result and may throw an exception.
            </summary>
            <typeparam name="T">Type of execution result.</typeparam>
        </member>
        <member name="M:GigaSpaces.Core.Executors.ISpaceTask`1.Execute(GigaSpaces.Core.ISpaceProxy,GigaSpaces.Core.ITransaction)">
            <summary>
            Computes a result, or throws an exception if unable to do so.
            </summary>
            <param name="spaceProxy">A proxy to the space in which this task is being executed.</param>
            <param name="tx">The transaction (if any) under which to work.</param>
            <returns>Computed result.</returns>
        </member>
        <member name="T:GigaSpaces.Core.Executors.SpaceTaskResult`1">
            <summary>
            A result of an <see cref="T:GigaSpaces.Core.Executors.ISpaceTask`1"/> execution.
            </summary>
            <typeparam name="T">Type of result.</typeparam>
        </member>
        <member name="M:GigaSpaces.Core.Executors.SpaceTaskResult`1.#ctor(`0,System.Exception)">
            <summary>
            Constructs a new space task result.
            </summary>
            <param name="result">Task result.</param>
            <param name="exception">Task execution exception.</param>
        </member>
        <member name="P:GigaSpaces.Core.Executors.SpaceTaskResult`1.Exception">
            <summary>
            Gets task execution exception or null if no exception occurd.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Executors.SpaceTaskResult`1.Result">
            <summary>
            Gets task execution result.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Executors.SpaceTaskFilterDecision">
            <summary>
            Controls what should be done with the results of an <see cref="T:GigaSpaces.Core.Executors.IDistributedSpaceTask`2"/> execution.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Executors.SpaceTaskFilterDecision.Continue">
            <summary>
            Continue processing the distributed task.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Executors.SpaceTaskFilterDecision.Break">
            <summary>
            Break out of the processing of the distributed task and move
            to the reduce phase including the current result.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Executors.SpaceTaskFilterDecision.Skip">
            <summary>
            Skip this result and continue processing the rest of the results.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Executors.SpaceTaskFilterDecision.SkipAndBreak">
            <summary>
            Skip this result and breaks out of the processing of the distributed task
            and move to the reduce phase.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Executors.SpaceTaskFilterInfo`1">
            <summary>
            Contains a single filter decision invocation required info.
            </summary>
            <typeparam name="T">Type of data to filter.</typeparam>
        </member>
        <member name="M:GigaSpaces.Core.Executors.SpaceTaskFilterInfo`1.#ctor(System.Int32,GigaSpaces.Core.Executors.SpaceTaskResult{`0},GigaSpaces.Core.Executors.SpaceTaskResultsCollection{`0})">
            <summary>
            Constructs a new space task filter info
            </summary>
            <param name="totalExpectedResults">Total expected result of this execution.</param>
            <param name="currentResult">Current result.</param>
            <param name="receivedResults">Previously received results without the current result.</param>
        </member>
        <member name="P:GigaSpaces.Core.Executors.SpaceTaskFilterInfo`1.TotalExpectedResults">
            <summary>
            Gets the total expected results of this execution.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Executors.SpaceTaskFilterInfo`1.CurrentResult">
            <summary>
            Gets the current result.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Executors.SpaceTaskFilterInfo`1.ReceivedResults">
            <summary>
            Gets the previously received results without the current result.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Filters.FilterException">
            <summary>
            Thrown when a filter related error occurs.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Filters.FilterException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Filters.FilterException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GigaSpaces.Core.Filters.FilterException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:GigaSpaces.Core.Filters.FilterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="T:GigaSpaces.Core.Filters.FilterValidationException">
            <summary>
            Thrown when a filter validation related error occurs.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Filters.FilterValidationException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Filters.FilterValidationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GigaSpaces.Core.Filters.FilterValidationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:GigaSpaces.Core.Filters.FilterValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="T:GigaSpaces.Core.AsyncCallback`1">
            <summary>
            References a method to be called when a corresponding asynchronous operation is completes.
            </summary>
            <typeparam name="T">Type of object that will be the result of the operation.</typeparam>
            <param name="asyncResult">Handle to the asyncResult created by the operation.</param>
        </member>
        <member name="T:GigaSpaces.Core.Executors.IDistributedSpaceTask`2">
            <summary>
            A distributed space task is a <see cref="T:GigaSpaces.Core.Executors.ISpaceTask`1"/> that is executed on several space nodes,
            and reduces the result collected from all the nodes into a single result. (Map Reduce pattern).
            </summary>
            <typeparam name="R">Type of distributed task reduced result.</typeparam>
            <typeparam name="T">Type of each single space task execution result.</typeparam>
        </member>
        <member name="T:GigaSpaces.Core.Executors.IDistributedSpaceTask`1">
            <summary>
            A distributed space task is a <see cref="T:GigaSpaces.Core.Executors.ISpaceTask`1"/> that is executed on several space nodes,
            and reduces the result collected from all the nodes into a single result. (Map Reduce pattern).
            </summary>
            <typeparam name="T">Type of distributed task execution and reduced result.</typeparam>
        </member>
        <member name="T:GigaSpaces.Core.IdQuery`1">
             <summary>
             Class to encapsulate information of a query based on a Space ID.
            
             An ID query is composed of a type (provided either as a .NET type or as a string which contains the type name) 
             and an ID value, and optionally a routing value an a query result type indicator.
             </summary>
             <typeparam name="T">The type of the expected result.</typeparam>
             <see cref="F:GigaSpaces.Core.IdQuery`1.QueryResultType"/>
             <see cref="T:GigaSpaces.Core.IdsQuery`1"/>
        </member>
        <member name="F:GigaSpaces.Core.IdQuery`1.TypeName">
            <summary>
            The name of type to query.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.IdQuery`1.Id">
            <summary>
            The id to match.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.IdQuery`1.Routing">
            <summary>
            The routing value used to determine the partition to query.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.IdQuery`1.Version">
            <summary>
            The version to consider when performing a modifying operation (take/clear/change), 0 version means no version check should be made.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.IdQuery`1.QueryResultType">
            <summary>
            The type of result.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.IdQuery`1.#ctor(System.String,System.Object,System.Object,System.Int32)">
            <summary>
            Creates an IdQuery using specified type name.
            </summary>
            <param name="typeName">Query type name.</param>
            <param name="id">Id to match.</param>
            <param name="routing">Routing value used to determine the partition to query.</param>
            <param name="version">Version to consider when performing a modifying operation (take/clear/change), 0 version means no version check should be made.</param>		
        </member>
        <member name="M:GigaSpaces.Core.IdQuery`1.#ctor(System.String,System.Object,System.Object)">
            <summary>
            Creates an IdQuery using specified type name.
            </summary>
            <param name="typeName">Query type name.</param>
            <param name="id">Id to match.</param>
            <param name="routing">Routing value used to determine the partition to query.</param>
        </member>
        <member name="M:GigaSpaces.Core.IdQuery`1.#ctor(System.String,System.Object)">
            <summary>
            Creates an IdQuery using specified type name.
            </summary>
            <param name="typeName">Query type name.</param>
            <param name="id">Id to match.</param>				
        </member>
        <member name="M:GigaSpaces.Core.IdQuery`1.#ctor(System.Object,System.Object,System.Int32)">
            <summary>
            Creates an IdQuery using the instance generic type.
            </summary>		
            <param name="id">Id to match.</param>	
            <param name="routing">Routing value used to determine the partition to query.</param>
            <param name="version">Version to consider when performing a modifying operation (take/clear/change), 0 version means no version check should be made.</param>					
        </member>
        <member name="M:GigaSpaces.Core.IdQuery`1.#ctor(System.Object,System.Object)">
            <summary>
            Creates an IdQuery using the instance generic type.
            </summary>		
            <param name="id">Id to match.</param>	
            <param name="routing">Routing value used to determine the partition to query.</param>			
        </member>
        <member name="M:GigaSpaces.Core.IdQuery`1.#ctor(System.Object)">
            <summary>
            Creates an IdQuery using the instance generic type.
            </summary>		
            <param name="id">Id to match.</param>				
        </member>
        <member name="P:GigaSpaces.Core.IdQuery`1.Projections">
            <summary>
            Gets or sets projection properties which specifies that a result for an operation using this query should
            contain data for the specified projection properties.
            Other properties which were not specifies as a projection will not contain data.
            By default, if no projection was added, all the properties are returned with full data.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.IdsQuery`1">
            <summary>
            Class to encapsulate information of a query based on multiple Space IDs.
            An IDs query is composed of a type (provided either as a .NET class or as a string which contains the type name) 
            and a collection of ID values, and optionally routing value(s) an a query result type indicator.
            </summary>
            <typeparam name="T">The type of the expected result.</typeparam>
            <see cref="T:GigaSpaces.Core.IdQuery`1"/>
            <see cref="F:GigaSpaces.Core.IdsQuery`1.QueryResultType"/>
        </member>
        <member name="F:GigaSpaces.Core.IdsQuery`1.TypeName">
            <summary>
            The name of type to query.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.IdsQuery`1.Ids">
            <summary>
            The the IDs to match.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.IdsQuery`1.Routing">
            <summary>
            The routing value used to determine the partition to query. 
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.IdsQuery`1.Routings">
            <summary>
            The routing values used to determine the partition to query. 
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.IdsQuery`1.QueryResultType">
            <summary>
            The type of result.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.IdsQuery`1.Projections">
            <summary>
            Gets or sets projection properties which specifies that a result for an operation using this query should
            contain data for the specified projection properties.
            Other properties which were not specifies as a projection will not contain data.
            By default, if no projection was added, all the properties are returned with full data.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.IdsQuery`1.#ctor(System.String,System.Object[])">
            <summary>
            Creates an IdsQuery using specified type name.
            </summary>
            <param name="typeName">Query type name.</param>
            <param name="ids">Ids to match.</param>        
        </member>
        <member name="M:GigaSpaces.Core.IdsQuery`1.#ctor(System.String,System.Object[],System.Object)">
            <summary>
            Creates an IdsQuery using specified type name.
            </summary>
            <param name="typeName">Query type name.</param>
            <param name="ids">Ids to match.</param>
            <param name="routing">Routing value used to determine the partition to query.</param>        
        </member>
        <member name="M:GigaSpaces.Core.IdsQuery`1.#ctor(System.String,System.Object[],System.Object[])">
            <summary>
            Creates an IdsQuery using specified type name.
            </summary>
            <param name="typeName">Query type name.</param>
            <param name="ids">Ids to match.</param>
            <param name="routings">Routing values used to determine the partition to query.</param>        
        </member>
        <member name="M:GigaSpaces.Core.IdsQuery`1.#ctor(System.Object[])">
            <summary>
            Creates an IdsQuery using the instance generic type.
            </summary>		
            <param name="ids">Ids to match.</param>	        
        </member>
        <member name="M:GigaSpaces.Core.IdsQuery`1.#ctor(System.Object[],System.Object)">
            <summary>
            Creates an IdsQuery using the instance generic type.
            </summary>		
            <param name="ids">Ids to match.</param>	
            <param name="routing">Routing value used to determine the partition to query.</param>	        
        </member>
        <member name="M:GigaSpaces.Core.IdsQuery`1.#ctor(System.Object[],System.Object[])">
            <summary>
            Creates an IdsQuery using the instance generic type.
            </summary>		
            <param name="ids">Ids to match.</param>	
            <param name="routings">Routing values used to determine the partition to query.</param>	        
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.CastleComponentAttribute">
            <summary>
            This attribute is usefull only when you want to register all components
            on an assembly as a batch process. 
            By doing so, the batch register will look 
            for this attribute to distinguish components from other classes.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.LifestyleAttribute">
            <summary>
            Base for Attributes that want to express lifestyle
            chosen by the component.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.LifestyleAttribute.#ctor(GigaSpaces.Core.Internal.Castle.Core.LifestyleType)">
            <summary>
            Initializes a new instance of the <see cref="T:GigaSpaces.Core.Internal.Castle.Core.LifestyleAttribute"/> class.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.LifestyleAttribute.Lifestyle">
            <summary>
            Gets or sets the lifestyle.
            </summary>
            <value>The lifestyle.</value>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.CastleComponentAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GigaSpaces.Core.Internal.Castle.Core.CastleComponentAttribute"/> class.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.CastleComponentAttribute.#ctor(System.String,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:GigaSpaces.Core.Internal.Castle.Core.CastleComponentAttribute"/> class.
            </summary>
            <param name="key">The key.</param>
            <param name="service">The service.</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.CastleComponentAttribute.#ctor(System.String,System.Type,GigaSpaces.Core.Internal.Castle.Core.LifestyleType)">
            <summary>
            Initializes a new instance of the <see cref="T:GigaSpaces.Core.Internal.Castle.Core.CastleComponentAttribute"/> class.
            </summary>
            <param name="key">The key.</param>
            <param name="service">The service.</param>
            <param name="lifestyle">The lifestyle.</param>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.CastleComponentAttribute.Service">
            <summary>
            Gets the service.
            </summary>
            <value>The service.</value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.CastleComponentAttribute.Key">
            <summary>
            Gets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.ComponentActivatorAttribute">
            <summary>
            Associates a custom component with a component
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.ComponentActivatorAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:GigaSpaces.Core.Internal.Castle.Core.ComponentActivatorAttribute"/> class.
            </summary>
            <param name="componentActivatorType">Type of the component activator.</param>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.ComponentActivatorAttribute.ComponentActivatorType">
            <summary>
            Gets the type of the component activator.
            </summary>
            <value>The type of the component activator.</value>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.ComponentProxyBehaviorAttribute">
            <summary>
            Specifies the proxying behavior for a component.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.ComponentProxyBehaviorAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GigaSpaces.Core.Internal.Castle.Core.ComponentProxyBehaviorAttribute"/> class.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.ComponentProxyBehaviorAttribute.UseMarshalByRefProxy">
            <summary>
            Gets or sets a value indicating whether the generated 
            interface proxy should inherit from <see cref="T:System.MarshalByRefObject"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.ComponentProxyBehaviorAttribute.UseSingleInterfaceProxy">
            <summary>
            Determines if the component requires a single interface proxy.
            </summary>
            <value><c>true</c> if the component requires a single interface proxy.</value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.ComponentProxyBehaviorAttribute.AdditionalInterfaces">
            <summary>
             Gets or sets the additional interfaces used during proxy generation.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.DoNotWireAttribute">
            <summary>
            Marks as property to be skipped and not be wired
            by the IoC container
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.InterceptorAttribute">
            <summary>
            Used to declare that a component wants interceptors acting on it.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.InterceptorAttribute.#ctor(System.String)">
            <summary>
            Constructs the InterceptorAttribute pointing to
            a key to a interceptor
            </summary>
            <param name="componentKey"></param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.InterceptorAttribute.#ctor(System.Type)">
            <summary>
            Constructs the InterceptorAttribute pointing to
            a service
            </summary>
            <param name="interceptorType"></param>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.SingletonAttribute">
            <summary>
            Indicates that the target components wants a
            singleton lifestyle.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.SingletonAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GigaSpaces.Core.Internal.Castle.Core.SingletonAttribute"/> class.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.TransientAttribute">
            <summary>
            Indicates that the target components wants a
            transient lifestyle.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.TransientAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GigaSpaces.Core.Internal.Castle.Core.TransientAttribute"/> class.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.PerThreadAttribute">
            <summary>
            Indicates that the target components wants a
            per thread lifestyle.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.PerThreadAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GigaSpaces.Core.Internal.Castle.Core.PerThreadAttribute"/> class.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.PerWebRequestAttribute">
            <summary>
            Indicates that the target components wants a
            per web request lifestyle.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.PooledAttribute">
            <summary>
            Indicates that the target components wants a
            pooled lifestyle.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.PooledAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GigaSpaces.Core.Internal.Castle.Core.PooledAttribute"/> class
            using the default initial pool size (5) and the max pool size (15).
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.PooledAttribute.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GigaSpaces.Core.Internal.Castle.Core.PooledAttribute"/> class.
            </summary>
            <param name="initialPoolSize">Initial size of the pool.</param>
            <param name="maxPoolSize">Max pool size.</param>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.PooledAttribute.InitialPoolSize">
            <summary>
            Gets the initial size of the pool.
            </summary>
            <value>The initial size of the pool.</value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.PooledAttribute.MaxPoolSize">
            <summary>
            Gets the maximum pool size.
            </summary>
            <value>The size of the max pool.</value>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.CustomLifestyleAttribute">
            <summary>
            Indicates that the target components wants a
            custom lifestyle.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.CustomLifestyleAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:GigaSpaces.Core.Internal.Castle.Core.CustomLifestyleAttribute"/> class.
            </summary>
            <param name="lifestyleHandlerType">The lifestyle handler.</param>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.CustomLifestyleAttribute.LifestyleHandlerType">
            <summary>
            Gets the type of the lifestyle handler.
            </summary>
            <value>The type of the lifestyle handler.</value>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInterceptor">
            <summary>
            New interface that is going to be used by DynamicProxy 2
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInvocation">
            <summary>
            New interface that is going to be used by DynamicProxy 2
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInvocation.GetConcreteMethod">
            <summary>
            Returns the concrete instantiation of <see cref="P:GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInvocation.Method"/>, with any generic parameters bound to real types.
            </summary>
            <returns>The concrete instantiation of <see cref="P:GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInvocation.Method"/>, or <see cref="P:GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInvocation.Method"/> if not a generic method.</returns>
            <remarks>Can be slower than calling <see cref="P:GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInvocation.Method"/>.</remarks>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInvocation.GetConcreteMethodInvocationTarget">
            <summary>
            Returns the concrete instantiation of <see cref="P:GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInvocation.MethodInvocationTarget"/>, with any generic parameters bound to real types.
            </summary>
            <returns>The concrete instantiation of <see cref="P:GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInvocation.MethodInvocationTarget"/>, or <see cref="P:GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInvocation.MethodInvocationTarget"/> if not a generic method.</returns>
            <remarks>Can be slower than calling <see cref="P:GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInvocation.MethodInvocationTarget"/>.</remarks>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInvocation.Proceed">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInvocation.GenericArguments">
            <summary>
            The generic arguments of the method, or null if not a generic method.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInvocation.Method">
            <summary>
            
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInvocation.MethodInvocationTarget">
            <summary>
            For interface proxies, this will point to the
            <see cref="T:System.Reflection.MethodInfo"/> on the target class
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.Interceptor.IOnBehalfAware">
            <summary>
            Interceptors might implement this to receive the
            ComponentModel on behalf of the component where the
            interceptor is acting.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Interceptor.IProxyTargetAccessor.DynProxyGetTarget">
            <summary>
            Get the proxy target (note that null is a valid target!)
            </summary>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Interceptor.IProxyTargetAccessor.GetInterceptors">
            <summary>
            Gets the interceptors for the proxy
            </summary>
            <returns></returns>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.IVertex">
            <summary>
            Abstract representation of a vertex.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.GraphNode.Dependers">
            <summary>
            The nodes that dependes on this node
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.GraphNode.Dependents">
            <summary>
            The nodes that this node depends
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Castle.Core.Internal.VertexColor.White">
            <summary>
            The node has not been visited yet
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Castle.Core.Internal.VertexColor.Gray">
            <summary>
            This node is in the process of being visited
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Castle.Core.Internal.VertexColor.Black">
            <summary>
            This now was visited
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.Internal.ColorsSet">
            <summary>
            Represents a collection of objects
            which are guaranted to be unique 
            and holds a color for them
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.Internal.TimestampSet">
            <summary>
            Holds a timestamp (integer) 
            for a given item
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Internal.LinkedList.GetNode(System.Int32)">
            <summary>
            Returns the node at the specified index.
            </summary>
            <param name="index">The lookup index.</param>
            <returns>The node at the specified index.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If the specified <paramref name="index"/> is greater than the
            number of objects within the list.
            </exception>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Internal.LinkedList.ValidateIndex(System.Int32)">
            <summary>
            Validates the specified index.
            </summary>
            <param name="index">The lookup index.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If the index is invalid.
            </exception>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.IServiceEnabledComponent">
            <summary>
            Defines that the implementation wants a 
            <see cref="T:System.IServiceProvider"/> in order to 
            access other components. The creator must be aware
            that the component might (or might not) implement 
            the interface.
            </summary>
            <remarks>
            Used by Castle Project components to, for example, 
            gather logging factories
            </remarks>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.IServiceProviderEx">
            <summary>
            Increments <c>IServiceProvider</c> with a generic service resolution operation.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.IServiceProviderExAccessor">
            <summary>
            This interface should be implemented by classes
            that are available in a bigger context, exposing
            the container to different areas in the same application.
            <para>
            For example, in Web application, the (global) HttpApplication
            subclasses should implement this interface to expose 
            the configured container
            </para>
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.IInitializable">
            <summary>
            Lifecycle interface. If implemented by a component,
            the method Initialized will be invoked by the container
            before making the component available to the external world.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.IInitializable.Initialize">
            <summary>
            Implementors should perform any initialization logic.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.IRecyclable">
            <summary>
            Only called for components that 
            belongs to a pool when the component
            comes back to the pool.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.IRecyclable.Recycle">
            <summary>
            Implementors should perform any 
            initialization/clean up.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.IStartable">
            <summary>
            Interface for components that wish to be started by the container
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.IStartable.Start">
            <summary>
            Starts this instance.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.IStartable.Stop">
            <summary>
            Stops this instance.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.Logging.IExtendedLoggerFactory">
            <summary>
            Provides a factory that can produce either <see cref="T:GigaSpaces.Core.Internal.Castle.Core.Logging.ILogger"/> or
            <see cref="T:GigaSpaces.Core.Internal.Castle.Core.Logging.IExtendedLogger"/> classes.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.Logging.ILoggerFactory">
            <summary>
            Manages the instantiation of <see cref="T:GigaSpaces.Core.Internal.Castle.Core.Logging.ILogger"/>s.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.ILoggerFactory.Create(System.Type)">
            <summary>
            Creates a new logger, getting the logger name from the specified type.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.ILoggerFactory.Create(System.String)">
            <summary>
            Creates a new logger.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.ILoggerFactory.Create(System.Type,GigaSpaces.Core.Internal.Castle.Core.Logging.LoggerLevel)">
            <summary>
            Creates a new logger, getting the logger name from the specified type.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.ILoggerFactory.Create(System.String,GigaSpaces.Core.Internal.Castle.Core.Logging.LoggerLevel)">
            <summary>
            Creates a new logger.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.IExtendedLoggerFactory.Create(System.Type)">
            <summary>
            Creates a new extended logger, getting the logger name from the specified type.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.IExtendedLoggerFactory.Create(System.String)">
            <summary>
            Creates a new extended logger.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.IExtendedLoggerFactory.Create(System.Type,GigaSpaces.Core.Internal.Castle.Core.Logging.LoggerLevel)">
            <summary>
            Creates a new extended logger, getting the logger name from the specified type.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.IExtendedLoggerFactory.Create(System.String,GigaSpaces.Core.Internal.Castle.Core.Logging.LoggerLevel)">
            <summary>
            Creates a new extended logger.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.Factories.AbstractExtendedLoggerFactory.Create(System.Type)">
            <summary>
            Creates a new extended logger, getting the logger name from the specified type.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.Factories.AbstractExtendedLoggerFactory.Create(System.String)">
            <summary>
            Creates a new extended logger.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.Factories.AbstractExtendedLoggerFactory.Create(System.Type,GigaSpaces.Core.Internal.Castle.Core.Logging.LoggerLevel)">
            <summary>
            Creates a new extended logger, getting the logger name from the specified type.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.Factories.AbstractExtendedLoggerFactory.Create(System.String,GigaSpaces.Core.Internal.Castle.Core.Logging.LoggerLevel)">
            <summary>
            Creates a new extended logger.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.Factories.AbstractExtendedLoggerFactory.GigaSpaces#Core#Internal#Castle#Core#Logging#ILoggerFactory#Create(System.Type)">
            <summary>
            Creates a new logger, getting the logger name from the specified type.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.Factories.AbstractExtendedLoggerFactory.GigaSpaces#Core#Internal#Castle#Core#Logging#ILoggerFactory#Create(System.String)">
            <summary>
            Creates a new logger.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.Factories.AbstractExtendedLoggerFactory.GigaSpaces#Core#Internal#Castle#Core#Logging#ILoggerFactory#Create(System.Type,GigaSpaces.Core.Internal.Castle.Core.Logging.LoggerLevel)">
            <summary>
            Creates a new logger, getting the logger name from the specified type.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.Factories.AbstractExtendedLoggerFactory.GigaSpaces#Core#Internal#Castle#Core#Logging#ILoggerFactory#Create(System.String,GigaSpaces.Core.Internal.Castle.Core.Logging.LoggerLevel)">
            <summary>
            Creates a new logger.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.Factories.AbstractExtendedLoggerFactory.GetConfigFile(System.String)">
            <summary>
            Gets the configuration file.
            </summary>
            <param name="fileName">i.e. log4net.config</param>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.AbstractLoggerFactory.GetConfigFile(System.String)">
            <summary>
            Gets the configuration file.
            </summary>
            <param name="fileName">i.e. log4net.config</param>
            <returns></returns>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.Logging.ConsoleFactory">
            <summary>
            Summary description for ConsoleFactory.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.Logging.NullLogFactory">
            <summary>
            NullLogFactory used when logging is turned off.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.NullLogFactory.Create(System.String)">
            <summary>
            Creates an instance of ILogger with the specified name.
            </summary>
            <param name="name">Name.</param>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.NullLogFactory.Create(System.String,GigaSpaces.Core.Internal.Castle.Core.Logging.LoggerLevel)">
            <summary>
            Creates an instance of ILogger with the specified name and LoggerLevel.
            </summary>
            <param name="name">Name.</param>
            <param name="level">Level.</param>
            <returns></returns>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.Logging.StreamLoggerFactory">
            <summary>
            Creates <see cref="T:GigaSpaces.Core.Internal.Castle.Core.Logging.StreamLogger"/> outputing 
            to files. The name of the file is derived from the log name
            plus the 'log' extension.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.Logging.TraceLoggerFactory">
            <summary>
            Used to create the TraceLogger implementation of ILogger interface. See <see cref="T:GigaSpaces.Core.Internal.Castle.Core.Logging.TraceLogger"/>. 
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.Logging.IContextProperties">
            <summary>
            Interface for Context Properties implementations
            </summary>
            <remarks>
            <para>
            This interface defines a basic property get set accessor.
            </para>
            <para>
            Based on the ContextPropertiesBase of log4net, by Nicko Cadell.
            </para>
            </remarks>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.Logging.IContextProperties.Item(System.String)">
            <summary>
            Gets or sets the value of a property
            </summary>
            <value>
            The value for the property with the specified key
            </value>
            <remarks>
            <para>
            Gets or sets the value of a property
            </para>
            </remarks>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.Logging.IExtendedLogger">
            <summary>
            Provides an interface that supports <see cref="T:GigaSpaces.Core.Internal.Castle.Core.Logging.ILogger"/> and
            allows the storage and retrieval of Contexts. These are supported in
            both log4net and NLog.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.Logging.ILogger">
            <summary>
            Manages logging.
            </summary>
            <remarks>
            This is a facade for the different logging subsystems.
            It offers a simplified interface that follows IOC patterns
            and a simplified priority/level/severity abstraction. 
            </remarks>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.ILogger.Debug(System.String)">
            <summary>
            Logs a debug message.
            </summary>
            <param name="message">The message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.ILogger.Debug(System.String,System.Exception)">
            <summary>
            Logs a debug message. 
            </summary>
            <param name="exception">The exception to log</param>
            <param name="message">The message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.ILogger.Debug(System.String,System.Object[])">
            <summary>
            Logs a debug message.
            </summary>
            <param name="format">Format string for the message to log</param>
            <param name="args">Format arguments for the message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.ILogger.DebugFormat(System.String,System.Object[])">
            <summary>
            Logs a debug message.
            </summary>
            <param name="format">Format string for the message to log</param>
            <param name="args">Format arguments for the message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.ILogger.DebugFormat(System.Exception,System.String,System.Object[])">
            <summary>
            Logs a debug message.
            </summary>
            <param name="exception">The exception to log</param>
            <param name="format">Format string for the message to log</param>
            <param name="args">Format arguments for the message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.ILogger.DebugFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            Logs a debug message.
            </summary>
            <param name="formatProvider">The format provider to use</param>
            <param name="format">Format string for the message to log</param>
            <param name="args">Format arguments for the message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.ILogger.DebugFormat(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            Logs a debug message.
            </summary>
            <param name="exception">The exception to log</param>
            <param name="formatProvider">The format provider to use</param>
            <param name="format">Format string for the message to log</param>
            <param name="args">Format arguments for the message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.ILogger.Info(System.String)">
            <summary>
            Logs an info message.
            </summary>
            <param name="message">The message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.ILogger.Info(System.String,System.Exception)">
            <summary>
            Logs an info message. 
            </summary>
            <param name="exception">The exception to log</param>
            <param name="message">The message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.ILogger.Info(System.String,System.Object[])">
            <summary>
            Logs an info message.
            </summary>
            <param name="format">Format string for the message to log</param>
            <param name="args">Format arguments for the message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.ILogger.InfoFormat(System.String,System.Object[])">
            <summary>
            Logs an info message.
            </summary>
            <param name="format">Format string for the message to log</param>
            <param name="args">Format arguments for the message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.ILogger.InfoFormat(System.Exception,System.String,System.Object[])">
            <summary>
            Logs an info message.
            </summary>
            <param name="exception">The exception to log</param>
            <param name="format">Format string for the message to log</param>
            <param name="args">Format arguments for the message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.ILogger.InfoFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            Logs an info message.
            </summary>
            <param name="formatProvider">The format provider to use</param>
            <param name="format">Format string for the message to log</param>
            <param name="args">Format arguments for the message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.ILogger.InfoFormat(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            Logs an info message.
            </summary>
            <param name="exception">The exception to log</param>
            <param name="formatProvider">The format provider to use</param>
            <param name="format">Format string for the message to log</param>
            <param name="args">Format arguments for the message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.ILogger.Warn(System.String)">
            <summary>
            Logs a warn message.
            </summary>
            <param name="message">The message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.ILogger.Warn(System.String,System.Exception)">
            <summary>
            Logs a warn message. 
            </summary>
            <param name="exception">The exception to log</param>
            <param name="message">The message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.ILogger.Warn(System.String,System.Object[])">
            <summary>
            Logs a warn message.
            </summary>
            <param name="format">Format string for the message to log</param>
            <param name="args">Format arguments for the message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.ILogger.WarnFormat(System.String,System.Object[])">
            <summary>
            Logs a warn message.
            </summary>
            <param name="format">Format string for the message to log</param>
            <param name="args">Format arguments for the message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.ILogger.WarnFormat(System.Exception,System.String,System.Object[])">
            <summary>
            Logs a warn message.
            </summary>
            <param name="exception">The exception to log</param>
            <param name="format">Format string for the message to log</param>
            <param name="args">Format arguments for the message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.ILogger.WarnFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            Logs a warn message.
            </summary>
            <param name="formatProvider">The format provider to use</param>
            <param name="format">Format string for the message to log</param>
            <param name="args">Format arguments for the message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.ILogger.WarnFormat(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            Logs a warn message.
            </summary>
            <param name="exception">The exception to log</param>
            <param name="formatProvider">The format provider to use</param>
            <param name="format">Format string for the message to log</param>
            <param name="args">Format arguments for the message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.ILogger.Error(System.String)">
            <summary>
            Logs an error message.
            </summary>
            <param name="message">The message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.ILogger.Error(System.String,System.Exception)">
            <summary>
            Logs an error message. 
            </summary>
            <param name="exception">The exception to log</param>
            <param name="message">The message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.ILogger.Error(System.String,System.Object[])">
            <summary>
            Logs an error message.
            </summary>
            <param name="format">Format string for the message to log</param>
            <param name="args">Format arguments for the message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.ILogger.ErrorFormat(System.String,System.Object[])">
            <summary>
            Logs an error message.
            </summary>
            <param name="format">Format string for the message to log</param>
            <param name="args">Format arguments for the message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.ILogger.ErrorFormat(System.Exception,System.String,System.Object[])">
            <summary>
            Logs an error message.
            </summary>
            <param name="exception">The exception to log</param>
            <param name="format">Format string for the message to log</param>
            <param name="args">Format arguments for the message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.ILogger.ErrorFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            Logs an error message.
            </summary>
            <param name="formatProvider">The format provider to use</param>
            <param name="format">Format string for the message to log</param>
            <param name="args">Format arguments for the message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.ILogger.ErrorFormat(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            Logs an error message.
            </summary>
            <param name="exception">The exception to log</param>
            <param name="formatProvider">The format provider to use</param>
            <param name="format">Format string for the message to log</param>
            <param name="args">Format arguments for the message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.ILogger.Fatal(System.String)">
            <summary>
            Logs a fatal message.
            </summary>
            <param name="message">The message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.ILogger.Fatal(System.String,System.Exception)">
            <summary>
            Logs a fatal message. 
            </summary>
            <param name="exception">The exception to log</param>
            <param name="message">The message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.ILogger.Fatal(System.String,System.Object[])">
            <summary>
            Logs a fatal message.
            </summary>
            <param name="format">Format string for the message to log</param>
            <param name="args">Format arguments for the message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.ILogger.FatalFormat(System.String,System.Object[])">
            <summary>
            Logs a fatal message.
            </summary>
            <param name="format">Format string for the message to log</param>
            <param name="args">Format arguments for the message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.ILogger.FatalFormat(System.Exception,System.String,System.Object[])">
            <summary>
            Logs a fatal message.
            </summary>
            <param name="exception">The exception to log</param>
            <param name="format">Format string for the message to log</param>
            <param name="args">Format arguments for the message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.ILogger.FatalFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            Logs a fatal message.
            </summary>
            <param name="formatProvider">The format provider to use</param>
            <param name="format">Format string for the message to log</param>
            <param name="args">Format arguments for the message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.ILogger.FatalFormat(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            Logs a fatal message.
            </summary>
            <param name="exception">The exception to log</param>
            <param name="formatProvider">The format provider to use</param>
            <param name="format">Format string for the message to log</param>
            <param name="args">Format arguments for the message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.ILogger.FatalError(System.String)">
            <summary>
            Logs a fatal error message.
            </summary>
            <param name="message">The Message</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.ILogger.FatalError(System.String,System.Exception)">
            <summary>
            Logs a fatal error message.
            </summary>
            <param name="message">The Message</param>
            <param name="exception">The Exception</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.ILogger.FatalError(System.String,System.Object[])">
            <summary>
            Logs a fatal error message.
            </summary>
            <param name="format">Message format</param>
            <param name="args">Array of objects to write using format</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.ILogger.CreateChildLogger(System.String)">
            <summary>
            Create a new child logger.
            The name of the child logger is [current-loggers-name].[passed-in-name]
            </summary>
            <param name="loggerName">The Subname of this logger.</param>
            <returns>The New ILogger instance.</returns> 
            <exception cref="T:System.ArgumentException">If the name has an empty element name.</exception>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.Logging.ILogger.IsDebugEnabled">
            <summary>
            Determines if messages of priority "debug" will be logged.
            </summary>
            <value>True if "debug" messages will be logged.</value> 
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.Logging.ILogger.IsInfoEnabled">
            <summary>
            Determines if messages of priority "info" will be logged.
            </summary>
            <value>True if "info" messages will be logged.</value> 
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.Logging.ILogger.IsWarnEnabled">
            <summary>
            Determines if messages of priority "warn" will be logged.
            </summary>
            <value>True if "warn" messages will be logged.</value> 
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.Logging.ILogger.IsErrorEnabled">
            <summary>
            Determines if messages of priority "error" will be logged.
            </summary>
            <value>True if "error" messages will be logged.</value> 
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.Logging.ILogger.IsFatalEnabled">
            <summary>
            Determines if messages of priority "fatal" will be logged.
            </summary>
            <value>True if "fatal" messages will be logged.</value> 
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.Logging.ILogger.IsFatalErrorEnabled">
            <summary>
            Determines if messages of priority "fatalError" will be logged.
            </summary>
            <value>True if "fatalError" messages will be logged.</value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.Logging.IExtendedLogger.GlobalProperties">
            <summary>
            Exposes the Global Context of the extended logger. 
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.Logging.IExtendedLogger.ThreadProperties">
            <summary>
            Exposes the Thread Context of the extended logger.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.Logging.IExtendedLogger.ThreadStacks">
            <summary>
            Exposes the Thread Stack of the extended logger.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.Logging.LoggerLevel">
            <summary>
            Supporting Logger levels.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Castle.Core.Logging.LoggerLevel.Off">
            <summary>
            Logging will be off
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Castle.Core.Logging.LoggerLevel.Fatal">
            <summary>
            Fatal logging level
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Castle.Core.Logging.LoggerLevel.Error">
            <summary>
            Error logging level
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Castle.Core.Logging.LoggerLevel.Warn">
            <summary>
            Warn logging level
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Castle.Core.Logging.LoggerLevel.Info">
            <summary>
            Info logging level
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Castle.Core.Logging.LoggerLevel.Debug">
            <summary>
            Debug logging level
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.Logging.ConsoleLogger">
            <summary>
            The Logger sending everything to the standard output streams.
            This is mainly for the cases when you have a utility that
            does not have a logger to supply.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.Logging.LevelFilteredLogger">
            <summary>
            The Level Filtered Logger class.  This is a base clase which
            provides a LogLevel attribute and reroutes all functions into
            one Log method.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.LevelFilteredLogger.#ctor">
            <summary>
            Creates a new <c>LevelFilteredLogger</c>.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.LevelFilteredLogger.InitializeLifetimeService">
            <summary>
            Keep the instance alive in a remoting scenario
            </summary>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.LevelFilteredLogger.Debug(System.String)">
            <summary>
            Logs a debug message.
            </summary>
            <param name="message">The message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.LevelFilteredLogger.Debug(System.String,System.Exception)">
            <summary>
            Logs a debug message. 
            </summary>
            <param name="exception">The exception to log</param>
            <param name="message">The message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.LevelFilteredLogger.DebugFormat(System.String,System.Object[])">
            <summary>
            Logs a debug message.
            </summary>
            <param name="format">Format string for the message to log</param>
            <param name="args">Format arguments for the message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.LevelFilteredLogger.DebugFormat(System.Exception,System.String,System.Object[])">
            <summary>
            Logs a debug message.
            </summary>
            <param name="exception">The exception to log</param>
            <param name="format">Format string for the message to log</param>
            <param name="args">Format arguments for the message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.LevelFilteredLogger.DebugFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            Logs a debug message.
            </summary>
            <param name="formatProvider">The format provider to use</param>
            <param name="format">Format string for the message to log</param>
            <param name="args">Format arguments for the message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.LevelFilteredLogger.DebugFormat(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            Logs a debug message.
            </summary>
            <param name="exception">The exception to log</param>
            <param name="formatProvider">The format provider to use</param>
            <param name="format">Format string for the message to log</param>
            <param name="args">Format arguments for the message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.LevelFilteredLogger.Debug(System.String,System.Object[])">
            <summary>
            Logs a debug message.
            </summary>
            <param name="format">Message format</param>
            <param name="args">Array of objects to write using format</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.LevelFilteredLogger.Info(System.String)">
            <summary>
            Logs an info message.
            </summary>
            <param name="message">The message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.LevelFilteredLogger.Info(System.String,System.Exception)">
            <summary>
            Logs an info message. 
            </summary>
            <param name="exception">The exception to log</param>
            <param name="message">The message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.LevelFilteredLogger.InfoFormat(System.String,System.Object[])">
            <summary>
            Logs an info message.
            </summary>
            <param name="format">Format string for the message to log</param>
            <param name="args">Format arguments for the message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.LevelFilteredLogger.InfoFormat(System.Exception,System.String,System.Object[])">
            <summary>
            Logs an info message.
            </summary>
            <param name="exception">The exception to log</param>
            <param name="format">Format string for the message to log</param>
            <param name="args">Format arguments for the message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.LevelFilteredLogger.InfoFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            Logs an info message.
            </summary>
            <param name="formatProvider">The format provider to use</param>
            <param name="format">Format string for the message to log</param>
            <param name="args">Format arguments for the message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.LevelFilteredLogger.InfoFormat(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            Logs an info message.
            </summary>
            <param name="exception">The exception to log</param>
            <param name="formatProvider">The format provider to use</param>
            <param name="format">Format string for the message to log</param>
            <param name="args">Format arguments for the message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.LevelFilteredLogger.Info(System.String,System.Object[])">
            <summary>
            Logs an info message.
            </summary>
            <param name="format">Message format</param>
            <param name="args">Array of objects to write using format</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.LevelFilteredLogger.Warn(System.String)">
            <summary>
            Logs a warn message.
            </summary>
            <param name="message">The message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.LevelFilteredLogger.Warn(System.String,System.Exception)">
            <summary>
            Logs a warn message. 
            </summary>
            <param name="exception">The exception to log</param>
            <param name="message">The message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.LevelFilteredLogger.WarnFormat(System.String,System.Object[])">
            <summary>
            Logs a warn message.
            </summary>
            <param name="format">Format string for the message to log</param>
            <param name="args">Format arguments for the message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.LevelFilteredLogger.WarnFormat(System.Exception,System.String,System.Object[])">
            <summary>
            Logs a warn message.
            </summary>
            <param name="exception">The exception to log</param>
            <param name="format">Format string for the message to log</param>
            <param name="args">Format arguments for the message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.LevelFilteredLogger.WarnFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            Logs a warn message.
            </summary>
            <param name="formatProvider">The format provider to use</param>
            <param name="format">Format string for the message to log</param>
            <param name="args">Format arguments for the message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.LevelFilteredLogger.WarnFormat(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            Logs a warn message.
            </summary>
            <param name="exception">The exception to log</param>
            <param name="formatProvider">The format provider to use</param>
            <param name="format">Format string for the message to log</param>
            <param name="args">Format arguments for the message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.LevelFilteredLogger.Warn(System.String,System.Object[])">
            <summary>
            Logs a warn message.
            </summary>
            <param name="format">Message format</param>
            <param name="args">Array of objects to write using format</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.LevelFilteredLogger.Error(System.String)">
            <summary>
            Logs an error message.
            </summary>
            <param name="message">The message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.LevelFilteredLogger.Error(System.String,System.Exception)">
            <summary>
            Logs an error message. 
            </summary>
            <param name="exception">The exception to log</param>
            <param name="message">The message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.LevelFilteredLogger.ErrorFormat(System.String,System.Object[])">
            <summary>
            Logs an error message.
            </summary>
            <param name="format">Format string for the message to log</param>
            <param name="args">Format arguments for the message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.LevelFilteredLogger.ErrorFormat(System.Exception,System.String,System.Object[])">
            <summary>
            Logs an error message.
            </summary>
            <param name="exception">The exception to log</param>
            <param name="format">Format string for the message to log</param>
            <param name="args">Format arguments for the message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.LevelFilteredLogger.ErrorFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            Logs an error message.
            </summary>
            <param name="formatProvider">The format provider to use</param>
            <param name="format">Format string for the message to log</param>
            <param name="args">Format arguments for the message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.LevelFilteredLogger.ErrorFormat(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            Logs an error message.
            </summary>
            <param name="exception">The exception to log</param>
            <param name="formatProvider">The format provider to use</param>
            <param name="format">Format string for the message to log</param>
            <param name="args">Format arguments for the message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.LevelFilteredLogger.Error(System.String,System.Object[])">
            <summary>
            Logs an error message.
            </summary>
            <param name="format">Message format</param>
            <param name="args">Array of objects to write using format</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.LevelFilteredLogger.Fatal(System.String)">
            <summary>
            Logs a fatal message.
            </summary>
            <param name="message">The message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.LevelFilteredLogger.Fatal(System.String,System.Exception)">
            <summary>
            Logs a fatal message. 
            </summary>
            <param name="exception">The exception to log</param>
            <param name="message">The message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.LevelFilteredLogger.FatalFormat(System.String,System.Object[])">
            <summary>
            Logs a fatal message.
            </summary>
            <param name="format">Format string for the message to log</param>
            <param name="args">Format arguments for the message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.LevelFilteredLogger.FatalFormat(System.Exception,System.String,System.Object[])">
            <summary>
            Logs a fatal message.
            </summary>
            <param name="exception">The exception to log</param>
            <param name="format">Format string for the message to log</param>
            <param name="args">Format arguments for the message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.LevelFilteredLogger.FatalFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            Logs a fatal message.
            </summary>
            <param name="formatProvider">The format provider to use</param>
            <param name="format">Format string for the message to log</param>
            <param name="args">Format arguments for the message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.LevelFilteredLogger.FatalFormat(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            Logs a fatal message.
            </summary>
            <param name="exception">The exception to log</param>
            <param name="formatProvider">The format provider to use</param>
            <param name="format">Format string for the message to log</param>
            <param name="args">Format arguments for the message to log</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.LevelFilteredLogger.Fatal(System.String,System.Object[])">
            <summary>
            Logs a fatal message.
            </summary>
            <param name="format">Message format</param>
            <param name="args">Array of objects to write using format</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.LevelFilteredLogger.FatalError(System.String)">
            <summary>
            Logs a fatal error message.
            </summary>
            <param name="message">The Message</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.LevelFilteredLogger.FatalError(System.String,System.Exception)">
            <summary>
            Logs a fatal error message.
            </summary>
            <param name="message">The Message</param>
            <param name="exception">The Exception</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.LevelFilteredLogger.FatalError(System.String,System.Object[])">
            <summary>
            Logs a fatal error message.
            </summary>
            <param name="format">Message format</param>
            <param name="args">Array of objects to write using format</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.LevelFilteredLogger.Log(GigaSpaces.Core.Internal.Castle.Core.Logging.LoggerLevel,System.String,System.String,System.Exception)">
            <summary>
            Implementors output the log content by implementing this method only.
            Note that exception can be null
            </summary>
            <param name="loggerLevel"></param>
            <param name="loggerName"></param>
            <param name="message"></param>
            <param name="exception"></param>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.Logging.LevelFilteredLogger.Level">
            <value>
            The <c>LoggerLevel</c> that this logger
            will be using. Defaults to <c>LoggerLevel.Off</c>
            </value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.Logging.LevelFilteredLogger.Name">
            <value>
            The name that this logger will be using. 
            Defaults to <c>String.Empty</c>
            </value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.Logging.LevelFilteredLogger.IsDebugEnabled">
            <summary>
            Determines if messages of priority "debug" will be logged.
            </summary>
            <value><c>true</c> if log level flags include the <see cref="F:GigaSpaces.Core.Internal.Castle.Core.Logging.LoggerLevel.Debug"/> bit</value> 
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.Logging.LevelFilteredLogger.IsInfoEnabled">
            <summary>
            Determines if messages of priority "info" will be logged.
            </summary>
            <value><c>true</c> if log level flags include the <see cref="F:GigaSpaces.Core.Internal.Castle.Core.Logging.LoggerLevel.Info"/> bit</value> 
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.Logging.LevelFilteredLogger.IsWarnEnabled">
            <summary>
            Determines if messages of priority "warn" will be logged.
            </summary>
            <value><c>true</c> if log level flags include the <see cref="F:GigaSpaces.Core.Internal.Castle.Core.Logging.LoggerLevel.Warn"/> bit</value> 
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.Logging.LevelFilteredLogger.IsErrorEnabled">
            <summary>
            Determines if messages of priority "error" will be logged.
            </summary>
            <value><c>true</c> if log level flags include the <see cref="F:GigaSpaces.Core.Internal.Castle.Core.Logging.LoggerLevel.Error"/> bit</value> 
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.Logging.LevelFilteredLogger.IsFatalEnabled">
            <summary>
            Determines if messages of priority "fatal" will be logged.
            </summary>
            <value><c>true</c> if log level flags include the <see cref="F:GigaSpaces.Core.Internal.Castle.Core.Logging.LoggerLevel.Fatal"/> bit</value> 
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.Logging.LevelFilteredLogger.IsFatalErrorEnabled">
            <summary>
            Determines if messages of priority "fatal" will be logged.
            </summary>
            <value><c>true</c> if log level flags include the <see cref="F:GigaSpaces.Core.Internal.Castle.Core.Logging.LoggerLevel.Fatal"/> bit</value> 
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.ConsoleLogger.#ctor">
            <summary>
            Creates a new ConsoleLogger with the <c>Level</c>
            set to <c>LoggerLevel.Debug</c> and the <c>Name</c>
            set to <c>String.Empty</c>.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.ConsoleLogger.#ctor(GigaSpaces.Core.Internal.Castle.Core.Logging.LoggerLevel)">
            <summary>
            Creates a new ConsoleLogger with the <c>Name</c>
            set to <c>String.Empty</c>.
            </summary>
            <param name="logLevel">The logs Level.</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.ConsoleLogger.#ctor(System.String)">
            <summary>
            Creates a new ConsoleLogger with the <c>Level</c>
            set to <c>LoggerLevel.Debug</c>.
            </summary>
            <param name="name">The logs Name.</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.ConsoleLogger.#ctor(System.String,GigaSpaces.Core.Internal.Castle.Core.Logging.LoggerLevel)">
            <summary>
            Creates a new ConsoleLogger.
            </summary>
            <param name="name">The logs Name.</param>
            <param name="logLevel">The logs Level.</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.ConsoleLogger.Log(GigaSpaces.Core.Internal.Castle.Core.Logging.LoggerLevel,System.String,System.String,System.Exception)">
            <summary>
            A Common method to log.
            </summary>
            <param name="loggerLevel">The level of logging</param>
            <param name="loggerName">The name of the logger</param>
            <param name="message">The Message</param>
            <param name="exception">The Exception</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.ConsoleLogger.CreateChildLogger(System.String)">
            <summary>
            Returns a new <c>ConsoleLogger</c> with the name
            added after this loggers name, with a dot in between.
            </summary>
            <param name="loggerName">The added hierarchical name.</param>
            <returns>A new <c>ConsoleLogger</c>.</returns> 
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.Logging.DiagnosticsLogger">
            <summary>
            The Logger using standart Diagnostics namespace.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.DiagnosticsLogger.#ctor(System.String)">
            <summary>
            Creates a logger based on <see cref="T:System.Diagnostics.EventLog"/>.
            </summary>
            <param name="logName"><see cref="P:System.Diagnostics.EventLog.Log"/></param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.DiagnosticsLogger.#ctor(System.String,System.String)">
            <summary>
            Creates a logger based on <see cref="T:System.Diagnostics.EventLog"/>.
            </summary>
            <param name="logName"><see cref="P:System.Diagnostics.EventLog.Log"/></param>
            <param name="source"><see cref="P:System.Diagnostics.EventLog.Source"/></param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.DiagnosticsLogger.#ctor(System.String,System.String,System.String)">
            <summary>
            Creates a logger based on <see cref="T:System.Diagnostics.EventLog"/>.
            </summary>
            <param name="logName"><see cref="P:System.Diagnostics.EventLog.Log"/></param>
            <param name="machineName"><see cref="P:System.Diagnostics.EventLog.MachineName"/></param>
            <param name="source"><see cref="P:System.Diagnostics.EventLog.Source"/></param>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.Logging.NullLogger">
            <summary>
            The Null Logger class.  This is useful for implementations where you need
            to provide a logger to a utility class, but do not want any output from it.
            It also helps when you have a utility that does not have a logger to supply.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.NullLogger.#ctor">
            <summary>
            Creates a new <c>NullLogger</c>.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.NullLogger.Debug(System.String)">
            <summary>
            No-op.
            </summary>
            <param name="message">Ignored</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.NullLogger.Debug(System.String,System.Exception)">
            <summary>
            No-op. 
            </summary>
            <param name="exception">Ignored</param>
            <param name="message">Ignored</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.NullLogger.Debug(System.String,System.Object[])">
            <summary>
            No-op.
            </summary>
            <param name="format">Ignored</param>
            <param name="args">Ignored</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.NullLogger.DebugFormat(System.String,System.Object[])">
            <summary>
            No-op.
            </summary>
            <param name="format">Ignored</param>
            <param name="args">Ignored</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.NullLogger.DebugFormat(System.Exception,System.String,System.Object[])">
            <summary>
            No-op.
            </summary>
            <param name="exception">Ignored</param>
            <param name="format">Ignored</param>
            <param name="args">Ignored</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.NullLogger.DebugFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            No-op.
            </summary>
            <param name="formatProvider">Ignored</param>
            <param name="format">Ignored</param>
            <param name="args">Ignored</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.NullLogger.DebugFormat(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            No-op.
            </summary>
            <param name="exception">Ignored</param>
            <param name="formatProvider">Ignored</param>
            <param name="format">Ignored</param>
            <param name="args">Ignored</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.NullLogger.Info(System.String)">
            <summary>
            No-op.
            </summary>
            <param name="message">Ignored</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.NullLogger.Info(System.String,System.Exception)">
            <summary>
            No-op. 
            </summary>
            <param name="exception">Ignored</param>
            <param name="message">Ignored</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.NullLogger.Info(System.String,System.Object[])">
            <summary>
            No-op.
            </summary>
            <param name="format">Ignored</param>
            <param name="args">Ignored</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.NullLogger.InfoFormat(System.String,System.Object[])">
            <summary>
            No-op.
            </summary>
            <param name="format">Ignored</param>
            <param name="args">Ignored</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.NullLogger.InfoFormat(System.Exception,System.String,System.Object[])">
            <summary>
            No-op.
            </summary>
            <param name="exception">Ignored</param>
            <param name="format">Ignored</param>
            <param name="args">Ignored</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.NullLogger.InfoFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            No-op.
            </summary>
            <param name="formatProvider">Ignored</param>
            <param name="format">Ignored</param>
            <param name="args">Ignored</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.NullLogger.InfoFormat(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            No-op.
            </summary>
            <param name="exception">Ignored</param>
            <param name="formatProvider">Ignored</param>
            <param name="format">Ignored</param>
            <param name="args">Ignored</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.NullLogger.Warn(System.String)">
            <summary>
            No-op.
            </summary>
            <param name="message">Ignored</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.NullLogger.Warn(System.String,System.Exception)">
            <summary>
            No-op. 
            </summary>
            <param name="exception">Ignored</param>
            <param name="message">Ignored</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.NullLogger.Warn(System.String,System.Object[])">
            <summary>
            No-op.
            </summary>
            <param name="format">Ignored</param>
            <param name="args">Ignored</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.NullLogger.WarnFormat(System.String,System.Object[])">
            <summary>
            No-op.
            </summary>
            <param name="format">Ignored</param>
            <param name="args">Ignored</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.NullLogger.WarnFormat(System.Exception,System.String,System.Object[])">
            <summary>
            No-op.
            </summary>
            <param name="exception">Ignored</param>
            <param name="format">Ignored</param>
            <param name="args">Ignored</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.NullLogger.WarnFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            No-op.
            </summary>
            <param name="formatProvider">Ignored</param>
            <param name="format">Ignored</param>
            <param name="args">Ignored</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.NullLogger.WarnFormat(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            No-op.
            </summary>
            <param name="exception">Ignored</param>
            <param name="formatProvider">Ignored</param>
            <param name="format">Ignored</param>
            <param name="args">Ignored</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.NullLogger.Error(System.String)">
            <summary>
            No-op.
            </summary>
            <param name="message">Ignored</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.NullLogger.Error(System.String,System.Exception)">
            <summary>
            No-op. 
            </summary>
            <param name="exception">Ignored</param>
            <param name="message">Ignored</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.NullLogger.Error(System.String,System.Object[])">
            <summary>
            No-op.
            </summary>
            <param name="format">Ignored</param>
            <param name="args">Ignored</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.NullLogger.ErrorFormat(System.String,System.Object[])">
            <summary>
            No-op.
            </summary>
            <param name="format">Ignored</param>
            <param name="args">Ignored</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.NullLogger.ErrorFormat(System.Exception,System.String,System.Object[])">
            <summary>
            No-op.
            </summary>
            <param name="exception">Ignored</param>
            <param name="format">Ignored</param>
            <param name="args">Ignored</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.NullLogger.ErrorFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            No-op.
            </summary>
            <param name="formatProvider">Ignored</param>
            <param name="format">Ignored</param>
            <param name="args">Ignored</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.NullLogger.ErrorFormat(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            No-op.
            </summary>
            <param name="exception">Ignored</param>
            <param name="formatProvider">Ignored</param>
            <param name="format">Ignored</param>
            <param name="args">Ignored</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.NullLogger.Fatal(System.String)">
            <summary>
            No-op.
            </summary>
            <param name="message">Ignored</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.NullLogger.Fatal(System.String,System.Exception)">
            <summary>
            No-op.
            </summary>
            <param name="exception">Ignored</param>
            <param name="message">Ignored</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.NullLogger.Fatal(System.String,System.Object[])">
            <summary>
            No-op.
            </summary>
            <param name="format">Ignored</param>
            <param name="args">Ignored</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.NullLogger.FatalFormat(System.String,System.Object[])">
            <summary>
            No-op.
            </summary>
            <param name="format">Ignored</param>
            <param name="args">Ignored</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.NullLogger.FatalFormat(System.Exception,System.String,System.Object[])">
            <summary>
            No-op.
            </summary>
            <param name="exception">Ignored</param>
            <param name="format">Ignored</param>
            <param name="args">Ignored</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.NullLogger.FatalFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            No-op.
            </summary>
            <param name="formatProvider">Ignored</param>
            <param name="format">Ignored</param>
            <param name="args">Ignored</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.NullLogger.FatalFormat(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            No-op.
            </summary>
            <param name="exception">Ignored</param>
            <param name="formatProvider">Ignored</param>
            <param name="format">Ignored</param>
            <param name="args">Ignored</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.NullLogger.FatalError(System.String)">
            <summary>
            No-op.
            </summary>
            <param name="message">Ignored</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.NullLogger.FatalError(System.String,System.Exception)">
            <summary>
            No-op.
            </summary>
            <param name="message">Ignored</param>
            <param name="exception">Ignored</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.NullLogger.FatalError(System.String,System.Object[])">
            <summary>
            No-op.
            </summary>
            <param name="format">Ignored</param>
            <param name="args">Ignored</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.NullLogger.CreateChildLogger(System.String)">
            <summary>
            Returns this <c>NullLogger</c>.
            </summary>
            <param name="loggerName">Ignored</param>
            <returns>This ILogger instance.</returns> 
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.Logging.NullLogger.IsDebugEnabled">
            <summary>
            No-op.
            </summary>
            <value>false</value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.Logging.NullLogger.IsInfoEnabled">
            <summary>
            No-op.
            </summary>
            <value>false</value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.Logging.NullLogger.IsWarnEnabled">
            <summary>
            No-op.
            </summary>
            <value>false</value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.Logging.NullLogger.IsErrorEnabled">
            <summary>
            No-op.
            </summary>
            <value>false</value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.Logging.NullLogger.IsFatalEnabled">
            <summary>
            No-op.
            </summary>
            <value>false</value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.Logging.NullLogger.IsFatalErrorEnabled">
            <summary>
            No-op.
            </summary>
            <value>false</value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.Logging.NullLogger.GlobalProperties">
            <summary>
            Returns empty context properties.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.Logging.NullLogger.ThreadProperties">
            <summary>
            Returns empty context properties.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.Logging.NullLogger.ThreadStacks">
            <summary>
            Returns empty context stacks.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.Logging.StreamLogger">
            <summary>
            The Stream Logger class.  This class can stream log information
            to any stream, it is suitable for storing a log file to disk,
            or to a <c>MemoryStream</c> for testing your components.
            </summary>
            <remarks>
            This logger is not thread safe.
            </remarks>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.StreamLogger.#ctor(System.String,System.IO.Stream)">
            <summary>
            Creates a new <c>StreamLogger</c> with default encoding 
            and buffer size. Initial Level is set to Debug.
            </summary>
            <param name="name">
            The name of the log.
            </param>
            <param name="stream">
            The stream that will be used for logging,
            seeking while the logger is alive 
            </param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.StreamLogger.#ctor(System.String,System.IO.Stream,System.Text.Encoding)">
            <summary>
            Creates a new <c>StreamLogger</c> with default buffer size.
            Initial Level is set to Debug.
            </summary>
            <param name="name">
            The name of the log.
            </param>
            <param name="stream">
            The stream that will be used for logging,
            seeking while the logger is alive 
            </param>
            <param name="encoding">
            The encoding that will be used for this stream.
            <see cref="T:System.IO.StreamWriter"/>
            </param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.StreamLogger.#ctor(System.String,System.IO.Stream,System.Text.Encoding,System.Int32)">
            <summary>
            Creates a new <c>StreamLogger</c>. 
            Initial Level is set to Debug.
            </summary>
            <param name="name">
            The name of the log.
            </param>
            <param name="stream">
            The stream that will be used for logging,
            seeking while the logger is alive 
            </param>
            <param name="encoding">
            The encoding that will be used for this stream.
            <see cref="T:System.IO.StreamWriter"/>
            </param>
            <param name="bufferSize">
            The buffer size that will be used for this stream.
            <see cref="T:System.IO.StreamWriter"/>
            </param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.StreamLogger.#ctor(System.String,System.IO.StreamWriter)">
            <summary>
            Creates a new <c>StreamLogger</c> with 
            Debug as default Level.
            </summary>
            <param name="name">The name of the log.</param>
            <param name="writer">The <c>StreamWriter</c> the log will write to.</param>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.Logging.TraceLogger">
            <summary>
            The TraceLogger sends all logging to the System.Diagnostics.TraceSource
            built into the .net framework. 
            </summary>
            <remarks>
            Logging can be configured in the system.diagnostics configuration 
            section. 
            
            If logger doesn't find a source name with a full match it will
            use source names which match the namespace partially. For example you can
            configure from all castle components by adding a source name with the
            name "Castle". 
            
            If no portion of the namespace matches the source named "Default" will
            be used.
            </remarks>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.TraceLogger.#ctor(System.String)">
            <summary>
            Build a new trace logger based on the named TraceSource
            </summary>
            <param name="name">The name used to locate the best TraceSource. In most cases comes from the using type's fullname.</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.TraceLogger.#ctor(System.String,GigaSpaces.Core.Internal.Castle.Core.Logging.LoggerLevel)">
            <summary>
            Build a new trace logger based on the named TraceSource
            </summary>
            <param name="name">The name used to locate the best TraceSource. In most cases comes from the using type's fullname.</param>
            <param name="level">The default logging level at which this source should write messages. In almost all cases this
            default value will be overridden in the config file. </param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Logging.TraceLogger.CreateChildLogger(System.String)">
            <summary>
            Create a new child logger.
            The name of the child logger is [current-loggers-name].[passed-in-name]
            </summary>
            <param name="loggerName">The Subname of this logger.</param>
            <returns>The New ILogger instance.</returns> 
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.LifestyleType">
            <summary>
            Enumeration used to mark the component's lifestyle.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Castle.Core.LifestyleType.Undefined">
            <summary>
            No lifestyle specified.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Castle.Core.LifestyleType.Singleton">
            <summary>
            Singleton components are instantiated once, and shared
            between all clients.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Castle.Core.LifestyleType.Thread">
            <summary>
            Thread components have a unique instance per thread.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Castle.Core.LifestyleType.Transient">
            <summary>
            Transient components are created on demand.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Castle.Core.LifestyleType.Pooled">
            <summary>
            Optimization of transient components that keeps
            instance in a pool instead of always creating them.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Castle.Core.LifestyleType.Custom">
            <summary>
            Any other logic to create/release components.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Castle.Core.LifestyleType.PerWebRequest">
            <summary>
            PerWebRequest components are created once per Http Request
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.PropertiesInspectionBehavior">
            <summary>
            
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.ComponentModel">
            <summary>
            Represents the collection of information and
            meta information collected about a component.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Castle.Core.ComponentModel.name">
            <summary>Name (key) of the component</summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Castle.Core.ComponentModel.service">
            <summary>Service exposed</summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Castle.Core.ComponentModel.implementation">
            <summary>Implementation for the service</summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Castle.Core.ComponentModel.extended">
            <summary>Extended properties</summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Castle.Core.ComponentModel.lifestyleType">
            <summary>Lifestyle for the component</summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Castle.Core.ComponentModel.customLifestyle">
            <summary>Custom lifestyle, if any</summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Castle.Core.ComponentModel.customComponentActivator">
            <summary>Custom activator, if any</summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Castle.Core.ComponentModel.dependencies">
            <summary>Dependencies the kernel must resolve</summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Castle.Core.ComponentModel.constructors">
            <summary>All available constructors</summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Castle.Core.ComponentModel.properties">
            <summary>All potential properties that can be setted by the kernel</summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Castle.Core.ComponentModel.lifecycleSteps">
            <summary>Steps of lifecycle</summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Castle.Core.ComponentModel.parameters">
            <summary>External parameters</summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Castle.Core.ComponentModel.configuration">
            <summary>Configuration node associated</summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Castle.Core.ComponentModel.interceptors">
            <summary>Interceptors associated</summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Castle.Core.ComponentModel.customDependencies">
            <summary>/// Custom dependencies/// </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.ComponentModel.#ctor(System.String,System.Type,System.Type)">
            <summary>
            Constructs a ComponentModel
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.ComponentModel.Requires(System.Predicate{GigaSpaces.Core.Internal.Castle.Core.PropertySet}[])">
            <summary>
            Requires the selected property dependencies.
            </summary>
            <param name="selectors">The property selector.</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.ComponentModel.Requires``1">
            <summary>
            Requires the property dependencies of type <typeparamref name="D"/>.
            </summary>
            <typeparam name="D">The dependency type.</typeparam>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.ComponentModel.Name">
            <summary>
            Sets or returns the component key
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.ComponentModel.Service">
            <summary>
            Gets or sets the service exposed.
            </summary>
            <value>The service.</value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.ComponentModel.Implementation">
            <summary>
            Gets or sets the component implementation.
            </summary>
            <value>The implementation.</value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.ComponentModel.RequiresGenericArguments">
            <summary>
            Gets or sets a value indicating whether the component requires generic arguments.
            </summary>
            <value>
            <c>true</c> if generic arguments are required; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.ComponentModel.ExtendedProperties">
            <summary>
            Gets or sets the extended properties.
            </summary>
            <value>The extended properties.</value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.ComponentModel.Constructors">
            <summary>
            Gets the constructors candidates.
            </summary>
            <value>The constructors.</value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.ComponentModel.Properties">
            <summary>
            Gets the properties set.
            </summary>
            <value>The properties.</value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.ComponentModel.Configuration">
            <summary>
            Gets or sets the configuration.
            </summary>
            <value>The configuration.</value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.ComponentModel.LifecycleSteps">
            <summary>
            Gets the lifecycle steps.
            </summary>
            <value>The lifecycle steps.</value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.ComponentModel.LifestyleType">
            <summary>
            Gets or sets the lifestyle type.
            </summary>
            <value>The type of the lifestyle.</value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.ComponentModel.InspectionBehavior">
            <summary>
            Gets or sets the strategy for
            inspecting public properties 
            on the components
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.ComponentModel.CustomLifestyle">
            <summary>
            Gets or sets the custom lifestyle.
            </summary>
            <value>The custom lifestyle.</value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.ComponentModel.CustomComponentActivator">
            <summary>
            Gets or sets the custom component activator.
            </summary>
            <value>The custom component activator.</value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.ComponentModel.Interceptors">
            <summary>
            Gets the interceptors.
            </summary>
            <value>The interceptors.</value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.ComponentModel.Parameters">
            <summary>
            Gets the parameter collection.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.ComponentModel.Dependencies">
            <summary>
            Dependencies are kept within constructors and
            properties. Others dependencies must be 
            registered here, so the kernel (as a matter 
            of fact the handler) can check them
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.ComponentModel.CustomDependencies">
            <summary>
            Gets the custom dependencies.
            </summary>
            <value>The custom dependencies.</value>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.Configuration.AbstractConfiguration">
            <summary>
            This is an abstract <see cref="T:GigaSpaces.Core.Internal.Castle.Core.Configuration.IConfiguration"/> implementation
            that deals with methods that can be abstracted away
            from underlying implementations.
            </summary>
            <remarks>
            <para><b>AbstractConfiguration</b> makes easier to implementers 
            to create a new version of <see cref="T:GigaSpaces.Core.Internal.Castle.Core.Configuration.IConfiguration"/></para>
            </remarks>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.Configuration.IConfiguration">
            <summary>
            <see cref="T:GigaSpaces.Core.Internal.Castle.Core.Configuration.IConfiguration"/> is a interface encapsulating a configuration node
            used to retrieve configuration values.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Configuration.IConfiguration.GetValue(System.Type,System.Object)">
            <summary>
            Gets the value of the node and converts it 
            into specified <see cref="T:System.Type"/>.
            </summary>
            <param name="type">The <see cref="T:System.Type"/></param>
            <param name="defaultValue">
            The Default value returned if the convertion fails.
            </param>
            <returns>The Value converted into the specified type.</returns>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.Configuration.IConfiguration.Name">
            <summary>
            Gets the name of the node.
            </summary>
            <value>
            The Name of the node.
            </value> 
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.Configuration.IConfiguration.Value">
            <summary>
            Gets the value of the node.
            </summary>
            <value>
            The Value of the node.
            </value> 
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.Configuration.IConfiguration.Children">
            <summary>
            Gets an <see cref="T:GigaSpaces.Core.Internal.Castle.Core.Configuration.ConfigurationCollection"/> of <see cref="T:GigaSpaces.Core.Internal.Castle.Core.Configuration.IConfiguration"/>
            elements containing all node children.
            </summary>
            <value>The Collection of child nodes.</value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.Configuration.IConfiguration.Attributes">
            <summary>
            Gets an <see cref="T:System.Collections.IDictionary"/> of the configuration attributes.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Configuration.AbstractConfiguration.GetValue(System.Type,System.Object)">
            <summary>
            Gets the value of the node and converts it
            into specified <see cref="T:System.Type"/>.
            </summary>
            <param name="type">The <see cref="T:System.Type"/></param>
            <param name="defaultValue">
            The Default value returned if the convertion fails.
            </param>
            <returns>The Value converted into the specified type.</returns>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.Configuration.AbstractConfiguration.Name">
            <summary>
            Gets the name of the <see cref="T:GigaSpaces.Core.Internal.Castle.Core.Configuration.IConfiguration"/>.
            </summary>
            <value>
            The Name of the <see cref="T:GigaSpaces.Core.Internal.Castle.Core.Configuration.IConfiguration"/>.
            </value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.Configuration.AbstractConfiguration.Value">
            <summary>
            Gets the value of <see cref="T:GigaSpaces.Core.Internal.Castle.Core.Configuration.IConfiguration"/>.
            </summary>
            <value>
            The Value of the <see cref="T:GigaSpaces.Core.Internal.Castle.Core.Configuration.IConfiguration"/>.
            </value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.Configuration.AbstractConfiguration.Children">
            <summary>
            Gets all child nodes.
            </summary>
            <value>The <see cref="T:GigaSpaces.Core.Internal.Castle.Core.Configuration.ConfigurationCollection"/> of child nodes.</value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.Configuration.AbstractConfiguration.Attributes">
            <summary>
            Gets node attributes.
            </summary>
            <value>
            All attributes of the node.
            </value>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.Configuration.ConfigurationCollection">
            <summary>
            A collection of <see cref="T:GigaSpaces.Core.Internal.Castle.Core.Configuration.IConfiguration"/> objects.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Configuration.ConfigurationCollection.#ctor">
            <summary>
            Creates a new instance of <c>ConfigurationCollection</c>.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Configuration.ConfigurationCollection.#ctor(System.Collections.Generic.IEnumerable{GigaSpaces.Core.Internal.Castle.Core.Configuration.IConfiguration})">
            <summary>
            Creates a new instance of <c>ConfigurationCollection</c>.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.Configuration.MutableConfiguration">
            <summary>
            Summary description for MutableConfiguration.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Configuration.MutableConfiguration.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GigaSpaces.Core.Internal.Castle.Core.Configuration.MutableConfiguration"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.Configuration.MutableConfiguration.Value">
            <summary>
            Gets the value of <see cref="T:GigaSpaces.Core.Internal.Castle.Core.Configuration.IConfiguration"/>.
            </summary>
            <value>
            The Value of the <see cref="T:GigaSpaces.Core.Internal.Castle.Core.Configuration.IConfiguration"/>.
            </value>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.Configuration.Xml.XmlConfigurationDeserializer">
            <summary>
            Pendent
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Configuration.Xml.XmlConfigurationDeserializer.Deserialize(System.Xml.XmlNode)">
            <summary>
            Deserializes the specified node into an abstract representation of configuration.
            </summary>
            <param name="node">The node.</param>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Configuration.Xml.XmlConfigurationDeserializer.GetConfigValue(System.String)">
            <summary>
            If a config value is an empty string we return null, this is to keep
            backward compability with old code
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.ConstructorCandidate">
            <summary>
            Represents a constructor of the component 
            that the container can use to initialize it properly.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.ConstructorCandidate.#ctor(System.Reflection.ConstructorInfo,GigaSpaces.Core.Internal.Castle.Core.DependencyModel[])">
            <summary>
            Initializes a new instance of the <see cref="T:GigaSpaces.Core.Internal.Castle.Core.ConstructorCandidate"/> class.
            </summary>
            <param name="constructorInfo">The constructor info.</param>
            <param name="dependencies">The dependencies.</param>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.ConstructorCandidate.Constructor">
            <summary>
            Gets the ConstructorInfo (from reflection).
            </summary>
            <value>The constructor.</value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.ConstructorCandidate.Dependencies">
            <summary>
            Gets the dependencies this constructor candidate exposes.
            </summary>
            <value>The dependencies.</value>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.ConstructorCandidateCollection">
            <summary>
            Collection of <see cref="T:GigaSpaces.Core.Internal.Castle.Core.ConstructorCandidate"/>
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.ConstructorCandidateCollection.FewerArgumentsCandidate">
            <summary>
            Gets the fewer arguments candidate.
            </summary>
            <value>The fewer arguments candidate.</value>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.DependencyModel">
            <summary>
            Represents a dependency (other component or a 
            fixed value available through external configuration).
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.DependencyModel.#ctor(GigaSpaces.Core.Internal.Castle.Core.DependencyType,System.String,System.Type,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:GigaSpaces.Core.Internal.Castle.Core.DependencyModel"/> class.
            </summary>
            <param name="type">The type.</param>
            <param name="dependencyKey">The dependency key.</param>
            <param name="targetType">Type of the target.</param>
            <param name="isOptional">if set to <c>true</c> [is optional].</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.DependencyModel.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.DependencyModel.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable
            for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.DependencyModel.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>.</param>
            <returns>
            	<see langword="true"/> if the specified <see cref="T:System.Object"/> is equal to the
            current <see cref="T:System.Object"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.DependencyModel.DependencyType">
            <summary>
            Gets or sets the type of the dependency.
            </summary>
            <value>The type of the dependency.</value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.DependencyModel.DependencyKey">
            <summary>
            Gets or sets the dependency key.
            </summary>
            <value>The dependency key.</value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.DependencyModel.TargetType">
            <summary>
            Gets the type of the target.
            </summary>
            <value>The type of the target.</value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.DependencyModel.IsOptional">
            <summary>
            Gets or sets whether this dependency is optional.
            </summary>
            <value>
            	<c>true</c> if this dependency is optional; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.DependencyModelCollection">
            <summary>
            Collection of <see cref="T:GigaSpaces.Core.Internal.Castle.Core.DependencyModel"/>.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.DependencyModelCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GigaSpaces.Core.Internal.Castle.Core.DependencyModelCollection"/> class.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.DependencyModelCollection.#ctor(System.Collections.Generic.IEnumerable{GigaSpaces.Core.Internal.Castle.Core.DependencyModel})">
            <summary>
            Initializes a new instance of the <see cref="T:GigaSpaces.Core.Internal.Castle.Core.DependencyModelCollection"/> class.
            </summary>
            <param name="dependencies">The dependencies.</param>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.InterceptorReference">
            <summary>
            Represents an reference to a Interceptor component.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.InterceptorReference.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GigaSpaces.Core.Internal.Castle.Core.InterceptorReference"/> class.
            </summary>
            <param name="componentKey">The component key.</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.InterceptorReference.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:GigaSpaces.Core.Internal.Castle.Core.InterceptorReference"/> class.
            </summary>
            <param name="serviceType">Type of the service.</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.InterceptorReference.ForKey(System.String)">
            <summary>
            Gets an <see cref="T:GigaSpaces.Core.Internal.Castle.Core.InterceptorReference"/> for the component key.
            </summary>
            <param name="key">The component key.</param>
            <returns>The <see cref="T:GigaSpaces.Core.Internal.Castle.Core.InterceptorReference"/></returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.InterceptorReference.ForType(System.Type)">
            <summary>
            Gets an <see cref="T:GigaSpaces.Core.Internal.Castle.Core.InterceptorReference"/> for the service.
            </summary>
            <param name="service">The service.</param>
            <returns>The <see cref="T:GigaSpaces.Core.Internal.Castle.Core.InterceptorReference"/></returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.InterceptorReference.ForType``1">
            <summary>
            Gets an <see cref="T:GigaSpaces.Core.Internal.Castle.Core.InterceptorReference"/> for the service.
            </summary>
            <typeparam name="T">The service type.</typeparam>
            <returns>The <see cref="T:GigaSpaces.Core.Internal.Castle.Core.InterceptorReference"/></returns>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.InterceptorReference.ServiceType">
            <summary>
            Gets the type of the service.
            </summary>
            <value>The type of the service.</value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.InterceptorReference.ComponentKey">
            <summary>
            Gets the interceptor component key.
            </summary>
            <value>The component key.</value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.InterceptorReference.ReferenceType">
            <summary>
            Gets the type of the reference.
            </summary>
            <value>The type of the reference.</value>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.InterceptorReferenceCollection">
            <summary>
            Collection of <see cref="T:GigaSpaces.Core.Internal.Castle.Core.InterceptorReference"/>
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.InterceptorReferenceCollection.Add(GigaSpaces.Core.Internal.Castle.Core.InterceptorReference)">
            <summary>
            Adds the specified item.
            </summary>
            <param name="item">The interceptor.</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.InterceptorReferenceCollection.AddFirst(GigaSpaces.Core.Internal.Castle.Core.InterceptorReference)">
            <summary>
            Adds the specified interceptor as the first.
            </summary>
            <param name="item">The interceptor.</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.InterceptorReferenceCollection.AddLast(GigaSpaces.Core.Internal.Castle.Core.InterceptorReference)">
            <summary>
            Adds the specified interceptor as the last.
            </summary>
            <param name="item">The interceptor.</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.InterceptorReferenceCollection.Insert(System.Int32,GigaSpaces.Core.Internal.Castle.Core.InterceptorReference)">
            <summary>
            Inserts the specified interceptor at the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="item">The interceptor.</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.InterceptorReferenceCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            When implemented by a class, copies the elements of
            the <see cref="T:System.Collections.ICollection"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="index">The zero-based index in <paramref name="array"/> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="array"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException">
            	<para>
            		<paramref name="array"/> is multidimensional.</para>
            	<para>-or-</para>
            	<para>
            		<paramref name="index"/> is equal to or greater than the length of <paramref name="array"/>.</para>
            	<para>-or-</para>
            	<para>The number of elements in the source <see cref="T:System.Collections.ICollection"/> is greater than the available space from <paramref name="index"/> to the end of the destination <paramref name="array"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException">The type of the source <see cref="T:System.Collections.ICollection"/> cannot be cast automatically to the type of the destination <paramref name="array"/>.</exception>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.InterceptorReferenceCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/>
            that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.InterceptorReferenceCollection.AddIfNotInCollection(GigaSpaces.Core.Internal.Castle.Core.InterceptorReference)">
            <summary>
            Adds the interceptor to the end of the interceptors list if it does not exist already.
            </summary>
            <param name="interceptorReference">The interceptor reference.</param>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.InterceptorReferenceCollection.HasInterceptors">
            <summary>
            Gets a value indicating whether this instance has interceptors.
            </summary>
            <value>
            	<c>true</c> if this instance has interceptors; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.InterceptorReferenceCollection.Count">
            <summary>
            Gets the number of
            elements contained in the <see cref="T:System.Collections.ICollection"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.InterceptorReferenceCollection.SyncRoot">
            <summary>
            Gets an object that
            can be used to synchronize access to the <see cref="T:System.Collections.ICollection"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.InterceptorReferenceCollection.IsSynchronized">
            <summary>
            Gets a value
            indicating whether access to the <see cref="T:System.Collections.ICollection"/> is synchronized
            (thread-safe).
            </summary>
            <value></value>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.LifecycleStepCollection">
            <summary>
            Represents a collection of ordered lifecycle steps.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.LifecycleStepCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GigaSpaces.Core.Internal.Castle.Core.LifecycleStepCollection"/> class.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.LifecycleStepCollection.GetCommissionSteps">
            <summary>
            Returns all steps for the commission phase
            </summary>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.LifecycleStepCollection.GetDecommissionSteps">
            <summary>
            Returns all steps for the decommission phase
            </summary>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.LifecycleStepCollection.Add(GigaSpaces.Core.Internal.Castle.Core.LifecycleStepType,System.Object)">
            <summary>
            Adds a step to the commission or decomission phases.
            </summary>
            <param name="type"></param>
            <param name="stepImplementation"></param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.LifecycleStepCollection.AddFirst(GigaSpaces.Core.Internal.Castle.Core.LifecycleStepType,System.Object)">
            <summary>
            Adds a step as the first step to execute for the commission or decomission phase.
            </summary>
            <param name="type"></param>
            <param name="stepImplementation"></param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.LifecycleStepCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of
            the <see cref="T:System.Collections.ICollection"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="index">The zero-based index in <paramref name="array"/> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="array"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException">
            	<para>
            		<paramref name="array"/> is multidimensional.</para>
            	<para>-or-</para>
            	<para>
            		<paramref name="index"/> is equal to or greater than the length of <paramref name="array"/>.</para>
            	<para>-or-</para>
            	<para>The number of elements in the source <see cref="T:System.Collections.ICollection"/> is greater than the available space from <paramref name="index"/> to the end of the destination <paramref name="array"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException">The type of the source <see cref="T:System.Collections.ICollection"/> cannot be cast automatically to the type of the destination <paramref name="array"/>.</exception>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.LifecycleStepCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/>
            that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.LifecycleStepCollection.HasCommissionSteps">
            <summary>
            Gets a value indicating whether this instance has commission steps.
            </summary>
            <value>
            	<c>true</c> if this instance has commission steps; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.LifecycleStepCollection.HasDecommissionSteps">
            <summary>
            Gets a value indicating whether this instance has decommission steps.
            </summary>
            <value>
            	<c>true</c> if this instance has decommission steps; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.LifecycleStepCollection.Count">
            <summary>
            Gets the number of
            elements contained in the <see cref="T:System.Collections.ICollection"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.LifecycleStepCollection.SyncRoot">
            <summary>
            Gets an object that
            can be used to synchronize access to the <see cref="T:System.Collections.ICollection"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.LifecycleStepCollection.IsSynchronized">
            <summary>
            Gets a value
            indicating whether access to the <see cref="T:System.Collections.ICollection"/> is synchronized
            (thread-safe).
            </summary>
            <value></value>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.MethodMetaModel">
            <summary>
            Represents meta information associated with a method
            (not yet defined)
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.MethodMetaModel.#ctor(GigaSpaces.Core.Internal.Castle.Core.Configuration.IConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:GigaSpaces.Core.Internal.Castle.Core.MethodMetaModel"/> class.
            </summary>
            <param name="configNode">The config node.</param>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.MethodMetaModel.ConfigNode">
            <summary>
            Gets the config node.
            </summary>
            <value>The config node.</value>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.MethodMetaModelCollection">
            <summary>
            Collection of <see cref="T:GigaSpaces.Core.Internal.Castle.Core.MethodMetaModel"/>
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.MethodMetaModelCollection.MethodInfo2Model">
            <summary>
            Gets the method info2 model.
            </summary>
            <value>The method info2 model.</value>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.ParameterModel">
            <summary>
            Represents a parameter. Usually the parameter
            comes from the external world, ie, an external configuration.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.ParameterModel.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GigaSpaces.Core.Internal.Castle.Core.ParameterModel"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.ParameterModel.#ctor(System.String,GigaSpaces.Core.Internal.Castle.Core.Configuration.IConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:GigaSpaces.Core.Internal.Castle.Core.ParameterModel"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.ParameterModel.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.ParameterModel.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.ParameterModel.ConfigValue">
            <summary>
            Gets the config value.
            </summary>
            <value>The config value.</value>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.ParameterModelCollection">
            <summary>
            Collection of <see cref="T:GigaSpaces.Core.Internal.Castle.Core.ParameterModel"/>
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.ParameterModelCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GigaSpaces.Core.Internal.Castle.Core.ParameterModelCollection"/> class.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.ParameterModelCollection.Add(System.String,System.String)">
            <summary>
            Adds the specified name.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.ParameterModelCollection.Add(System.String,GigaSpaces.Core.Internal.Castle.Core.Configuration.IConfiguration)">
            <summary>
            Adds the specified name.
            </summary>
            <param name="name">The name.</param>
            <param name="configNode">The config node.</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.ParameterModelCollection.Contains(System.Object)">
            <summary>
            Determines whether this collection contains the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns>
            <c>true</c> if yes; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.ParameterModelCollection.Add(System.Object,System.Object)">
            <summary>
            Adds the specified key.
            </summary>
            <remarks>
            Not implemented
            </remarks>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.ParameterModelCollection.Clear">
            <summary>
            Clears this instance.
            </summary>
            <remarks>
            Not implemented
            </remarks>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.ParameterModelCollection.Remove(System.Object)">
            <summary>
            Removes the specified key.
            </summary>
            <param name="key">The key.</param>
            <remarks>
            Not implemented
            </remarks>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.ParameterModelCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copy the content to the specified array
            </summary>
            <param name="array">target array</param>
            <param name="index">target index</param>
            <remarks>
            Not implemented
            </remarks>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.ParameterModelCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/>
            that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.ParameterModelCollection.Keys">
            <summary>
            Gets the keys.
            </summary>
            <value>The keys.</value>
            <remarks>
            Not implemented
            </remarks>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.ParameterModelCollection.Values">
            <summary>
            Gets the values.
            </summary>
            <value>The values.</value>
            <remarks>
            Not implemented
            </remarks>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.ParameterModelCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether this instance is read only.
            </summary>
            <value>
            	<c>true</c> if this instance is read only; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.ParameterModelCollection.IsFixedSize">
            <summary>
            Gets a value indicating whether this instance is fixed size.
            </summary>
            <value>
            	<c>true</c> if this instance is fixed size; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.ParameterModelCollection.Item(System.Object)">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Internal.Castle.Core.ParameterModel"/> with the specified key.
            </summary>
            <value></value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.ParameterModelCollection.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.ParameterModelCollection.SyncRoot">
            <summary>
            Gets the sync root.
            </summary>
            <value>The sync root.</value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.ParameterModelCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether this instance is synchronized.
            </summary>
            <value>
            	<c>true</c> if this instance is synchronized; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.PropertySet">
            <summary>
            Represents a property and the respective dependency.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.PropertySet.#ctor(System.Reflection.PropertyInfo,GigaSpaces.Core.Internal.Castle.Core.DependencyModel)">
            <summary>
            Initializes a new instance of the <see cref="T:GigaSpaces.Core.Internal.Castle.Core.PropertySet"/> class.
            </summary>
            <param name="propertyInfo">The property info.</param>
            <param name="dependency">The dependency.</param>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.PropertySet.Property">
            <summary>
            Gets the property.
            </summary>
            <value>The property.</value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.PropertySet.Dependency">
            <summary>
            Gets the dependency.
            </summary>
            <value>The dependency.</value>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.PropertySetCollection">
            <summary>
            Collection of <see cref="T:GigaSpaces.Core.Internal.Castle.Core.PropertySet"/>
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.PropertySetCollection.FindByPropertyInfo(System.Reflection.PropertyInfo)">
            <summary>
            Finds a PropertySet the by PropertyInfo.
            </summary>
            <param name="info">The info.</param>
            <returns></returns>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.Pair`2">
            <summary>
            General purpose class to represent a standard pair of values. 
            </summary>
            <typeparam name="TFirst">Type of the first value</typeparam>
            <typeparam name="TSecond">Type of the second value</typeparam>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Pair`2.#ctor(`0,`1)">
            <summary>
            Constructs a pair with its values
            </summary>
            <param name="first"></param>
            <param name="second"></param>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.ProxyServices">
            <summary>
            List of utility methods related to dynamic proxy operations
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.ProxyServices.IsDynamicProxy(System.Type)">
            <summary>
            Determines whether the specified type is a proxy generated by
            DynamicProxy (1 or 2).
            </summary>
            <param name="type">The type.</param>
            <returns>
            	<c>true</c> if it is a proxy; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.ReflectionBasedDictionaryAdapter">
            <summary>
            Pendent
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.ReflectionBasedDictionaryAdapter.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:GigaSpaces.Core.Internal.Castle.Core.ReflectionBasedDictionaryAdapter"/> class.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.ReflectionBasedDictionaryAdapter.Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:System.Collections.IDictionary"/> object contains an element with the specified key.
            </summary>
            <param name="key">The key to locate in the <see cref="T:System.Collections.IDictionary"/> object.</param>
            <returns>
            true if the <see cref="T:System.Collections.IDictionary"/> contains an element with the key; otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="key"/> is null. </exception>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.ReflectionBasedDictionaryAdapter.Add(System.Object,System.Object)">
            <summary>
            Adds an element with the provided key and value to the <see cref="T:System.Collections.IDictionary"/> object.
            </summary>
            <param name="key">The <see cref="T:System.Object"/> to use as the key of the element to add.</param>
            <param name="value">The <see cref="T:System.Object"/> to use as the value of the element to add.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="key"/> is null. </exception>
            <exception cref="T:System.ArgumentException">An element with the same key already exists in the <see cref="T:System.Collections.IDictionary"/> object. </exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IDictionary"/> is read-only.-or- The <see cref="T:System.Collections.IDictionary"/> has a fixed size. </exception>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.ReflectionBasedDictionaryAdapter.Clear">
            <summary>
            Removes all elements from the <see cref="T:System.Collections.IDictionary"/> object.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IDictionary"/> object is read-only. </exception>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.ReflectionBasedDictionaryAdapter.System#Collections#IDictionary#GetEnumerator">
            <summary>
            Returns an <see cref="T:System.Collections.IDictionaryEnumerator"/> object for the <see cref="T:System.Collections.IDictionary"/> object.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IDictionaryEnumerator"/> object for the <see cref="T:System.Collections.IDictionary"/> object.
            </returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.ReflectionBasedDictionaryAdapter.Remove(System.Object)">
            <summary>
            Removes the element with the specified key from the <see cref="T:System.Collections.IDictionary"/> object.
            </summary>
            <param name="key">The key of the element to remove.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="key"/> is null. </exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IDictionary"/> object is read-only.-or- The <see cref="T:System.Collections.IDictionary"/> has a fixed size. </exception>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.ReflectionBasedDictionaryAdapter.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.ICollection"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="index">The zero-based index in <paramref name="array"/> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="array"/> is null. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is less than zero. </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="array"/> is multidimensional.-or- <paramref name="index"/> is equal to or greater than the length of <paramref name="array"/>.-or- The number of elements in the source <see cref="T:System.Collections.ICollection"/> is greater than the available space from <paramref name="index"/> to the end of the destination <paramref name="array"/>. </exception>
            <exception cref="T:System.ArgumentException">The type of the source <see cref="T:System.Collections.ICollection"/> cannot be cast automatically to the type of the destination <paramref name="array"/>. </exception>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.ReflectionBasedDictionaryAdapter.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.ReflectionBasedDictionaryAdapter.Item(System.Object)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> with the specified key.
            </summary>
            <value></value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.ReflectionBasedDictionaryAdapter.Keys">
            <summary>
            Gets an <see cref="T:System.Collections.ICollection"/> object containing the keys of the <see cref="T:System.Collections.IDictionary"/> object.
            </summary>
            <value></value>
            <returns>An <see cref="T:System.Collections.ICollection"/> object containing the keys of the <see cref="T:System.Collections.IDictionary"/> object.</returns>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.ReflectionBasedDictionaryAdapter.Values">
            <summary>
            Gets an <see cref="T:System.Collections.ICollection"/> object containing the values in the <see cref="T:System.Collections.IDictionary"/> object.
            </summary>
            <value></value>
            <returns>An <see cref="T:System.Collections.ICollection"/> object containing the values in the <see cref="T:System.Collections.IDictionary"/> object.</returns>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.ReflectionBasedDictionaryAdapter.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IDictionary"/> object is read-only.
            </summary>
            <value></value>
            <returns>true if the <see cref="T:System.Collections.IDictionary"/> object is read-only; otherwise, false.</returns>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.ReflectionBasedDictionaryAdapter.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IDictionary"/> object has a fixed size.
            </summary>
            <value></value>
            <returns>true if the <see cref="T:System.Collections.IDictionary"/> object has a fixed size; otherwise, false.</returns>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.ReflectionBasedDictionaryAdapter.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.ICollection"/>.
            </summary>
            <value></value>
            <returns>The number of elements contained in the <see cref="T:System.Collections.ICollection"/>.</returns>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.ReflectionBasedDictionaryAdapter.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection"/>.
            </summary>
            <value></value>
            <returns>An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection"/>.</returns>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.ReflectionBasedDictionaryAdapter.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection"/> is synchronized (thread safe).
            </summary>
            <value></value>
            <returns>true if access to the <see cref="T:System.Collections.ICollection"/> is synchronized (thread safe); otherwise, false.</returns>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.Resource.IResource">
            <summary>
            Represents a 'streamable' resource. Can
            be a file, a resource in an assembly.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Resource.IResource.GetStreamReader">
            <summary>
            Returns a reader for the stream
            </summary>
            <remarks>
            It's up to the caller to dispose the reader.
            </remarks>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Resource.IResource.GetStreamReader(System.Text.Encoding)">
            <summary>
            Returns a reader for the stream
            </summary>
            <remarks>
            It's up to the caller to dispose the reader.
            </remarks>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Resource.IResource.CreateRelative(System.String)">
            <summary>
            Returns an instance of <see cref="T:GigaSpaces.Core.Internal.Castle.Core.Resource.IResource"/>
            created according to the <c>relativePath</c>
            using itself as the root.
            </summary>
            <param name="relativePath"></param>
            <returns></returns>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.Core.Resource.IResource.FileBasePath">
            <summary>
            
            </summary>
            <remarks>
            Only valid for resources that
            can be obtained through relative paths
            </remarks>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.Resource.AbstractStreamResource">
            <summary>
            
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Castle.Core.Resource.AbstractStreamResource.createStream">
            <summary>
            This returns a new stream instance each time it is called.
            It is the responsability of the caller to dispose of this stream
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.Resource.AssemblyResourceFactory">
            <summary>
            
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.Resource.IResourceFactory">
            <summary>
            Depicts the contract for resource factories.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Resource.IResourceFactory.Accept(GigaSpaces.Core.Internal.Castle.Core.Resource.CustomUri)">
            <summary>
            Used to check whether the resource factory
            is able to deal with the given resource
            identifier.
            </summary>
            <remarks>
            Implementors should return <c>true</c>
            only if the given identificator is supported
            by the resource factory
            </remarks>
            <param name="uri"></param>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Resource.IResourceFactory.Create(GigaSpaces.Core.Internal.Castle.Core.Resource.CustomUri)">
            <summary>
            Creates an <see cref="T:GigaSpaces.Core.Internal.Castle.Core.Resource.IResource"/> instance
            for the given resource identifier
            </summary>
            <param name="uri"></param>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.Core.Resource.IResourceFactory.Create(GigaSpaces.Core.Internal.Castle.Core.Resource.CustomUri,System.String)">
            <summary>
            Creates an <see cref="T:GigaSpaces.Core.Internal.Castle.Core.Resource.IResource"/> instance
            for the given resource identifier
            </summary>
            <param name="uri"></param>
            <param name="basePath"></param>
            <returns></returns>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.Resource.FileResource">
            <summary>
            
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.Resource.FileResourceFactory">
            <summary>
            
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.Resource.StaticContentResource">
            <summary>
            Adapts a static string content as an <see cref="T:GigaSpaces.Core.Internal.Castle.Core.Resource.IResource"/>
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.Core.Resource.UncResource">
            <summary>
            Enable access to files on network shares
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyGenerationHook">
            <summary>
            Used during the target type inspection process. Implementors have a chance to customize the
            proxy generation process.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyGenerationHook.ShouldInterceptMethod(System.Type,System.Reflection.MethodInfo)">
            <summary>
            Invoked by the generation process to determine if the specified method should be proxied.
            </summary>
            <param name="type">The type which declares the given method.</param>
            <param name="methodInfo">The method to inspect.</param>
            <returns>True if the given method should be proxied; false otherwise.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyGenerationHook.NonVirtualMemberNotification(System.Type,System.Reflection.MemberInfo)">
            <summary>
            Invoked by the generation process to notify that a member was not marked as virtual.
            </summary>
            <param name="type">The type which declares the non-virtual member.</param>
            <param name="memberInfo">The non-virtual member.</param>
            <remarks>
            Non-virtual members cannot be proxied. This method gives an opportunity to inspect
            any non-virtual member of a type that has been requested to be proxied, and if
            appropriate - throw an exception to notify the caller.
            </remarks>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyGenerationHook.MethodsInspected">
            <summary>
            Invoked by the generation process to notify that the whole process has completed.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.CacheMappingsAttribute">
            <summary>
            Applied to the assemblies saved by <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope"/> in order to persist the cache data included in the persisted assembly.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.DefaultProxyBuilder">
            <summary>
            Default implementation of <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder"/> interface producing in-memory proxy assemblies.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder">
            <summary>
            Abstracts the implementation of proxy type construction.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder.CreateClassProxy(System.Type,GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerationOptions)">
            <summary>
            Creates a proxy type for given <paramref name="classToProxy"/>, using <paramref name="options"/> provided.
            </summary>
            <param name="classToProxy">The class type to proxy.</param>
            <param name="options">The proxy generation options.</param>
            <returns>The generated proxy type.</returns>
            <exception cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.GeneratorException">Thrown when <paramref name="classToProxy"/> is a generic type definition.</exception>
            <exception cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.GeneratorException">Thrown when <paramref name="classToProxy"/> is not public.
            Note that to avoid this exception, you can mark offending type internal, and define <see cref="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute"/> 
            pointing to Castle Dynamic Proxy assembly, in assembly containing that type, if this is appropriate.</exception>
            <seealso cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.ClassProxyGenerator"/>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder.CreateClassProxy(System.Type,System.Type[],GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerationOptions)">
            <summary>
            Creates a proxy type for given <paramref name="classToProxy"/>, implementing <paramref name="additionalInterfacesToProxy"/>, using <paramref name="options"/> provided.
            </summary>
            <param name="classToProxy">The class type to proxy.</param>
            <param name="additionalInterfacesToProxy">Additional interface types to proxy.</param>
            <param name="options">The proxy generation options.</param>
            <returns>The generated proxy type.</returns>
            <remarks>
            Implementers should return a proxy type for the specified class and interfaces.
            Additional interfaces should be only 'mark' interfaces, that is, they should work like interface proxy without target. (See <see cref="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder.CreateInterfaceProxyTypeWithoutTarget(System.Type,System.Type[],GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerationOptions)"/> method.)
            </remarks>
            <exception cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.GeneratorException">Thrown when <paramref name="classToProxy"/> or any of <paramref name="additionalInterfacesToProxy"/> is a generic type definition.</exception>
            <exception cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.GeneratorException">Thrown when <paramref name="classToProxy"/> or any of <paramref name="additionalInterfacesToProxy"/> is not public.
            Note that to avoid this exception, you can mark offending type internal, and define <see cref="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute"/> 
            pointing to Castle Dynamic Proxy assembly, in assembly containing that type, if this is appropriate.</exception>
            <seealso cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.ClassProxyGenerator"/>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder.CreateInterfaceProxyTypeWithTarget(System.Type,System.Type[],System.Type,GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerationOptions)">
            <summary>
            Creates a proxy type that proxies calls to <paramref name="interfaceToProxy"/> members on <paramref name="targetType"/>, implementing <paramref name="additionalInterfacesToProxy"/>, using <paramref name="options"/> provided.
            </summary>
            <param name="interfaceToProxy">The interface type to proxy.</param>
            <param name="additionalInterfacesToProxy">Additional interface types to proxy.</param>
            <param name="targetType">Type implementing <paramref name="interfaceToProxy"/> on which calls to the interface members should be intercepted.</param>
            <param name="options">The proxy generation options.</param>
            <returns>The generated proxy type.</returns>
            <remarks>
            Implementers should return a proxy type for the specified interface that 'proceeds' executions to the specified target.
            Additional interfaces should be only 'mark' interfaces, that is, they should work like interface proxy without target. (See <see cref="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder.CreateInterfaceProxyTypeWithoutTarget(System.Type,System.Type[],GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerationOptions)"/> method.)
            </remarks>
            <exception cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.GeneratorException">Thrown when <paramref name="interfaceToProxy"/> or any of <paramref name="additionalInterfacesToProxy"/> is a generic type definition.</exception>
            <exception cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.GeneratorException">Thrown when <paramref name="interfaceToProxy"/> or any of <paramref name="additionalInterfacesToProxy"/> is not public.
            Note that to avoid this exception, you can mark offending type internal, and define <see cref="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute"/> 
            pointing to Castle Dynamic Proxy assembly, in assembly containing that type, if this is appropriate.</exception>
            <seealso cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.InterfaceProxyWithTargetGenerator"/>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder.CreateInterfaceProxyTypeWithoutTarget(System.Type,System.Type[],GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerationOptions)">
            <summary>
            Creates a proxy type for given <paramref name="interfaceToProxy"/> that delegates all calls to the provided interceptors.
            </summary>
            <param name="interfaceToProxy">The interface type to proxy.</param>
            <param name="additionalInterfacesToProxy">Additional interface types to proxy.</param>
            <param name="options">The proxy generation options.</param>
            <returns>The generated proxy type.</returns>
            <remarks>
            Implementers should return a proxy type for the specified interface and additional interfaces that delegate all executions to the specified interceptors.
            </remarks>
            <exception cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.GeneratorException">Thrown when <paramref name="interfaceToProxy"/> or any of <paramref name="additionalInterfacesToProxy"/> is a generic type definition.</exception>
            <exception cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.GeneratorException">Thrown when <paramref name="interfaceToProxy"/> or any of <paramref name="additionalInterfacesToProxy"/> is not public.
            Note that to avoid this exception, you can mark offending type internal, and define <see cref="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute"/> 
            pointing to Castle Dynamic Proxy assembly, in assembly containing that type, if this is appropriate.</exception>
            <seealso cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.InterfaceProxyWithoutTargetGenerator"/>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder.CreateInterfaceProxyTypeWithTargetInterface(System.Type,System.Type[],GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerationOptions)">
            <summary>
            Creates a proxy type for given <paramref name="interfaceToProxy"/> and <parmaref name="additionalInterfacesToProxy"/> that delegates all calls to the provided interceptors and allows interceptors to switch the actual target of invocation.
            </summary>
            <param name="interfaceToProxy">The interface type to proxy.</param>
            <param name="additionalInterfacesToProxy">Additional interface types to proxy.</param>
            <param name="options">The proxy generation options.</param>
            <returns>The generated proxy type.</returns>
            <remarks>
            Implementers should return a proxy type for the specified interface(s) that delegate all executions to the specified interceptors
            and uses an instance of the interface as their targets (i.e. <see cref="P:GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInvocation.InvocationTarget"/>), rather than a class. All <see cref="T:GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInvocation"/> classes should then implement <see cref="T:GigaSpaces.Core.Internal.Castle.Core.Interceptor.IChangeProxyTarget"/> interface,
            to allow interceptors to switch invocation target with instance of another type implementing called interface.
            </remarks>
            <exception cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.GeneratorException">Thrown when <paramref name="interfaceToProxy"/> or any of <paramref name="additionalInterfacesToProxy"/> is a generic type definition.</exception>
            <exception cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.GeneratorException">Thrown when <paramref name="interfaceToProxy"/> or any of <paramref name="additionalInterfacesToProxy"/> is not public.
            Note that to avoid this exception, you can mark offending type internal, and define <see cref="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute"/> 
            pointing to Castle Dynamic Proxy assembly, in assembly containing that type, if this is appropriate.</exception>
            <seealso cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.InterfaceProxyWithTargetInterfaceGenerator"/>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder.ModuleScope">
            <summary>
            Gets the <see cref="P:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder.ModuleScope"/> associated with this builder.
            </summary>
            <value>The module scope associated with this builder.</value>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.DefaultProxyBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.DefaultProxyBuilder"/> class with new <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope"/>.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.DefaultProxyBuilder.#ctor(GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope)">
            <summary>
            Initializes a new instance of the <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.DefaultProxyBuilder"/> class.
            </summary>
            <param name="scope">The module scope for generated proxy types.</param>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.BaseProxyGenerator">
            <summary>
            Base class that exposes the common functionalities
            to proxy generation.
            </summary>
            <remarks>
            TODO: 
            - Add tests and fixes for 'leaking this' problem
            </remarks>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.BaseProxyGenerator.GetProxyTargetReference">
            <summary>
            Used by dinamically implement <see cref="T:GigaSpaces.Core.Internal.Castle.Core.Interceptor.IProxyTargetAccessor"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.BaseProxyGenerator.GenerateParameterlessConstructor(GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.Emitters.ClassEmitter,System.Type,GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.Emitters.SimpleAST.FieldReference)">
            <summary>
            Generates a parameters constructor that initializes the proxy
            state with <see cref="T:GigaSpaces.Core.Internal.Castle.Core.Interceptor.StandardInterceptor"/> just to make it non-null.
            <para>
            This constructor is important to allow proxies to be XML serializable
            </para>
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.BaseProxyGenerator.BuildInvocationNestedType(GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.Emitters.ClassEmitter,System.Type,System.Type,System.Reflection.MethodInfo,System.Reflection.MethodInfo,GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.ConstructorVersion)">
            <summary>
            If callbackMethod is null the InvokeOnTarget implementation 
            is just the code to throw an exception
            </summary>
            <param name="emitter"></param>
            <param name="targetType"></param>
            <param name="targetForInvocation"></param>
            <param name="methodInfo"></param>
            <param name="callbackMethod"></param>
            <param name="version"></param>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.BaseProxyGenerator.BuildInvocationNestedType(GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.Emitters.ClassEmitter,System.Type,System.Type,System.Reflection.MethodInfo,System.Reflection.MethodInfo,GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.ConstructorVersion,System.Boolean)">
            <summary>
            If callbackMethod is null the InvokeOnTarget implementation
            is just the code to throw an exception
            </summary>
            <param name="emitter"></param>
            <param name="targetType"></param>
            <param name="targetForInvocation"></param>
            <param name="methodInfo"></param>
            <param name="callbackMethod"></param>
            <param name="version"></param>
            <param name="allowChangeTarget">If true the invocation will implement the IChangeProxyTarget interface</param>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.BaseProxyGenerator.CreateIInvocationConstructor(System.Type,GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.Emitters.NestedClassEmitter,GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.Emitters.SimpleAST.FieldReference,GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.ConstructorVersion)">
            <summary>
            Generates the constructor for the nested class that extends
            <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.AbstractInvocation"/>
            </summary>
            <param name="targetFieldType"></param>
            <param name="nested"></param>
            <param name="targetField"></param>
            <param name="version"></param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.BaseProxyGenerator.CreateInitializeCacheMethodBody(System.Type,System.Reflection.MethodInfo[],GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.Emitters.ClassEmitter,GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.Emitters.ConstructorEmitter)">
            <summary>
            Improvement: this cache should be static. We should generate a
            type constructor instead
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.BaseProxyGenerator.AcceptMethod(System.Reflection.MethodInfo,System.Boolean)">
            <summary>
            Performs some basic screening and invokes the <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyGenerationHook"/>
            to select methods.
            </summary>
            <param name="method"></param>
            <param name="onlyVirtuals"></param>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.BaseProxyGenerator.IsAccessible(System.Reflection.MethodInfo)">
            <summary>
            Checks if the method is public or protected.
            </summary>
            <param name="method"></param>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.BaseProxyGenerator.ShouldSkipAttributeReplication(System.Attribute)">
            <summary>
            Attributes should be replicated if they are non-inheritable,
            but there are some special cases where the attributes means
            something to the CLR, where they should be skipped.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.BaseProxyGenerator.ShouldCreateNewSlot(System.Reflection.MethodInfo)">
            <summary>
            Checks if the method has the same signature as a method that was marked as
            one that should generate a new vtable slot.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.CacheKey.#ctor(System.Type,System.Type[],GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerationOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.CacheKey"/> class.
            </summary>
            <param name="targetType">Type of the target.</param>
            <param name="interfaces">The interfaces.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.Emitters.CustomAttributeUtil.InitializeConstructorArgs(System.Type,System.Attribute,System.Object[],System.Reflection.ParameterInfo[])">
            <summary>
            Here we try to match a constructor argument to its value.
            Since we can't get the values from the assembly, we use some heuristics to get it.
            a/ we first try to match all the properties on the attributes by name (case insensitive) to the argument
            b/ if we fail we try to match them by property type, with some smarts about convertions (i,e: can use Guid for string).
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.Emitters.CustomAttributeUtil.ReplaceIfBetterMatch(System.Reflection.ParameterInfo,System.Reflection.PropertyInfo,System.Reflection.PropertyInfo)">
            <summary>
            We have the following rules here.
            Try to find a matching type, failing that, if the parameter is string, get the first property (under the assumption that
            we can convert it.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.Emitters.CustomAttributeUtil.ConvertValue(System.Object,System.Type)">
            <summary>
            Attributes can only accept simple types, so we return null for null,
            if the value is passed as string we call to string (should help with converting), 
            otherwise, we use the value as is (enums, integer, etc).
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.Emitters.LdcOpCodesDictionary">
            <summary>s
            Provides appropriate Ldc.X opcode for the type of primitive value to be loaded.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.Emitters.LdindOpCodesDictionary">
            <summary>
            Provides appropriate Ldind.X opcode for 
            the type of primitive value to be loaded indirectly.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.Emitters.MethodEmitter.CopyParametersAndReturnTypeFrom(System.Reflection.MethodInfo,GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter)">
            <summary>
            Inspect the base method for generic definitions
            and set the return type and the parameters
            accordingly
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.Emitters.OpCodeUtil.EmitLoadOpCodeForConstantValue(System.Reflection.Emit.ILGenerator,System.Object)">
            <summary>
            Emits a load opcode of the appropriate kind for a constant string or
            primitive value.
            </summary>
            <param name="gen"></param>
            <param name="value"></param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.Emitters.OpCodeUtil.EmitLoadOpCodeForDefaultValueOfType(System.Reflection.Emit.ILGenerator,System.Type)">
            <summary>
            Emits a load opcode of the appropriate kind for the constant default value of a
            type, such as 0 for value types and null for reference types.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.Emitters.OpCodeUtil.EmitLoadIndirectOpCodeForType(System.Reflection.Emit.ILGenerator,System.Type)">
            <summary>
            Emits a load indirect opcode of the appropriate type for a value or object reference.
            Pops a pointer off the evaluation stack, dereferences it and loads
            a value of the specified type.
            </summary>
            <param name="gen"></param>
            <param name="type"></param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.Emitters.OpCodeUtil.EmitStoreIndirectOpCodeForType(System.Reflection.Emit.ILGenerator,System.Type)">
            <summary>
            Emits a store indirectopcode of the appropriate type for a value or object reference.
            Pops a value of the specified type and a pointer off the evaluation stack, and
            stores the value.
            </summary>
            <param name="gen"></param>
            <param name="type"></param>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.Emitters.PropertiesCollection">
            <summary>
            Summary description for PropertiesCollection.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.Emitters.SimpleAST.IndirectReference">
            <summary>
            Wraps a reference that is passed 
            ByRef and provides indirect load/store support.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.Emitters.SimpleAST.NewArrayExpression">
            <summary>
            Summary description for NewArrayExpression.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.Emitters.StindOpCodesDictionary">
            <summary>
            Provides appropriate Stind.X opcode 
            for the type of primitive value to be stored indirectly.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.EventToGenerate.#ctor(GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.Emitters.EventEmitter,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Reflection.EventAttributes)">
            <summary>
            Initializes a new instance of the <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.EventToGenerate"/> class.
            </summary>
            <param name="emitter">The emitter.</param>
            <param name="addMethod">The add method.</param>
            <param name="removeMethod">The remove method.</param>
            <param name="attributes">The attributes.</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.InterfaceProxyWithTargetGenerator.FindMethodOnTargetType(System.Reflection.MethodInfo,System.Type,System.Boolean)">
            <summary>
            Finds the type of the method on target.
            </summary>
            <param name="methodOnInterface">The method on interface.</param>
            <param name="proxyTargetType">Type of the proxy target.</param>
            /// <param name="checkMixins">if set to <c>true</c> will check implementation on mixins.</param>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.InterfaceProxyWithTargetGenerator.IsTypeEquivalent(System.Type,System.Type)">
            <summary>
            Checks whether the given types are the same. This is 
            more complicated than it looks.
            </summary>
            <param name="sourceType"></param>
            <param name="targetType"></param>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.InterfaceProxyWithTargetGenerator.IsMethodEquivalent(System.Reflection.MethodInfo,System.Reflection.MethodInfo)">
            <summary>
            Checks whether the given methods are the same.
            </summary>
            <param name="methodInfo"></param>
            <param name="methodOnInterface"></param>
            <returns>True if the methods are the same.</returns>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.InterfaceGeneratorType">
            <summary>
            This is used by the ProxyObjectReference class durin de-serialiation, to know
            which generator it should use
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.MethodFinder">
            <summary>
            Returns the methods implemented by a type. Use this instead of Type.GetMethods() to work around a CLR issue
            where duplicate MethodInfos are returned by Type.GetMethods() after a token of a generic type's method was loaded.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.IInterceptorSelector">
            <summary>
            Provides an extension point that allows proxies to choose specific interceptors on
            a per method basis.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.IInterceptorSelector.SelectInterceptors(System.Type,System.Reflection.MethodInfo,GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInterceptor[])">
            <summary>
            Selects the interceptors that should intercept calls to the given <paramref name="method"/>.
            </summary>
            <param name="type">The type declaring the method to intercept.</param>
            <param name="method">The method that will be intercepted.</param>
            <param name="interceptors">All interceptors registered with the proxy.</param>
            <returns>An array of interceptors to invoke upon calling the <paramref name="method"/>.</returns>
            <remarks>
            This method is called only once per proxy instance, upon the first call to the
            <paramref name="method"/>. Either an empty array or null are valid return values to indicate
            that no interceptor should intercept calls to the method. Although it is not advised, it is
            legal to return other <see cref="T:GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInterceptor"/> implementations than these provided in
            <paramref name="interceptors"/>. A better way to do this, is by passing all the required
            interceptors to the appropriate method of <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerator"/>. You can use this
            method to influence the order in which interceptors will be called, by reordering the array.
            Returning an array containing null references (Nothing in Visual Basic) is not legal,
            and will result in a runtime exception.
            </remarks>
            <seealso cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerationOptions"/>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.InternalsHelper.IsInternalToDynamicProxy(System.Reflection.Assembly)">
            <summary>
            Determines whether this assembly has internals visible to dynamic proxy.
            </summary>
            <param name="asm">The assembly to inspect.</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.InternalsHelper.IsInternal(System.Reflection.MethodInfo)">
            <summary>
            Determines whether the specified method is internal.
            </summary>
            <param name="method">The method.</param>
            <returns>
            	<c>true</c> if the specified method is internal; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.MixinData.#ctor(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Because we need to cache the types based on the mixed in mixins, we do the following here:
             - Get all the mixin interfaces
             - Sort them by full name
             - Return them by position
            
            The idea is to have reproducable behavior for the case that mixins are registered in different orders.
            This method is here because it is required 
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope">
            <summary>
            Summary description for ModuleScope.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope.DEFAULT_FILE_NAME">
            <summary>
            The default file name used when the assembly is saved using <see cref="F:GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope.DEFAULT_FILE_NAME"/>.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope.DEFAULT_ASSEMBLY_NAME">
            <summary>
            The default assembly (simple) name used for the assemblies generated by a <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope"/> instance.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope"/> class; assemblies created by this instance will not be saved.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope"/> class, allowing to specify whether the assemblies generated by this instance
            should be saved.
            </summary>
            <param name="savePhysicalAssembly">If set to <c>true</c> saves the generated module.</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope.#ctor(System.Boolean,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope"/> class, allowing to specify whether the assemblies generated by this instance
            should be saved and what simple names are to be assigned to them.
            </summary>
            <param name="savePhysicalAssembly">If set to <c>true</c> saves the generated module.</param>
            <param name="strongAssemblyName">The simple name of the strong-named assembly generated by this <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope"/>.</param>
            <param name="strongModulePath">The path and file name of the manifest module of the strong-named assembly generated by this <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope"/>.</param>
            <param name="weakAssemblyName">The simple name of the weak-named assembly generated by this <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope"/>.</param>
            <param name="weakModulePath">The path and file name of the manifest module of the weak-named assembly generated by this <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope"/>.</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope.GetFromCache(GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.CacheKey)">
            <summary>
            Returns a type from this scope's type cache, or null if the key cannot be found.
            </summary>
            <param name="key">The key to be looked up in the cache.</param>
            <returns>The type from this scope's type cache matching the key, or null if the key cannot be found</returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope.RegisterInCache(GigaSpaces.Core.Internal.Castle.DynamicProxy.Generators.CacheKey,System.Type)">
            <summary>
            Registers a type in this scope's type cache.
            </summary>
            <param name="key">The key to be associated with the type.</param>
            <param name="type">The type to be stored in the cache.</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope.GetKeyPair">
            <summary>
            Gets the key pair used to sign the strong-named assembly generated by this <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope.ObtainDynamicModule(System.Boolean)">
            <summary>
            Gets the specified module generated by this scope, creating a new one if none has yet been generated.
            </summary>
            <param name="isStrongNamed">If set to true, a strong-named module is returned; otherwise, a weak-named module is returned.</param>
            <returns>A strong-named or weak-named module generated by this scope, as specified by the <paramref name="isStrongNamed"/> parameter.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope.ObtainDynamicModuleWithStrongName">
            <summary>
            Gets the strong-named module generated by this scope, creating a new one if none has yet been generated.
            </summary>
            <returns>A strong-named module generated by this scope.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope.ObtainDynamicModuleWithWeakName">
            <summary>
            Gets the weak-named module generated by this scope, creating a new one if none has yet been generated.
            </summary>
            <returns>A weak-named module generated by this scope.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope.SaveAssembly">
            <summary>
            Saves the generated assembly with the name and directory information given when this <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope"/> instance was created (or with
            the <see cref="F:GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope.DEFAULT_FILE_NAME"/> and current directory if none was given).
            </summary>
            <remarks>
            <para>
            This method stores the generated assembly in the directory passed as part of the module information specified when this instance was
            constructed (if any, else the current directory is used). If both a strong-named and a weak-named assembly
            have been generated, it will throw an exception; in this case, use the <see cref="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope.SaveAssembly(System.Boolean)"/> overload.
            </para>
            <para>
            If this <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope"/> was created without indicating that the assembly should be saved, this method does nothing.
            </para></remarks>
            <exception cref="T:System.InvalidOperationException">Both a strong-named and a weak-named assembly have been generated.</exception>
            <returns>The path of the generated assembly file, or null if no file has been generated.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope.SaveAssembly(System.Boolean)">
            <summary>
            Saves the specified generated assembly with the name and directory information given when this <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope"/> instance was created
            (or with the <see cref="F:GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope.DEFAULT_FILE_NAME"/> and current directory if none was given).
            </summary>
            <param name="strongNamed">True if the generated assembly with a strong name should be saved (see <see cref="P:GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope.StrongNamedModule"/>);
              false if the generated assembly without a strong name should be saved (see <see cref="P:GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope.WeakNamedModule"/>.</param>
            <remarks>
            <para>
            This method stores the specified generated assembly in the directory passed as part of the module information specified when this instance was
            constructed (if any, else the current directory is used).
            </para>
            <para>
            If this <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope"/> was created without indicating that the assembly should be saved, this method does nothing.
            </para>
            </remarks>
            <exception cref="T:System.InvalidOperationException">No assembly has been generated that matches the <paramref name="strongNamed"/> parameter.
            </exception>
            <returns>The path of the generated assembly file, or null if no file has been generated.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope.LoadAssemblyIntoCache(System.Reflection.Assembly)">
            <summary>
            Loads the generated types from the given assembly into this <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope"/>'s cache.
            </summary>
            <param name="assembly">The assembly to load types from. This assembly must have been saved via <see cref="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope.SaveAssembly(System.Boolean)"/> or
            <see cref="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope.SaveAssembly"/>, or it must have the <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.CacheMappingsAttribute"/> manually applied.</param>
            <remarks>
            This method can be used to load previously generated and persisted proxy types from disk into this scope's type cache, eg. in order
            to avoid the performance hit associated with proxy generation.
            </remarks>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope.RWLock">
            <summary>
            Users of this <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope"/> should use this lock when accessing the cache.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope.StrongNamedModule">
            <summary>
            Gets the strong-named module generated by this scope, or <see langword="null"/> if none has yet been generated.
            </summary>
            <value>The strong-named module generated by this scope, or <see langword="null"/> if none has yet been generated.</value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope.StrongNamedModuleName">
            <summary>
            Gets the file name of the strongly named module generated by this scope.
            </summary>
            <value>The file name of the strongly named module generated by this scope.</value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope.StrongNamedModuleDirectory">
            <summary>
            Gets the directory where the strongly named module generated by this scope will be saved, or <see langword="null"/> if the current directory
            is used.
            </summary>
            <value>The directory where the strongly named module generated by this scope will be saved when <see cref="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope.SaveAssembly"/> is called
            (if this scope was created to save modules).</value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope.WeakNamedModule">
            <summary>
            Gets the weak-named module generated by this scope, or <see langword="null"/> if none has yet been generated.
            </summary>
            <value>The weak-named module generated by this scope, or <see langword="null"/> if none has yet been generated.</value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope.WeakNamedModuleName">
            <summary>
            Gets the file name of the weakly named module generated by this scope.
            </summary>
            <value>The file name of the weakly named module generated by this scope.</value>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope.WeakNamedModuleDirectory">
            <summary>
            Gets the directory where the weakly named module generated by this scope will be saved, or <see langword="null"/> if the current directory
            is used.
            </summary>
            <value>The directory where the weakly named module generated by this scope will be saved when <see cref="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope.SaveAssembly"/> is called
            (if this scope was created to save modules).</value>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.PersistentProxyBuilder">
            <summary>
            ProxyBuilder that persists the generated type.
            </summary>
            <remarks>
            The saved assembly contains just the last generated type.
            </remarks>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.PersistentProxyBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.PersistentProxyBuilder"/> class.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.PersistentProxyBuilder.SaveAssembly">
            <summary>
            Saves the generated assembly to a physical file. Note that this renders the <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.PersistentProxyBuilder"/> unusable.
            </summary>
            <returns>The path of the generated assembly file, or null if no assembly has been generated.</returns>
            <remarks>This method does not support saving multiple files. If both a signed and an unsigned module have been generated, use the 
            respective methods of the <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope"/>.</remarks>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerationOptions.#ctor(GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyGenerationHook)">
            <summary>
            Initializes a new instance of the <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerationOptions"/> class.
            </summary>
            <param name="hook">The hook.</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerationOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerationOptions"/> class.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerator">
            <summary>
            Provides proxy objects for classes and interfaces.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerator.#ctor(GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder)">
            <summary>
            Initializes a new instance of the <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerator"/> class.
            </summary>
            <param name="builder">Proxy types builder.</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerator"/> class.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerator.CreateInterfaceProxyWithTarget``1(``0,GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInterceptor[])">
            <summary>
            Creates proxy object intercepting calls to members of interface <typeparamref name="TInterface"/> on <paramref name="target"/> object with given <paramref name="interceptors"/>.
            </summary>
            <typeparam name="TInterface">Type of the interface implemented by <paramref name="target"/> which will be proxied.</typeparam>
            <param name="target">The target object, calls to which will be intercepted.</param>
            <param name="interceptors">The interceptors called during the invocation of proxied methods.</param>
            <returns>Object proxying calls to members of <typeparamref name="TInterface"/> on <paramref name="target"/> object.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when given <paramref name="target"/> object is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when given <paramref name="interceptors"/> array is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException">Thrown when given <typeparamref name="TInterface"/>is not an interface type.</exception>
            <exception cref="T:System.MissingMethodException">Thrown when no default constructor exists on actual type of <paramref name="target"/> object.</exception>
            <exception cref="T:System.Reflection.TargetInvocationException">Thrown when default constructor of actual type of <paramref name="target"/> throws an exception.</exception>
            <remarks>
            This method uses <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder"/> implementation to generate a proxy type.
            As such caller should expect any type of exception that given <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder"/> implementation may throw.
            </remarks>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerator.CreateInterfaceProxyWithTarget``1(System.Object,GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerationOptions,GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInterceptor[])">
            <summary>
            Creates proxy object intercepting calls to members of interface <typeparamref name="TInterface"/> on <paramref name="target"/> object with given <paramref name="interceptors"/>.
            </summary>
            <typeparam name="TInterface">Type of the interface implemented by <paramref name="target"/> which will be proxied.</typeparam>
            <param name="target">The target object, calls to which will be intercepted.</param>
            <param name="options">The proxy generation options used to influence generated proxy type and object.</param>
            <param name="interceptors">The interceptors called during the invocation of proxied methods.</param>
            <returns>
            Object proxying calls to members of <typeparamref name="TInterface"/> on <paramref name="target"/> object.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when given <paramref name="target"/> object is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when given <paramref name="interceptors"/> array is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException">Thrown when given <typeparamref name="TInterface"/>is not an interface type.</exception>
            <exception cref="T:System.MissingMethodException">Thrown when no default constructor exists on actual type of <paramref name="target"/> object.</exception>
            <exception cref="T:System.Reflection.TargetInvocationException">Thrown when default constructor of actual type of <paramref name="target"/> throws an exception.</exception>
            <remarks>
            This method uses <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder"/> implementation to generate a proxy type.
            As such caller should expect any type of exception that given <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder"/> implementation may throw.
            </remarks>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerator.CreateInterfaceProxyWithTarget(System.Type,System.Object,GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInterceptor[])">
            <summary>
            Creates proxy object intercepting calls to members of interface <paramref name="interfaceToProxy"/> on <paramref name="target"/> object with given <paramref name="interceptors"/>.
            </summary>
            <param name="interfaceToProxy">Type of the interface implemented by <paramref name="target"/> which will be proxied.</param>
            <param name="target">The target object, calls to which will be intercepted.</param>
            <param name="interceptors">The interceptors called during the invocation of proxied methods.</param>
            <returns>
            Object proxying calls to members of <paramref name="interfaceToProxy"/> type on <paramref name="target"/> object.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when given <paramref name="interfaceToProxy"/> object is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when given <paramref name="target"/> object is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when given <paramref name="interceptors"/> array is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException">Thrown when given <paramref name="interfaceToProxy"/> is a generic type definition.</exception>
            <exception cref="T:System.ArgumentException">Thrown when given <paramref name="interfaceToProxy"/> is not an interface type.</exception>
            <exception cref="T:System.ArgumentException">Thrown when given <paramref name="target"/> does not implement <paramref name="interfaceToProxy"/> interface.</exception>
            <exception cref="T:System.MissingMethodException">Thrown when no default constructor exists on actual type of <paramref name="target"/> object.</exception>
            <exception cref="T:System.Reflection.TargetInvocationException">Thrown when default constructor of actual type of <paramref name="target"/> throws an exception.</exception>
            <remarks>
            This method uses <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder"/> implementation to generate a proxy type.
            As such caller should expect any type of exception that given <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder"/> implementation may throw.
            </remarks>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerator.CreateInterfaceProxyWithTarget(System.Type,System.Object,GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerationOptions,GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInterceptor[])">
            <summary>
            Creates proxy object intercepting calls to members of interface <paramref name="interfaceToProxy"/> on <paramref name="target"/> object with given <paramref name="interceptors"/>.
            </summary>
            <param name="interfaceToProxy">Type of the interface implemented by <paramref name="target"/> which will be proxied.</param>
            <param name="target">The target object, calls to which will be intercepted.</param>
            <param name="options">The proxy generation options used to influence generated proxy type and object.</param>
            <param name="interceptors">The interceptors called during the invocation of proxied methods.</param>
            <returns>
            Object proxying calls to members of <paramref name="interfaceToProxy"/> type on <paramref name="target"/> object.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when given <paramref name="interfaceToProxy"/> object is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when given <paramref name="target"/> object is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when given <paramref name="interceptors"/> array is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException">Thrown when given <paramref name="interfaceToProxy"/> is a generic type definition.</exception>
            <exception cref="T:System.ArgumentException">Thrown when given <paramref name="interfaceToProxy"/> is not an interface type.</exception>
            <exception cref="T:System.ArgumentException">Thrown when given <paramref name="target"/> does not implement <paramref name="interfaceToProxy"/> interface.</exception>
            <exception cref="T:System.MissingMethodException">Thrown when no default constructor exists on actual type of <paramref name="target"/> object.</exception>
            <exception cref="T:System.Reflection.TargetInvocationException">Thrown when default constructor of actual type of <paramref name="target"/> throws an exception.</exception>
            <remarks>
            This method uses <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder"/> implementation to generate a proxy type.
            As such caller should expect any type of exception that given <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder"/> implementation may throw.
            </remarks>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerator.CreateInterfaceProxyWithTarget(System.Type,System.Type[],System.Object,GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInterceptor[])">
            <summary>
            Creates proxy object intercepting calls to members of interface <paramref name="interfaceToProxy"/> on <paramref name="target"/> object with given <paramref name="interceptors"/>.
            </summary>
            <param name="interfaceToProxy">Type of the interface implemented by <paramref name="target"/> which will be proxied.</param>
            <param name="target">The target object, calls to which will be intercepted.</param>
            <param name="additionalInterfacesToProxy">Additional interface types. Calls to their members will be proxied as well.</param>
            <param name="interceptors">The interceptors called during the invocation of proxied methods.</param>
            <returns>
            Object proxying calls to members of <paramref name="interfaceToProxy"/> and <paramref name="additionalInterfacesToProxy"/> types  on <paramref name="target"/> object.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when given <paramref name="interfaceToProxy"/> object is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when given <paramref name="target"/> object is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when given <paramref name="interceptors"/> array is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException">Thrown when given <paramref name="interfaceToProxy"/> or any of <paramref name="additionalInterfacesToProxy"/> is a generic type definition.</exception>
            <exception cref="T:System.ArgumentException">Thrown when given <paramref name="interfaceToProxy"/> is not an interface type.</exception>
            <exception cref="T:System.ArgumentException">Thrown when given <paramref name="target"/> does not implement <paramref name="interfaceToProxy"/> interface.</exception>
            <exception cref="T:System.MissingMethodException">Thrown when no default constructor exists on actual type of <paramref name="target"/> object.</exception>
            <exception cref="T:System.Reflection.TargetInvocationException">Thrown when default constructor of actual type of <paramref name="target"/> throws an exception.</exception>
            <remarks>
            This method uses <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder"/> implementation to generate a proxy type.
            As such caller should expect any type of exception that given <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder"/> implementation may throw.
            </remarks>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerator.CreateInterfaceProxyWithTarget(System.Type,System.Type[],System.Object,GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerationOptions,GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInterceptor[])">
            <summary>
            Creates proxy object intercepting calls to members of interface <paramref name="interfaceToProxy"/> on <paramref name="target"/> object with given <paramref name="interceptors"/>.
            </summary>
            <param name="interfaceToProxy">Type of the interface implemented by <paramref name="target"/> which will be proxied.</param>
            <param name="target">The target object, calls to which will be intercepted.</param>
            <param name="options">The proxy generation options used to influence generated proxy type and object.</param>
            <param name="additionalInterfacesToProxy">Additional interface types. Calls to their members will be proxied as well.</param>
            <param name="interceptors">The interceptors called during the invocation of proxied methods.</param>
            <returns>
            Object proxying calls to members of <paramref name="interfaceToProxy"/> and <paramref name="additionalInterfacesToProxy"/> types on <paramref name="target"/> object.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when given <paramref name="interfaceToProxy"/> object is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when given <paramref name="target"/> object is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when given <paramref name="interceptors"/> array is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException">Thrown when given <paramref name="interfaceToProxy"/> or any of <paramref name="additionalInterfacesToProxy"/> is a generic type definition.</exception>
            <exception cref="T:System.ArgumentException">Thrown when given <paramref name="interfaceToProxy"/> is not an interface type.</exception>
            <exception cref="T:System.ArgumentException">Thrown when given <paramref name="target"/> does not implement <paramref name="interfaceToProxy"/> interface.</exception>
            <exception cref="T:System.MissingMethodException">Thrown when no default constructor exists on actual type of <paramref name="target"/> object.</exception>
            <exception cref="T:System.Reflection.TargetInvocationException">Thrown when default constructor of actual type of <paramref name="target"/> throws an exception.</exception>
            <remarks>
            This method uses <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder"/> implementation to generate a proxy type.
            As such caller should expect any type of exception that given <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder"/> implementation may throw.
            </remarks>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerator.CreateInterfaceProxyWithTargetInterface(System.Type,System.Object,GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInterceptor[])">
            <summary>
            Creates proxy object intercepting calls to members of interface <paramref name="interfaceToProxy"/> on <paramref name="target"/> object with given <paramref name="interceptors"/>.
            Interceptors can use <see cref="T:GigaSpaces.Core.Internal.Castle.Core.Interceptor.IChangeProxyTarget"/> interface to provide other target for method invocation than default <paramref name="target"/>.
            </summary>
            <param name="interfaceToProxy">Type of the interface implemented by <paramref name="target"/> which will be proxied.</param>
            <param name="target">The target object, calls to which will be intercepted.</param>
            <param name="interceptors">The interceptors called during the invocation of proxied methods.</param>
            <returns>
            Object proxying calls to members of <paramref name="interfaceToProxy"/> type on <paramref name="target"/> object or alternative implementation swapped at runtime by an interceptor.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when given <paramref name="interfaceToProxy"/> object is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when given <paramref name="target"/> object is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when given <paramref name="interceptors"/> array is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException">Thrown when given <paramref name="interfaceToProxy"/> is a generic type definition.</exception>
            <exception cref="T:System.ArgumentException">Thrown when given <paramref name="interfaceToProxy"/> is not an interface type.</exception>
            <exception cref="T:System.ArgumentException">Thrown when given <paramref name="target"/> does not implement <paramref name="interfaceToProxy"/> interface.</exception>
            <exception cref="T:System.MissingMethodException">Thrown when no default constructor exists on actual type of <paramref name="target"/> object.</exception>
            <exception cref="T:System.Reflection.TargetInvocationException">Thrown when default constructor of actual type of <paramref name="target"/> throws an exception.</exception>
            <remarks>
            This method uses <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder"/> implementation to generate a proxy type.
            As such caller should expect any type of exception that given <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder"/> implementation may throw.
            </remarks>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerator.CreateInterfaceProxyWithTargetInterface(System.Type,System.Object,GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerationOptions,GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInterceptor[])">
            <summary>
            Creates proxy object intercepting calls to members of interface <paramref name="interfaceToProxy"/> on <paramref name="target"/> object with given <paramref name="interceptors"/>.
            Interceptors can use <see cref="T:GigaSpaces.Core.Internal.Castle.Core.Interceptor.IChangeProxyTarget"/> interface to provide other target for method invocation than default <paramref name="target"/>.
            </summary>
            <param name="interfaceToProxy">Type of the interface implemented by <paramref name="target"/> which will be proxied.</param>
            <param name="target">The target object, calls to which will be intercepted.</param>
            <param name="options">The proxy generation options used to influence generated proxy type and object.</param>
            <param name="interceptors">The interceptors called during the invocation of proxied methods.</param>
            <returns>
            Object proxying calls to members of <paramref name="interfaceToProxy"/> type on <paramref name="target"/> object or alternative implementation swapped at runtime by an interceptor.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when given <paramref name="interfaceToProxy"/> object is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when given <paramref name="target"/> object is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when given <paramref name="interceptors"/> array is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException">Thrown when given <paramref name="interfaceToProxy"/> is a generic type definition.</exception>
            <exception cref="T:System.ArgumentException">Thrown when given <paramref name="interfaceToProxy"/> is not an interface type.</exception>
            <exception cref="T:System.ArgumentException">Thrown when given <paramref name="target"/> does not implement <paramref name="interfaceToProxy"/> interface.</exception>
            <exception cref="T:System.MissingMethodException">Thrown when no default constructor exists on actual type of <paramref name="target"/> object.</exception>
            <exception cref="T:System.Reflection.TargetInvocationException">Thrown when default constructor of actual type of <paramref name="target"/> throws an exception.</exception>
            <remarks>
            This method uses <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder"/> implementation to generate a proxy type.
            As such caller should expect any type of exception that given <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder"/> implementation may throw.
            </remarks>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerator.CreateInterfaceProxyWithTargetInterface(System.Type,System.Type[],System.Object,GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerationOptions,GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInterceptor[])">
            <summary>
            Creates proxy object intercepting calls to members of interface <paramref name="interfaceToProxy"/> on <paramref name="target"/> object with given <paramref name="interceptors"/>.
            Interceptors can use <see cref="T:GigaSpaces.Core.Internal.Castle.Core.Interceptor.IChangeProxyTarget"/> interface to provide other target for method invocation than default <paramref name="target"/>.
            </summary>
            <param name="interfaceToProxy">Type of the interface implemented by <paramref name="target"/> which will be proxied.</param>
            <param name="target">The target object, calls to which will be intercepted.</param>
            <param name="options">The proxy generation options used to influence generated proxy type and object.</param>
            <param name="additionalInterfacesToProxy">Additional interface types. Calls to their members will be proxied as well.</param>
            <param name="interceptors">The interceptors called during the invocation of proxied methods.</param>
            <returns>
            Object proxying calls to members of <paramref name="interfaceToProxy"/> and <paramref name="additionalInterfacesToProxy"/> types on <paramref name="target"/> object or alternative implementation swapped at runtime by an interceptor.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when given <paramref name="interfaceToProxy"/> object is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when given <paramref name="target"/> object is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when given <paramref name="interceptors"/> array is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException">Thrown when given <paramref name="interfaceToProxy"/> or any of <paramref name="additionalInterfacesToProxy"/> is a generic type definition.</exception>
            <exception cref="T:System.ArgumentException">Thrown when given <paramref name="interfaceToProxy"/> is not an interface type.</exception>
            <exception cref="T:System.ArgumentException">Thrown when given <paramref name="target"/> does not implement <paramref name="interfaceToProxy"/> interface.</exception>
            <exception cref="T:System.MissingMethodException">Thrown when no default constructor exists on actual type of <paramref name="target"/> object.</exception>
            <exception cref="T:System.Reflection.TargetInvocationException">Thrown when default constructor of actual type of <paramref name="target"/> throws an exception.</exception>
            <remarks>
            This method uses <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder"/> implementation to generate a proxy type.
            As such caller should expect any type of exception that given <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder"/> implementation may throw.
            </remarks>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerator.CreateInterfaceProxyWithoutTarget``1(GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInterceptor)">
            <summary>
            Creates proxy object intercepting calls to members of interface <typeparamref name="TInterface"/> on target object generated at runtime with given <paramref name="interceptor"/>.
            </summary>
            <typeparam name="TInterface">Type of the interface which will be proxied.</typeparam>
            <param name="interceptor">The interceptors called during the invocation of proxied methods.</param>
            <returns>
            Object proxying calls to members of <typeparamref name="TInterface"/> types on generated target object.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when given <paramref name="interceptor"/> object is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException">Thrown when given <typeparamref name="TInterface"/> is not an interface type.</exception>
            <remarks>
            Since this method uses an empty-shell implementation of interfaces to proxy generated at runtime, the actual implementation of proxied methods must be provided by given <see cref="T:GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInterceptor"/> implementations.
            They are responsible for setting return value (and out parameters) on proxied methods. It is also illegal for an interceptor to call <see cref="M:GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInvocation.Proceed"/>, since there's no actual implementation to proceed with.
            This method uses <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder"/> implementation to generate a proxy type.
            As such caller should expect any type of exception that given <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder"/> implementation may throw.
            </remarks>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerator.CreateInterfaceProxyWithoutTarget``1(GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInterceptor[])">
            <summary>
            Creates proxy object intercepting calls to members of interface <typeparamref name="TInterface"/> on target object generated at runtime with given <paramref name="interceptors"/>.
            </summary>
            <typeparam name="TInterface">Type of the interface which will be proxied.</typeparam>
            <param name="interceptors">The interceptors called during the invocation of proxied methods.</param>
            <returns>
            Object proxying calls to members of <typeparamref name="TInterface"/> types on generated target object.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when given <paramref name="interceptors"/> array is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException">Thrown when given <typeparamref name="TInterface"/> is not an interface type.</exception>
            <remarks>
            Since this method uses an empty-shell implementation of interfaces to proxy generated at runtime, the actual implementation of proxied methods must be provided by given <see cref="T:GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInterceptor"/> implementations.
            They are responsible for setting return value (and out parameters) on proxied methods. It is also illegal for an interceptor to call <see cref="M:GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInvocation.Proceed"/>, since there's no actual implementation to proceed with.
            As a result of that also at least one <see cref="T:GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInterceptor"/> implementation must be provided.
            This method uses <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder"/> implementation to generate a proxy type.
            As such caller should expect any type of exception that given <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder"/> implementation may throw.
            </remarks>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerator.CreateInterfaceProxyWithoutTarget(System.Type,GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInterceptor)">
            <summary>
            Creates proxy object intercepting calls to members of interface <paramref name="interfaceToProxy"/> on target object generated at runtime with given <paramref name="interceptor"/>.
            </summary>
            <param name="interfaceToProxy">Type of the interface which will be proxied.</param>
            <param name="interceptor">The interceptor called during the invocation of proxied methods.</param>
            <returns>
            Object proxying calls to members of <paramref name="interfaceToProxy"/> type on generated target object.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when given <paramref name="interfaceToProxy"/> object is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when given <paramref name="interceptor"/> object is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException">Thrown when given <paramref name="interfaceToProxy"/> is a generic type definition.</exception>
            <exception cref="T:System.ArgumentException">Thrown when given <paramref name="interfaceToProxy"/> is not an interface type.</exception>
            <remarks>
            Since this method uses an empty-shell implementation of interfaces to proxy generated at runtime, the actual implementation of proxied methods must be provided by given <see cref="T:GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInterceptor"/> implementations.
            They are responsible for setting return value (and out parameters) on proxied methods. It is also illegal for an interceptor to call <see cref="M:GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInvocation.Proceed"/>, since there's no actual implementation to proceed with.
            This method uses <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder"/> implementation to generate a proxy type.
            As such caller should expect any type of exception that given <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder"/> implementation may throw.
            </remarks>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerator.CreateInterfaceProxyWithoutTarget(System.Type,GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInterceptor[])">
            <summary>
            Creates proxy object intercepting calls to members of interface <paramref name="interfaceToProxy"/> on target object generated at runtime with given <paramref name="interceptors"/>.
            </summary>
            <param name="interfaceToProxy">Type of the interface which will be proxied.</param>
            <param name="interceptors">The interceptors called during the invocation of proxied methods.</param>
            <returns>
            Object proxying calls to members of <paramref name="interfaceToProxy"/> type on generated target object.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when given <paramref name="interfaceToProxy"/> object is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when given <paramref name="interceptors"/> array is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException">Thrown when given <paramref name="interfaceToProxy"/> is a generic type definition.</exception>
            <exception cref="T:System.ArgumentException">Thrown when given <paramref name="interfaceToProxy"/> is not an interface type.</exception>
            <remarks>
            Since this method uses an empty-shell implementation of interfaces to proxy generated at runtime, the actual implementation of proxied methods must be provided by given <see cref="T:GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInterceptor"/> implementations.
            They are responsible for setting return value (and out parameters) on proxied methods. It is also illegal for an interceptor to call <see cref="M:GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInvocation.Proceed"/>, since there's no actual implementation to proceed with.
            This method uses <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder"/> implementation to generate a proxy type.
            As such caller should expect any type of exception that given <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder"/> implementation may throw.
            </remarks>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerator.CreateInterfaceProxyWithoutTarget(System.Type,System.Type[],GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInterceptor[])">
            <summary>
            Creates proxy object intercepting calls to members of interface <paramref name="interfaceToProxy"/> on target object generated at runtime with given <paramref name="interceptors"/>.
            </summary>
            <param name="interfaceToProxy">Type of the interface which will be proxied.</param>
            <param name="additionalInterfacesToProxy">Additional interface types. Calls to their members will be proxied as well.</param>
            <param name="interceptors">The interceptors called during the invocation of proxied methods.</param>
            <returns>
            Object proxying calls to members of <paramref name="interfaceToProxy"/> and <paramref name="additionalInterfacesToProxy"/> types on generated target object.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when given <paramref name="interfaceToProxy"/> object is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when given <paramref name="interceptors"/> array is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException">Thrown when given <paramref name="interfaceToProxy"/> or any of <paramref name="additionalInterfacesToProxy"/> is a generic type definition.</exception>
            <exception cref="T:System.ArgumentException">Thrown when given <paramref name="interfaceToProxy"/> is not an interface type.</exception>
            <remarks>
            Since this method uses an empty-shell implementation of interfaces to proxy generated at runtime, the actual implementation of proxied methods must be provided by given <see cref="T:GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInterceptor"/> implementations.
            They are responsible for setting return value (and out parameters) on proxied methods. It is also illegal for an interceptor to call <see cref="M:GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInvocation.Proceed"/>, since there's no actual implementation to proceed with.
            This method uses <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder"/> implementation to generate a proxy type.
            As such caller should expect any type of exception that given <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder"/> implementation may throw.
            </remarks>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerator.CreateInterfaceProxyWithoutTarget(System.Type,System.Type[],GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerationOptions,GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInterceptor[])">
            <summary>
            Creates proxy object intercepting calls to members of interface <paramref name="interfaceToProxy"/> on target object generated at runtime with given <paramref name="interceptors"/>.
            </summary>
            <param name="interfaceToProxy">Type of the interface which will be proxied.</param>
            <param name="options">The proxy generation options used to influence generated proxy type and object.</param>
            <param name="additionalInterfacesToProxy">Additional interface types. Calls to their members will be proxied as well.</param>
            <param name="interceptors">The interceptors called during the invocation of proxied methods.</param>
            <returns>
            Object proxying calls to members of <paramref name="interfaceToProxy"/> and <paramref name="additionalInterfacesToProxy"/> types on generated target object.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when given <paramref name="interfaceToProxy"/> object is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when given <paramref name="interceptors"/> array is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException">Thrown when given <paramref name="interfaceToProxy"/> or any of <paramref name="additionalInterfacesToProxy"/> is a generic type definition.</exception>
            <exception cref="T:System.ArgumentException">Thrown when given <paramref name="interfaceToProxy"/> is not an interface type.</exception>
            <remarks>
            Since this method uses an empty-shell implementation of <paramref name="additionalInterfacesToProxy"/> to proxy generated at runtime, the actual implementation of proxied methods must be provided by given <see cref="T:GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInterceptor"/> implementations.
            They are responsible for setting return value (and out parameters) on proxied methods. It is also illegal for an interceptor to call <see cref="M:GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInvocation.Proceed"/>, since there's no actual implementation to proceed with.
            This method uses <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder"/> implementation to generate a proxy type.
            As such caller should expect any type of exception that given <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder"/> implementation may throw.
            </remarks>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerator.CreateClassProxy``1(GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInterceptor[])">
            <summary>
            Creates proxy object intercepting calls to virtual members of type <typeparamref name="TClass"/> on newly created instance of that type with given <paramref name="interceptors"/>.
            </summary>
            <typeparam name="TClass">Type of class which will be proxied.</typeparam>
            <param name="interceptors">The interceptors called during the invocation of proxied methods.</param>
            <returns>
            New object of type <typeparamref name="TClass"/> proxying calls to virtual members of <typeparamref name="TClass"/> type.
            </returns>
            <exception cref="T:System.ArgumentException">Thrown when given <typeparamref name="TClass"/> is not a class type.</exception>
            <exception cref="T:System.MissingMethodException">Thrown when no default constructor exists on type <typeparamref name="TClass"/>.</exception>
            <exception cref="T:System.Reflection.TargetInvocationException">Thrown when default constructor of type <typeparamref name="TClass"/> throws an exception.</exception>
            <remarks>
            This method uses <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder"/> implementation to generate a proxy type.
            As such caller should expect any type of exception that given <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder"/> implementation may throw.
            </remarks>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerator.CreateClassProxy(System.Type,GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInterceptor[])">
            <summary>
            Creates proxy object intercepting calls to virtual members of type <paramref name="classToProxy"/> on newly created instance of that type with given <paramref name="interceptors"/>.
            </summary>
            <param name="classToProxy">Type of class which will be proxied.</param>
            <param name="interceptors">The interceptors called during the invocation of proxied methods.</param>
            <returns>
            New object of type <paramref name="classToProxy"/> proxying calls to virtual members of <paramref name="classToProxy"/> type.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when given <paramref name="classToProxy"/> object is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException">Thrown when given <paramref name="classToProxy"/> is a generic type definition.</exception>
            <exception cref="T:System.ArgumentException">Thrown when given <paramref name="classToProxy"/> is not a class type.</exception>
            <exception cref="T:System.MissingMethodException">Thrown when no default constructor exists on type <paramref name="classToProxy"/>.</exception>
            <exception cref="T:System.Reflection.TargetInvocationException">Thrown when default constructor of type <paramref name="classToProxy"/> throws an exception.</exception>
            <remarks>
            This method uses <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder"/> implementation to generate a proxy type.
            As such caller should expect any type of exception that given <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder"/> implementation may throw.
            </remarks>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerator.CreateClassProxy(System.Type,System.Type[],GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInterceptor[])">
            <summary>
            Creates proxy object intercepting calls to virtual members of type <paramref name="classToProxy"/> on newly created instance of that type with given <paramref name="interceptors"/>.
            </summary>
            <param name="classToProxy">Type of class which will be proxied.</param>
            <param name="additionalInterfacesToProxy">Additional interface types. Calls to their members will be proxied as well.</param>
            <param name="interceptors">The interceptors called during the invocation of proxied methods.</param>
            <returns>
            New object of type <paramref name="classToProxy"/> proxying calls to virtual members of <paramref name="classToProxy"/> and <paramref name="additionalInterfacesToProxy"/> types.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when given <paramref name="classToProxy"/> object is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException">Thrown when given <paramref name="classToProxy"/> or any of <paramref name="additionalInterfacesToProxy"/> is a generic type definition.</exception>
            <exception cref="T:System.ArgumentException">Thrown when given <paramref name="classToProxy"/> is not a class type.</exception>
            <exception cref="T:System.MissingMethodException">Thrown when no default constructor exists on type <paramref name="classToProxy"/>.</exception>
            <exception cref="T:System.Reflection.TargetInvocationException">Thrown when default constructor of type <paramref name="classToProxy"/> throws an exception.</exception>
            <remarks>
            This method uses <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder"/> implementation to generate a proxy type.
            As such caller should expect any type of exception that given <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder"/> implementation may throw.
            </remarks>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerator.CreateClassProxy(System.Type,GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInterceptor[],System.Object[])">
            <summary>
            Creates proxy object intercepting calls to virtual members of type <paramref name="classToProxy"/> on newly created instance of that type with given <paramref name="interceptors"/>.
            </summary>
            <param name="classToProxy">Type of class which will be proxied.</param>
            <param name="constructorArguments">Arguments of constructor of type <paramref name="classToProxy"/> which should be used to create a new instance of that type.</param>
            <param name="interceptors">The interceptors called during the invocation of proxied methods.</param>
            <returns>
            New object of type <paramref name="classToProxy"/> proxying calls to virtual members of <paramref name="classToProxy"/> type.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when given <paramref name="classToProxy"/> object is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException">Thrown when given <paramref name="classToProxy"/> is a generic type definition.</exception>
            <exception cref="T:System.ArgumentException">Thrown when given <paramref name="classToProxy"/> is not a class type.</exception>
            <exception cref="T:System.MissingMethodException">Thrown when no constructor exists on type <paramref name="classToProxy"/> with parameters matching <paramref name="constructorArguments"/>.</exception>
            <exception cref="T:System.Reflection.TargetInvocationException">Thrown when constructor of type <paramref name="classToProxy"/> throws an exception.</exception>
            <remarks>
            This method uses <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder"/> implementation to generate a proxy type.
            As such caller should expect any type of exception that given <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder"/> implementation may throw.
            </remarks>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerator.CreateClassProxy(System.Type,GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerationOptions,GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInterceptor[])">
            <summary>
            Creates proxy object intercepting calls to virtual members of type <paramref name="classToProxy"/> on newly created instance of that type with given <paramref name="interceptors"/>.
            </summary>
            <param name="classToProxy">Type of class which will be proxied.</param>
            <param name="options">The proxy generation options used to influence generated proxy type and object.</param>
            <param name="interceptors">The interceptors called during the invocation of proxied methods.</param>
            <returns>
            New object of type <paramref name="classToProxy"/> proxying calls to virtual members of <paramref name="classToProxy"/> type.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when given <paramref name="classToProxy"/> object is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when given <paramref name="options"/> object is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException">Thrown when given <paramref name="classToProxy"/> is a generic type definition.</exception>
            <exception cref="T:System.ArgumentException">Thrown when given <paramref name="classToProxy"/> is not a class type.</exception>
            <exception cref="T:System.MissingMethodException">Thrown when no default constructor exists on type <paramref name="classToProxy"/>.</exception>
            <exception cref="T:System.Reflection.TargetInvocationException">Thrown when default constructor of type <paramref name="classToProxy"/> throws an exception.</exception>
            <remarks>
            This method uses <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder"/> implementation to generate a proxy type.
            As such caller should expect any type of exception that given <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder"/> implementation may throw.
            </remarks>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerator.CreateClassProxy(System.Type,System.Type[],GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerationOptions,GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInterceptor[])">
            <summary>
            Creates proxy object intercepting calls to virtual members of type <paramref name="classToProxy"/> on newly created instance of that type with given <paramref name="interceptors"/>.
            </summary>
            <param name="classToProxy">Type of class which will be proxied.</param>
            <param name="additionalInterfacesToProxy">Additional interface types. Calls to their members will be proxied as well.</param>
            <param name="options">The proxy generation options used to influence generated proxy type and object.</param>
            <param name="interceptors">The interceptors called during the invocation of proxied methods.</param>
            <returns>
            New object of type <paramref name="classToProxy"/> proxying calls to virtual members of <paramref name="classToProxy"/> and <paramref name="additionalInterfacesToProxy"/> types.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when given <paramref name="classToProxy"/> object is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when given <paramref name="options"/> object is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException">Thrown when given <paramref name="classToProxy"/> or any of <paramref name="additionalInterfacesToProxy"/> is a generic type definition.</exception>
            <exception cref="T:System.ArgumentException">Thrown when given <paramref name="classToProxy"/> is not a class type.</exception>
            <exception cref="T:System.MissingMethodException">Thrown when no default constructor exists on type <paramref name="classToProxy"/>.</exception>
            <exception cref="T:System.Reflection.TargetInvocationException">Thrown when default constructor of type <paramref name="classToProxy"/> throws an exception.</exception>
            <remarks>
            This method uses <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder"/> implementation to generate a proxy type.
            As such caller should expect any type of exception that given <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder"/> implementation may throw.
            </remarks>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerator.CreateClassProxy(System.Type,System.Type[],GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerationOptions,System.Object[],GigaSpaces.Core.Internal.Castle.Core.Interceptor.IInterceptor[])">
            <summary>
            Creates proxy object intercepting calls to virtual members of type <paramref name="classToProxy"/> on newly created instance of that type with given <paramref name="interceptors"/>.
            </summary>
            <param name="classToProxy">Type of class which will be proxied.</param>
            <param name="additionalInterfacesToProxy">Additional interface types. Calls to their members will be proxied as well.</param>
            <param name="options">The proxy generation options used to influence generated proxy type and object.</param>
            <param name="constructorArguments">Arguments of constructor of type <paramref name="classToProxy"/> which should be used to create a new instance of that type.</param>
            <param name="interceptors">The interceptors called during the invocation of proxied methods.</param>
            <returns>
            New object of type <paramref name="classToProxy"/> proxying calls to virtual members of <paramref name="classToProxy"/> and <paramref name="additionalInterfacesToProxy"/> types.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when given <paramref name="classToProxy"/> object is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when given <paramref name="options"/> object is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException">Thrown when given <paramref name="classToProxy"/> or any of <paramref name="additionalInterfacesToProxy"/> is a generic type definition.</exception>
            <exception cref="T:System.ArgumentException">Thrown when given <paramref name="classToProxy"/> is not a class type.</exception>
            <exception cref="T:System.MissingMethodException">Thrown when no constructor exists on type <paramref name="classToProxy"/> with parameters matching <paramref name="constructorArguments"/>.</exception>
            <exception cref="T:System.Reflection.TargetInvocationException">Thrown when constructor of type <paramref name="classToProxy"/> throws an exception.</exception>
            <remarks>
            This method uses <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder"/> implementation to generate a proxy type.
            As such caller should expect any type of exception that given <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.IProxyBuilder"/> implementation may throw.
            </remarks>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerator.CreateClassProxyType(System.Type,System.Type[],GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerationOptions)">
            <summary>
            Creates the proxy type for class proxy with given <paramref name="classToProxy"/> class, implementing given <paramref name="additionalInterfacesToProxy"/> and using provided <paramref name="options"/>.
            </summary>
            <param name="classToProxy">The base class for proxy type.</param>
            <param name="additionalInterfacesToProxy">The interfaces that proxy type should implement.</param>
            <param name="options">The options for proxy generation process.</param>
            <returns><see cref="T:System.Type"/> of proxy.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerator.CreateInterfaceProxyTypeWithTarget(System.Type,System.Type[],System.Type,GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerationOptions)">
            <summary>
            Creates the proxy type for interface proxy with target for given <paramref name="interfaceToProxy"/> interface, implementing given <paramref name="additionalInterfacesToProxy"/> on given <paramref name="targetType"/> and using provided <paramref name="options"/>.
            </summary>
            <param name="interfaceToProxy">The interface proxy type should implement.</param>
            <param name="additionalInterfacesToProxy">The additional interfaces proxy type should implement.</param>
            <param name="targetType">Actual type that the proxy type will encompass.</param>
            <param name="options">The options for proxy generation process.</param>
            <returns><see cref="T:System.Type"/> of proxy.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerator.CreateInterfaceProxyTypeWithTargetInterface(System.Type,System.Type[],System.Type,GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerationOptions)">
            <summary>
            Creates the proxy type for interface proxy with target interface for given <paramref name="interfaceToProxy"/> interface, implementing given <paramref name="additionalInterfacesToProxy"/> on given <paramref name="targetType"/> and using provided <paramref name="options"/>.
            </summary>
            <param name="interfaceToProxy">The interface proxy type should implement.</param>
            <param name="additionalInterfacesToProxy">The additional interfaces proxy type should implement.</param>
            <param name="targetType">Actual type that the proxy type will encompass.</param>
            <param name="options">The options for proxy generation process.</param>
            <returns><see cref="T:System.Type"/> of proxy.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerator.CreateInterfaceProxyTypeWithoutTarget(System.Type,System.Type[],GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerationOptions)">
            <summary>
            Creates the proxy type for interface proxy without target for given <paramref name="interfaceToProxy"/> interface, implementing given <paramref name="additionalInterfacesToProxy"/> and using provided <paramref name="options"/>.
            </summary>
            <param name="interfaceToProxy">The interface proxy type should implement.</param>
            <param name="additionalInterfacesToProxy">The additional interfaces proxy type should implement.</param>
            <param name="options">The options for proxy generation process.</param>
            <returns><see cref="T:System.Type"/> of proxy.</returns>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.DynamicProxy.ProxyGenerator.ProxyBuilder">
            <summary>
            Gets the proxy builder instance used to generate proxy types.
            </summary>
            <value>The proxy builder.</value>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.RemotableInvocation.Proceed">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.DynamicProxy.RemotableInvocation.Method">
            <summary>
            
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.DynamicProxy.RemotableInvocation.MethodInvocationTarget">
            <summary>
            For interface proxies, this will point to the
            <see cref="T:System.Reflection.MethodInfo"/> on the target class
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.Serialization.ProxyObjectReference">
            <summary>
            Handles the deserialization of proxies.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.Serialization.ProxyObjectReference.ResetScope">
            <summary>
            Resets the <see cref="P:GigaSpaces.Core.Internal.Castle.DynamicProxy.Serialization.ProxyObjectReference.ModuleScope"/> used for deserialization to a new scope.
            </summary>
            <remarks>This is useful for test cases.</remarks>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.Serialization.ProxyObjectReference.SetScope(GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope)">
            <summary>
            Resets the <see cref="P:GigaSpaces.Core.Internal.Castle.DynamicProxy.Serialization.ProxyObjectReference.ModuleScope"/> used for deserialization to a given <paramref name="scope"/>.
            </summary>
            <param name="scope">The scope to be used for deserialization.</param>
            <remarks>By default, the deserialization process uses a different scope than the rest of the application, which can lead to multiple proxies
            being generated for the same type. By explicitly setting the deserialization scope to the application's scope, this can be avoided.</remarks>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Castle.DynamicProxy.Serialization.ProxyObjectReference.ModuleScope">
            <summary>
            Gets the <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope"/> used for deserialization.
            </summary>
            <value>As <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.Serialization.ProxyObjectReference"/> has no way of automatically determining the scope used by the application (and the application
            might use more than one scope at the same time), <see cref="T:GigaSpaces.Core.Internal.Castle.DynamicProxy.Serialization.ProxyObjectReference"/> uses a dedicated scope instance for deserializing proxy
            types. This instance can be reset and set to a specific value via <see cref="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.Serialization.ProxyObjectReference.ResetScope"/> and <see cref="M:GigaSpaces.Core.Internal.Castle.DynamicProxy.Serialization.ProxyObjectReference.SetScope(GigaSpaces.Core.Internal.Castle.DynamicProxy.ModuleScope)"/>.</value>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Pbs.Commands.Admin.BaseGenericAdminProxy">
            <summary>
            For internal use, a base class for all generic service grid related proxies
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Commands.Admin.BaseGenericAdminProxy.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>. </param><exception cref="T:System.NullReferenceException">The <paramref name="obj"/> parameter is null.</exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Commands.Admin.BaseGenericAdminProxy.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:GigaSpaces.Core.Internal.DispatcherObjectProxy">
            <summary>
            A base class for all the objects that are a proxy to a an object that uses
            the dispatcher to activate the instance behind the proxy
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Commands.ISpaceProxy.PbsISpaceProxyExecuteTask.Execute``1(GigaSpaces.Core.Internal.Providers.Cmd.CmdSpaceProxy,GigaSpaces.Core.Internal.SpaceProxy.ExecuteTaskActionInfo{``0}@)">
            <summary>
            Executes a space task on a given proxy in a blocking fashion
            </summary>
            <typeparam name="T"></typeparam>
            <param name="proxy"></param>
            <param name="actionInfo"></param>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Commands.ISpaceProxy.PbsISpaceProxyExecuteTask.Execute``1(GigaSpaces.Core.Internal.Providers.Cmd.CmdSpaceProxy,System.Int64,GigaSpaces.Core.Internal.SpaceProxy.ExecuteTaskActionInfo{``0}@)">
            <summary>
            Executes a space task on a give proxy
            </summary>
            <param name="proxy">proxy to execute on</param>
            <param name="callbackHandleId">async result callback handle id</param>
            <param name="actionInfo">action info</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Commands.ISpaceProxy.PbsISpaceProxyExecuteTask.Execute``2(GigaSpaces.Core.Internal.Providers.Cmd.CmdSpaceProxy,System.Int64,GigaSpaces.Core.Internal.SpaceProxy.ExecuteDistributedTaskActionInfo{``0,``1}@)">
            <summary>
            Executes a distributed space task on a give proxy
            </summary>
            <param name="proxy">proxy to execute on</param>
            <param name="reducerCallbackHandleId">reducer callback handle id</param>
            <param name="actionInfo">action info</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Commands.StaticBundle.PbsStaticSpaceInitIndSetInitializer.Execute">
            <summary>
            Executes SpaceInitializationIndicator.setInitializer()
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Commands.StaticBundle.PbsStaticSpaceInitIndUnsetInitializer.Execute">
            <summary>
            Executes SpaceInitializationIndicator.setInitializer()
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Pbs.Executers.IPbsExecutersBundle`1">
            <summary>
            Contain a bundle of PbsDelegates that are logically interected
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Executers.IPbsExecutersBundle`1.Execute(System.Byte,System.Int64,GigaSpaces.Core.Internal.Pbs.PbsInputStream,GigaSpaces.Core.Internal.Pbs.PbsOutputStream)">
            <summary>
            Executes the command
            </summary>
            <param name="operationCode">Executer's code</param>
            <param name="input">Input stream containing command data serialzied</param>
            <param name="output">Output stream to serialize the result into</param>
            <param name="handleId">handle Id</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Executers.IPbsExecutersBundle`1.GetHandle(System.Int64)">
            <summary>
            Gets an handle
            </summary>
            <param name="handleId">Handle's Id</param>
            <returns>Handle correspondong to the operation code</returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Executers.IPbsExecutersBundle`1.AddHandle(`0)">
            <summary>
            Adds an handle
            </summary>
            <param name="handle">Handle to add</param>
            <returns>handle's Id</returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Executers.IPbsExecutersBundle`1.RemoveHandle(System.Int64)">
            <summary>
            Removes an handle
            </summary>
            <param name="handleId">Handle's Id</param>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Pbs.Executers.PbsExecutersBundle`1.DestructCommand">
            <summary>
            Code the represent destruct command, any implementing bundles should not use this code
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Executers.PbsExecutersBundle`1.Execute(System.Byte,System.Int64,GigaSpaces.Core.Internal.Pbs.PbsInputStream,GigaSpaces.Core.Internal.Pbs.PbsOutputStream)">
            <summary>
            Executes the command
            </summary>
            <param name="operationCode">Executer's code</param>
            <param name="input">Input stream containing command data serialzied</param>
            <param name="output">Output stream to serialize the result into</param>
            <param name="handleId">handle Id</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Executers.PbsExecutersBundle`1.Destruct(`0,System.Int64,GigaSpaces.Core.Internal.Pbs.PbsInputStream,GigaSpaces.Core.Internal.Pbs.PbsOutputStream)">
            <summary>
            Empty implementation of destruct, a bundle who needs to do something on destruct
            should override this method
            </summary>
            <param name="instance">Instance that was removed</param>
            <param name="handleId">Handle id for the instance that was removed</param>
            <param name="input">Input stream</param>
            <param name="output">Output stream</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Executers.PbsExecutersBundle`1.GetHandle(System.Int64)">
            <summary>
            Gets an handle
            </summary>
            <param name="handleId">Handle's kkId</param>
            <returns>Handle correspondong to the operation code</returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Executers.PbsExecutersBundle`1.AddHandle(`0)">
            <summary>
            Adds an handle
            </summary>
            <param name="handle">Handle to add</param>
            <returns>handle's Id</returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Executers.PbsExecutersBundle`1.RemoveHandle(System.Int64)">
            <summary>
            Removes an handle
            </summary>
            <param name="handleId">Handle's Id</param>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Pbs.Executers.IPbsExecuter">
            <summary>
            Pbs Executer interface, received a command and executes it and returns the value
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Executers.IPbsExecuter.Execute(GigaSpaces.Core.Internal.Pbs.PbsInputStream,GigaSpaces.Core.Internal.Pbs.PbsOutputStream,System.Int64)">
            <summary>
            Executes a given command
            </summary>
            <param name="input">Serialize command</param>
            <param name="output">Stream to serialize </param>
            <param name="handleId">handle to execute the operation on</param>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Pbs.Executers.ExecuteCommandResult">
            <summary>
            For internal use
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Executers.ExecutorCallbacks.PbsExecutorCallbackExecuteTask.Execute(GigaSpaces.Core.Internal.Pbs.PbsInputStream,GigaSpaces.Core.Internal.Pbs.PbsOutputStream,System.Int64)">
            <summary>
            Executes a given command
            </summary>
            <param name="input">Serialize command</param>
            <param name="output">Stream to serialize </param>
            <param name="handleId">handle to execute the operation on</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Executers.ExecutorCallbacks.PbsExecutorCallbackFilterOnResult.Execute(GigaSpaces.Core.Internal.Pbs.PbsInputStream,GigaSpaces.Core.Internal.Pbs.PbsOutputStream,System.Int64)">
            <summary>
            Executes a given command
            </summary>
            <param name="input">Serialize command</param>
            <param name="output">Stream to serialize </param>
            <param name="handleId">handle to execute the operation on</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Executers.ExecutorCallbacks.PbsExecutorCallbackReduce.Execute(GigaSpaces.Core.Internal.Pbs.PbsInputStream,GigaSpaces.Core.Internal.Pbs.PbsOutputStream,System.Int64)">
            <summary>
            Executes a given command
            </summary>
            <param name="input">Serialize command</param>
            <param name="output">Stream to serialize </param>
            <param name="handleId">handle to execute the operation on</param>
        </member>
        <member name="T:GigaSpaces.XAP.ProcessingUnit.Containers.ServiceGrid.IServiceMonitors">
            <summary>
            Provide monitoring of a generic service that exists within a processing unit.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.ProcessingUnit.Containers.ServiceGrid.IServiceMonitors.Id">
            <summary>
            Gets the id of the service monitor, usually the service id.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.ProcessingUnit.Containers.ServiceGrid.IServiceMonitors.Details">
            <summary>
            Gets the service details associated to this monitor,
            Should not be implemented, this will be automatically filled at the client side
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.ProcessingUnit.Containers.ServiceGrid.IServiceMonitors.Monitors">
            <summary>
            Gets the monitor values
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Pbs.PbsInputStream">
            <summary>
            For internal use
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Pbs.ReusableReadonlyByteArrayStream">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.ReusableReadonlyByteArrayStream.Flush">
            <summary>
            When overridden in a derived class, clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
            <exception cref="T:System.IO.IOException">An I/O error occurs. 
                            </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.ReusableReadonlyByteArrayStream.GetBuffer">
            <summary>
            Gets the underlying buffer
            </summary>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.ReusableReadonlyByteArrayStream.SetBuffer(System.Byte[])">
            <summary>
            Sets the underlying buffer and reset the stream
            </summary>
            <param name="buffer">new buffer</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.ReusableReadonlyByteArrayStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            When overridden in a derived class, reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <returns>
            The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.
            </returns>
            <param name="buffer">An array of bytes. When this method returns, the buffer contains the specified byte array with the values between <paramref name="offset"/> and (<paramref name="offset"/> + <paramref name="count"/> - 1) replaced by the bytes read from the current source. 
                            </param><param name="offset">The zero-based byte offset in <paramref name="buffer"/> at which to begin storing the data read from the current stream. 
                            </param><param name="count">The maximum number of bytes to be read from the current stream. 
                            </param><exception cref="T:System.ArgumentException">The sum of <paramref name="offset"/> and <paramref name="count"/> is larger than the buffer length. 
                            </exception><exception cref="T:System.ArgumentNullException"><paramref name="buffer"/> is null. 
                            </exception><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset"/> or <paramref name="count"/> is negative. 
                            </exception><exception cref="T:System.IO.IOException">An I/O error occurs. 
                            </exception><exception cref="T:System.NotSupportedException">The stream does not support reading. 
                            </exception><exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. 
                            </exception><filterpriority>1</filterpriority>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.ReusableReadonlyByteArrayStream.ReadByte">
            <summary>
            Reads a byte from the stream and advances the position within the stream by one byte, or returns -1 if at the end of the stream.
            </summary>
            <returns>
            The unsigned byte cast to an Int32, or -1 if at the end of the stream.
            </returns>
            <exception cref="T:System.NotSupportedException">The stream does not support reading. 
                            </exception><exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. 
                            </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.ReusableReadonlyByteArrayStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            When overridden in a derived class, sets the position within the current stream.
            </summary>
            <returns>
            The new position within the current stream.
            </returns>
            <param name="offset">A byte offset relative to the <paramref name="origin"/> parameter. 
                            </param><param name="origin">A value of type <see cref="T:System.IO.SeekOrigin"/> indicating the reference point used to obtain the new position. 
                            </param><exception cref="T:System.IO.IOException">An I/O error occurs. 
                            </exception><exception cref="T:System.NotSupportedException">The stream does not support seeking, such as if the stream is constructed from a pipe or console output. 
                            </exception><exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. 
                            </exception><filterpriority>1</filterpriority>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.ReusableReadonlyByteArrayStream.SetLength(System.Int64)">
            <summary>
            When overridden in a derived class, sets the length of the current stream.
            </summary>
            <param name="value">The desired length of the current stream in bytes. 
                            </param><exception cref="T:System.IO.IOException">An I/O error occurs. 
                            </exception><exception cref="T:System.NotSupportedException">The stream does not support both writing and seeking, such as if the stream is constructed from a pipe or console output. 
                            </exception><exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. 
                            </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.ReusableReadonlyByteArrayStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            When overridden in a derived class, writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
            <param name="buffer">An array of bytes. This method copies <paramref name="count"/> bytes from <paramref name="buffer"/> to the current stream. 
                            </param><param name="offset">The zero-based byte offset in <paramref name="buffer"/> at which to begin copying bytes to the current stream. 
                            </param><param name="count">The number of bytes to be written to the current stream. 
                            </param><exception cref="T:System.ArgumentException">The sum of <paramref name="offset"/> and <paramref name="count"/> is greater than the buffer length. 
                            </exception><exception cref="T:System.ArgumentNullException"><paramref name="buffer"/> is null. 
                            </exception><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset"/> or <paramref name="count"/> is negative. 
                            </exception><exception cref="T:System.IO.IOException">An I/O error occurs. 
                            </exception><exception cref="T:System.NotSupportedException">The stream does not support writing. 
                            </exception><exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. 
                            </exception><filterpriority>1</filterpriority>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.ReusableReadonlyByteArrayStream.WriteByte(System.Byte)">
            <summary>
            Writes a byte to the current position in the stream and advances the position within the stream by one byte.
            </summary>
            <param name="value">The byte to write to the stream. 
                            </param><exception cref="T:System.IO.IOException">An I/O error occurs. 
                            </exception><exception cref="T:System.NotSupportedException">The stream does not support writing, or the stream is already closed. 
                            </exception><exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. 
                            </exception><filterpriority>2</filterpriority>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Pbs.ReusableReadonlyByteArrayStream.CanRead">
            <summary>
            When overridden in a derived class, gets a value indicating whether the current stream supports reading.
            </summary>
            <returns>
            true if the stream supports reading; otherwise, false.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Pbs.ReusableReadonlyByteArrayStream.CanSeek">
            <summary>
            When overridden in a derived class, gets a value indicating whether the current stream supports seeking.
            </summary>
            <returns>
            true if the stream supports seeking; otherwise, false.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Pbs.ReusableReadonlyByteArrayStream.CanWrite">
            <summary>
            When overridden in a derived class, gets a value indicating whether the current stream supports writing.
            </summary>
            <returns>
            true if the stream supports writing; otherwise, false.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Pbs.ReusableReadonlyByteArrayStream.Length">
            <summary>
            When overridden in a derived class, gets the length in bytes of the stream.
            </summary>
            <returns>
            A long value representing the length of the stream in bytes.
            </returns>
            <exception cref="T:System.NotSupportedException">A class derived from Stream does not support seeking. 
                            </exception><exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. 
                            </exception><filterpriority>1</filterpriority>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Pbs.ReusableReadonlyByteArrayStream.Position">
            <summary>
            When overridden in a derived class, gets or sets the position within the current stream.
            </summary>
            <returns>
            The current position within the stream.
            </returns>
            <exception cref="T:System.IO.IOException">An I/O error occurs. 
                            </exception><exception cref="T:System.NotSupportedException">The stream does not support seeking. 
                            </exception><exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. 
                            </exception><filterpriority>1</filterpriority>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.PbsInputStream.ReadInt16">
            <summary>
            Reads a 16-bit signed integer from the stream.
            Stream footprint: dynamic, 1-3 bytes.
            </summary>
            <returns>The value read from the stream.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.PbsInputStream.ReadInt32">
            <summary>
            Reads a 32-bit signed integer from the stream.
            Stream footprint: dynamic, 1-5 bytes.
            </summary>
            <returns>The value read from the stream.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.PbsInputStream.ReadInt32Fixed">
            <summary>
            Reads a 32-bit signed integer from the stream in a fixed width.
            Stream footprint: fixed, 4 bytes.
            </summary>
            <returns>The value read from the stream.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.PbsInputStream.ReadInt64">
            <summary>
            Reads a 64-bit signed integer from the stream.
            Stream footprint: dynamic, 1-9 bytes.
            </summary>
            <returns>The value read from the stream.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.PbsInputStream.ReadSingle">
            <summary>
            Reads a single-precision floating-point number from the stream.
            Stream footprint: dynamic, same as Int32.
            </summary>
            <returns>The value read from the stream.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.PbsInputStream.ReadDouble">
            <summary>
            Reads a double-precision floating-point number from the stream.
            Stream footprint: dynamic, same as Int64.
            </summary>
            <returns>The value read from the stream.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.PbsInputStream.ReadBoolean">
            <summary>
            Reads a boolean value from the stream.
            Stream footprint: Fixed, 1 byte.
            </summary>
            <returns>The value read from the stream.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.PbsInputStream.ReadChar">
            <summary>
            Reads a unicode character from the stream.
            Stream footprint: dynamic, 1-3 bytes.
            </summary>
            <returns>The value read from the stream.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.PbsInputStream.ReadString">
            <summary>
            Reads a string from the stream.
            </summary>
            <returns>The value read from the stream.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.PbsInputStream.ReadRepetitiveString">
            <summary>
            Reads a repetitive string from the stream.
            </summary>
            <returns>The value read from the stream.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.PbsInputStream.ReadDateTime(System.Boolean)">
            <summary>
            Reads a Date-and-Time value from the stream.
            Stream footprint: dynamic, same as Int64.
            </summary>
            <returns>The value read from the stream.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.PbsInputStream.ReadDecimal">
            <summary>
            Reads a decimal number from the stream.
            Stream footprint: the value is converted from a string.
            </summary>
            <returns>The value read from the stream.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.PbsInputStream.ReadGuid">
            <summary>
            Reads a globally unique identifier (GUID) from the stream.
            Stream footprint: Fixed, 16 bytes.
            </summary>
            <returns>The value read from the stream.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.PbsInputStream.ReadProperties(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Reads java properties and inserts them to a dictionary
            </summary>
            <param name="dictionary">Target dictionary</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.PbsOutputStream.WriteInt16(System.Int16)">
            <summary>
            Writes a 16-bit signed integer to the stream.
            Stream footprint: dynamic, 1-3 bytes.
            </summary>
            <param name="value">Value to write.</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.PbsOutputStream.WriteInt32(System.Int32)">
            <summary>
            Writes a 32-bit signed integer to the stream.
            Stream footprint: dynamic, 1-5 bytes.
            </summary>
            <param name="value">Value to write.</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.PbsOutputStream.WriteInt32Fixed(System.Int32)">
            <summary>
            Writes a 32-bit signed integer to the stream in a fixed width.
            Stream footprint: fixed, 4 bytes.
            </summary>
            <param name="value">Value to write.</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.PbsOutputStream.WriteInt64(System.Int64)">
            <summary>
            Writes a 64-bit signed integer to the stream.
            Stream footprint: dynamic, 1-9 bytes.
            </summary>
            <param name="value">Value to write.</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.PbsOutputStream.WriteSingle(System.Single)">
            <summary>
            Writes a single-precision floating-point number to the stream.
            Stream footprint: dynamic, same as Int32.
            </summary>
            <param name="value">Value to write.</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.PbsOutputStream.WriteDouble(System.Double)">
            <summary>
            Writes a double-precision floating-point number to the stream.
            Stream footprint: dynamic, same as Int64.
            </summary>
            <param name="value">Value to write.</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.PbsOutputStream.WriteBoolean(System.Boolean)">
            <summary>
            Writes a boolean value to the stream.
            Stream footprint: Fixed, 1 byte.
            </summary>
            <param name="value">Value to write.</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.PbsOutputStream.WriteChar(System.Char)">
            <summary>
            Writes a unicode character to the stream.
            Stream footprint: dynamic, 1-3 bytes.
            </summary>
            <param name="value">Value to write.</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.PbsOutputStream.WriteString(System.String)">
            <summary>
            Writes a string to the stream.
            </summary>
            <param name="value">Value to write.</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.PbsOutputStream.WriteDateTime(System.DateTime)">
            <summary>
            Writes a Date-and-Time value to the stream.
            Stream footprint: dynamic, same as Int64.
            </summary>
            <param name="value">Value to write.</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.PbsOutputStream.WriteDecimal(System.Decimal)">
            <summary>
            Writes a decimal number to the stream.
            Stream footprint: the value is converted to a string.
            </summary>
            <param name="value">Value to write.</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.PbsOutputStream.WriteGuid(System.Guid)">
            <summary>
            Writes a globally unique identifier (GUID) to the stream.
            Stream footprint: Fixed, 16 bytes.
            </summary>
            <param name="value">Value to write.</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.PbsOutputStream.WriteNullableBoolean(System.Nullable{System.Boolean})">
            <summary>
            Writes a nullable boolean value to the stream
            Stream foot print: Fixed, 1 byte.
            </summary>
            <param name="value">Value to write.</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.PbsOutputStream.WriteNullableInt(System.Nullable{System.Int32})">
            <summary>
            Writes a nullable int
            </summary>
            <param name="value">Value to write</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.PbsOutputStream.WriteNullableLong(System.Nullable{System.Int64})">
            <summary>
            Writes a nullable long
            </summary>
            <param name="value">Value to write</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.PbsOutputStream.WriteNullableGuid(System.Nullable{System.Guid})">
            <summary>
            Writes a nullable GUID.
            </summary>
            <param name="value">Value to write</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.PbsOutputStream.WriteProperties(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Write a string,string dictionary to the stream to be read as properties
            </summary>
            <param name="dictionary">Properties to write</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.PbsOutputStream.WriteProperties(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Write a string,string dictionary to the stream to be read as properties
            </summary>
            <param name="properties">Properties to write</param>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Pbs.PbsStreamResource">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.PbsStreamResource.GetExistingInputStream">
            <summary>
            For internal use, gets an input stream from the pool only if such
            exists.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.PbsStreamResource.GetInputStream(System.Byte[])">
            <summary>
            For internal use, gets an input stream from the resource pool that 
            wrapers the specified buffer
            </summary>
            <param name="buffer"></param>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.PbsStreamResource.ReleaseStream(GigaSpaces.Core.Internal.Pbs.PbsInputStream)">
            <summary>
            For internal use, release the given input stream and return it to the pool
            </summary>
            <param name="stream"></param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.PbsStreamResource.FlipGuidBytes(System.Byte[],System.Boolean)">
            <summary>
            This method assists in Guid/Uuid translation between CLR/JVM.
            In .Net, there's a difference between the storage and display.
            For example, if the ToString() method returns {01020304-0506-0708-090a-0b0c0d0e0f10},
            the ToByteArray() method will return {04,03,02,01,06,05,08,07,09,0a,0b,0c,0d,0e,0f,10}.
            This method flips the relevant bytes so those outputs are aligned.
             </summary>
            <param name="guidBytes"></param>
            <param name="isWritingTheGuid">Set to true if the GUID is written to the java side, false if red from the java side</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Commands.TransactionManager.PbsTransactionManagerCreateEmbeddedJiniTransactionManager.Execute">
            <summary>
            Create an embedded jini transaction manager
            </summary>
            <returns></returns>
        </member>
        <member name="T:GigaSpaces.Core.IReadByIdsResult`1">
            <summary>
            Holds enumerable results of the <see ref="ISpaceProxy.ReadByIds"/> operation.
            When enumerating through the results, null values are skipped.
            If you want to access null values, use the <see ref="IReadByIdsResult.ResultsArray"/> property.
            Results are ordered based on the list of Ids provided to the <see ref="ISpaceProxy.ReadByIds"/> method.
            </summary>
            <typeparam name="T">The result class type.</typeparam>
        </member>
        <member name="P:GigaSpaces.Core.IReadByIdsResult`1.ResultsArray">
            <summary>
            Gets the results array for the <see ref="ISpaceProxy.ReadByIds"/> operation.
            <para>The array's size is the same as that of the given Ids array.
            Unmatched Ids will have a null value in the corresponding results array index.</para>
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.ITakeByIdsResult`1">
            <summary>
            Holds enumerable results of the <see ref="ISpaceProxy.TakeByIds"/> operation.
            When enumerating through the results, null values are skipped.
            If you want to access null values, use the <see ref="ITakeByIdsResult.ResultsArray"/> property.
            Results are ordered based on the list of Ids provided to the <see ref="ISpaceProxy.TakeByIds"/> method.
            </summary>
            <typeparam name="T">The result class type.</typeparam>
        </member>
        <member name="P:GigaSpaces.Core.ITakeByIdsResult`1.ResultsArray">
            <summary>
            Gets the results array for the <see ref="ISpaceProxy.TakeByIds"/> operation.
            <para>The array's size is the same as that of the given Ids array.
            Unmatched Ids will have a null value in the corresponding results array index.</para>
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Utils.Concurrent.ConcurrentDictionary`2">
            <summary>
            Reader writer segment based concurrent dictionary
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Utils.Logger">
            <summary>
            Provides logging services for GigaSpaces .Net components.
            Note: This class is intended for internal logging purposes.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Utils.Logger.Log(GigaSpaces.Core.Internal.Utils.LogEvent)">
            <summary>
            Logs the specified event.
            </summary>
            <param name="logEvent">Event to log. See allso LogEvents</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Utils.Logger.Log(GigaSpaces.Core.Internal.Utils.LogEvent,System.Object[])">
            <summary>
            Logs the specified event with the dynamic arguments.
            </summary>
            <param name="logEvent">Event to log. See allso LogEvents</param>
            <param name="args">Dynamic runtime arguments.</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Utils.Logger.Log(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception)">
            <summary>
            Logs the specified event.
            </summary>
            <param name="logEvent">Event to log. See allso LogEvents</param>       
            <param name="ex"></param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Utils.Logger.Log(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception,System.Object[])">
            <summary>
            Logs the specified event with the dynamic arguments.
            </summary>
            <param name="logEvent">Event to log. See allso LogEvents</param>
            <param name="ex"></param>
            <param name="args">Dynamic runtime arguments.</param>  
        </member>
        <member name="M:GigaSpaces.Core.Internal.Utils.Logger.IsConfigurationSourceDefined(System.String)">
            <summary>
            Checks if the specified source exists in the configuration
            </summary>
            <param name="sourceName">Name of requested source.</param>
            <returns>True if the source is configured, false otherwise.</returns>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Utils.UpdateOnceCache`2">
            <summary>
            A cache based on copy on update dictionary assuming almost all accesses are read only.
            A [] access may return stale null value and should be retried with GetSafe to make sure it is a true
            null value
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="V"></typeparam>
        </member>
        <member name="T:GigaSpaces.Core.JiniTransactionManagerLookupInfo">
            <summary>
            Encapsulates information required to locate a JINI transaction manager.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.JiniTransactionManagerLookupInfo.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.JiniTransactionManagerLookupInfo.ServiceName">
            <summary>
            Gets or sets the transaction manager service name.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.JiniTransactionManagerLookupInfo.LookupHost">
            <summary>
            Gets or sets the lookup host.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.JiniTransactionManagerLookupInfo.Groups">
            <summary>
            Gets or sets the lookup groups.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.JiniTransactionManagerLookupInfo.Timeout">
            <summary>
            Gets or sets the maximum timeout.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.JiniTransactionManagerLookupInfo.CustomProperties">
            <summary>
            Gets or sets custom properties for the lookup.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Metadata.ISpacePropertyDescriptor">
            <summary>
            Encapsulates information about a property of a space type.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.ISpacePropertyDescriptor.Name">
            <summary>
            Gets the property name.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.ISpacePropertyDescriptor.TypeName">
            <summary>
            Gets the property type name.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.ISpacePropertyDescriptor.Type">
            <summary>
            Gets the property type.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.ISpacePropertyDescriptor.StorageType">
            <summary>
            Gets the property storage type.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Metadata.ISpaceTypeDescriptor">
            <summary>
            Encapsulates information about a space type.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Metadata.ISpaceTypeDescriptor.GetFixedProperty(System.Int32)">
            <summary>
            Gets a fixed property by its position.
            </summary>
            <param name="position">Position of requested fixed property.</param>
            <returns>Space property at specified position.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Metadata.ISpaceTypeDescriptor.GetFixedProperty(System.String)">
            <summary>
            Gets a fixed property by its name.
            </summary>
            <param name="name">Name of requested fixed property.</param>
            <returns>Space property with specified name.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Metadata.ISpaceTypeDescriptor.GetFixedPropertyPosition(System.String)">
            <summary>
            Gets the position of a fixed property by the specified property name.
            If there's no fixed property with that name, -1 is returned.
            </summary>
            <param name="propertyName">Name of property to locate.</param>
            <returns>Position of property.</returns>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.ISpaceTypeDescriptor.TypeName">
            <summary>
            Gets the type name.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.ISpaceTypeDescriptor.ObjectType">
            <summary>
            Gets the class which correlates to the type, if available.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.ISpaceTypeDescriptor.DocumentWrapperType">
            <summary>
            Gets the document wrapper class. If a document wrapper class was not set, <see cref="T:GigaSpaces.Core.Document.SpaceDocument"/> class is returned.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.ISpaceTypeDescriptor.FifoSupport">
            <summary>
            Gets the type's FIFO support.
            <see cref="T:GigaSpaces.Core.Metadata.FifoSupport"/>
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.ISpaceTypeDescriptor.Replicable">
            <summary>
            Gets whether this type is replicable
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.ISpaceTypeDescriptor.NumOfFixedProperties">
            <summary>
            Gets the number of fixed properties of the type.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.ISpaceTypeDescriptor.SupportsDynamicProperties">
            <summary>
            Gets whether this type supports dynamic properties
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.ISpaceTypeDescriptor.SupportsOptimisticLocking">
            <summary>
            Gets whether this type supports optimistic locking.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.ISpaceTypeDescriptor.IdPropertyName">
            <summary>
            Gets the ID property name.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.ISpaceTypeDescriptor.RoutingPropertyName">
            <summary>
            Gets the routing property name.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.ISpaceTypeDescriptor.Indexes">
            <summary>
            Gets the indexes of the type, mapped by their names.
            <see cref="T:GigaSpaces.Core.Metadata.ISpaceIndex"/>
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.ISpaceTypeDescriptor.FifoGroupingPropertyPath">
            <summary>
            Gets the fifo grouping property path.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.ISpaceTypeDescriptor.FifoGroupingIndexesPaths">
            <summary>
            Gets the fifo grouping indexes paths
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Metadata.QueryResultType">
            <summary>
            Determines whether a query will return objects (a.k.a. Concrete objects) or documents.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Metadata.QueryResultType.Object">
            <summary>
            Query should return an Object.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Metadata.QueryResultType.Document">
            <summary>
            Query should return a SpaceDocument.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Metadata.SpaceDynamicPropertiesAttribute">
            <summary>
            Indicates that the decorated property will be used to store and retrieve dynamic properties.
            The property's class can be either <see cref="T:System.Collections.Generic.IDictionary`2"/>, <see cref="T:System.Collections.Generic.Dictionary`2"/> or <see cref="T:GigaSpaces.Core.Document.DocumentProperties"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.SpaceDynamicPropertiesAttribute.StorageType">
            <summary>
            Gets or sets the storage type of the dynamic properties.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Metadata.SpaceIndexAttribute">
            <summary>
            Specifies the annotated field/property will be index using the specified index type.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Metadata.SpaceIndexAttribute.TypeDefaultValue">
            <summary>
            Default value for index type.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.SpaceIndexAttribute.Type">
            <summary>
            Specifies the index type.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.SpaceIndexAttribute.Path">
            <summary>
            Specified the index property path. 
            The path specifies which property path is indexed.
            If none is defined - the property itself is indexed.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.SpaceIndexAttribute.Unique">
            <summary>
            Indicates if unique constraint is applied for this index.
            The constraint is per partition.
            default is false
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Metadata.SpacePersistAttribute">
            <summary>
            Specifies that this field/property is used to indicate whether to persist this instance.
            The field/property is not stored in the space, and must be of type <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Metadata.SpacePropertyDescriptor">
            <summary>
            Encapsulates information about a property of a space type.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.SpacePropertyDescriptor.Name">
            <summary>
            Gets or sets the property name.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.SpacePropertyDescriptor.TypeName">
            <summary>
            Gets or sets the property type name.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.SpacePropertyDescriptor.Type">
            <summary>
            Gets or sets the property type.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.SpacePropertyDescriptor.StorageType">
            <summary>
            Gets or sets the property storage type.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Metadata.SpaceTypeDescriptorBuilder">
            <summary>
            A builder class for creating <see cref="T:GigaSpaces.Core.Metadata.ISpaceTypeDescriptor"/> instances.
            
            For example, to create a type descriptor with type name 'foo' and id property 'bar' use the following code:
            <li><code>SpaceTypeDescriptorBuilder builder = new SpaceTypeDescriptorBuilder("foo");</code></li>
            <li><code>builder.IdProperty "bar";</code></li>
            <li><code>ISpaceTypeDescriptor typeDescriptor = builder.Create();</code></li>	
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Metadata.SpaceTypeDescriptorBuilder.#ctor(System.String)">
            <summary>
            Initialize a type descriptor builder using the specified type name.
            </summary>
            <param name="typeName">Name of type.</param>
        </member>
        <member name="M:GigaSpaces.Core.Metadata.SpaceTypeDescriptorBuilder.#ctor(System.String,GigaSpaces.Core.Metadata.ISpaceTypeDescriptor)">
            <summary>
            Initialize a type descriptor builder using the specified type name and base type descriptor.
            </summary>
            <param name="typeName">Name of type.</param>
            <param name="baseTypeDescriptor">Base type descriptor.</param>
        </member>
        <member name="M:GigaSpaces.Core.Metadata.SpaceTypeDescriptorBuilder.Create">
            <summary>
            Create the space type descriptor using the gathered information.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.Metadata.SpaceTypeDescriptorBuilder.DynamicPropertiesSupport(System.Boolean)">
            <summary>
             Sets whether or not this type supports dynamic properties.
            </summary>
            <param name="support">True if this type supports dynamic properties.</param>
        </member>
        <member name="M:GigaSpaces.Core.Metadata.SpaceTypeDescriptorBuilder.DynamicPropertiesSupport(System.Boolean,GigaSpaces.Core.Metadata.StorageType)">
            <summary>
             Sets whether or not this type supports dynamic properties.
            </summary>
            <param name="support">True if this type supports dynamic properties.</param>
            <param name="storageType">Dynamic properties storage type.</param>
        </member>
        <member name="M:GigaSpaces.Core.Metadata.SpaceTypeDescriptorBuilder.AddFixedProperty(GigaSpaces.Core.Metadata.ISpacePropertyDescriptor)">
            <summary>
            Adds a property to the fixed properties set.
            <see cref="T:GigaSpaces.Core.Metadata.SpacePropertyDescriptor"/>
            </summary>
            <param name="propertyDescriptor">Description of the fixed property.</param>
        </member>
        <member name="M:GigaSpaces.Core.Metadata.SpaceTypeDescriptorBuilder.AddFixedProperty(System.String,System.Type)">
            <summary>
            Adds a property to the fixed properties set.
            </summary>
            <param name="propertyName">Name of property.</param>
            <param name="propertyType">Type of property.</param>
        </member>
        <member name="M:GigaSpaces.Core.Metadata.SpaceTypeDescriptorBuilder.AddFixedProperty(System.String,System.String)">
            <summary>
            Adds a property to the fixed properties set.
            </summary>
            <param name="propertyName">Name of property.</param>
            <param name="propertyTypeName">Name of type of property.</param>
        </member>
        <member name="M:GigaSpaces.Core.Metadata.SpaceTypeDescriptorBuilder.SetIdProperty(System.String)">
            <summary>
            Sets the ID property.
            </summary>
            <param name="idPropertyName">Name of ID property.</param>
        </member>
        <member name="M:GigaSpaces.Core.Metadata.SpaceTypeDescriptorBuilder.SetIdProperty(System.String,System.Boolean)">
            <summary>
            Sets the ID property.	  
            </summary>
            <param name="idPropertyName">Name of ID property.</param>
            <param name="autoGenerateId">false if the uid is generated using the id value, true if the uid is automatically generated. </param>
        </member>
        <member name="M:GigaSpaces.Core.Metadata.SpaceTypeDescriptorBuilder.SetIdProperty(System.String,System.Boolean,GigaSpaces.Core.Metadata.SpaceIndexType)">
            <summary>
            Sets the ID property.	    
            </summary>
            <param name="idPropertyName">Name of ID property.</param>
            <param name="autoGenerateId">false if the uid is generated using the id value, true if the uid is automatically generated. </param>
            <param name="indexType">Type of index.</param>
        </member>
        <member name="M:GigaSpaces.Core.Metadata.SpaceTypeDescriptorBuilder.SetRoutingProperty(System.String)">
            <summary>
            Sets the routing property.	 
            </summary>
            <param name="routingPropertyName">Name of routing property.</param>
        </member>
        <member name="M:GigaSpaces.Core.Metadata.SpaceTypeDescriptorBuilder.SetRoutingProperty(System.String,GigaSpaces.Core.Metadata.SpaceIndexType)">
            <summary>
            Sets the routing property.
            </summary>
            <param name="routingPropertyName">Name of routing property.</param>
            <param name="indexType">Routing property index type.</param>
        </member>
        <member name="M:GigaSpaces.Core.Metadata.SpaceTypeDescriptorBuilder.AddPropertyIndex(System.String)">
            <summary>
            Adds an index with <see cref="F:GigaSpaces.Core.Metadata.SpaceIndexType.Basic"/> type for the specified property. 
            </summary>
            <param name="propertyName">Name of property to index.</param>		
        </member>
        <member name="M:GigaSpaces.Core.Metadata.SpaceTypeDescriptorBuilder.AddPropertyIndex(System.String,GigaSpaces.Core.Metadata.SpaceIndexType)">
            <summary>
            Adds an index of the specified type for the specified property. 
            </summary>
            <param name="propertyName">Name of property to index.</param>
            <param name="indexType">Type of index.</param>
        </member>
        <member name="M:GigaSpaces.Core.Metadata.SpaceTypeDescriptorBuilder.AddPropertyIndex(System.String,GigaSpaces.Core.Metadata.SpaceIndexType,System.Boolean)">
            <summary>
            Adds an index of the specified type for the specified property. 
            </summary>
            <param name="propertyName">Name of property to index.</param>
            <param name="indexType">Type of index.</param>
            <param name="unique">Is it a unique index.</param>
        </member>
        <member name="M:GigaSpaces.Core.Metadata.SpaceTypeDescriptorBuilder.AddPathIndex(System.String)">
            <summary>
            Adds an index with <see cref="F:GigaSpaces.Core.Metadata.SpaceIndexType.Basic"/> type for the specified index. 
            </summary>
            <param name="path">Path to index.</param>
        </member>
        <member name="M:GigaSpaces.Core.Metadata.SpaceTypeDescriptorBuilder.AddPathIndex(System.String,GigaSpaces.Core.Metadata.SpaceIndexType)">
            <summary>
            Adds an index of the specified type for the specified path. 
            </summary>
            <param name="path">Path to index.</param>
            <param name="indexType">Type of index.</param>
        </member>
        <member name="M:GigaSpaces.Core.Metadata.SpaceTypeDescriptorBuilder.AddPathIndex(System.String,GigaSpaces.Core.Metadata.SpaceIndexType,System.Boolean)">
            <summary>
            Adds an index of the specified type for the specified path. 
            </summary>
            <param name="path">Path to index.</param>
            <param name="indexType">Type of index.</param>
            <param name="unique">Is it a unique index.</param>
        </member>
        <member name="M:GigaSpaces.Core.Metadata.SpaceTypeDescriptorBuilder.AddCompoundIndex(System.Collections.Generic.ICollection{System.String})">
            <summary>
            Adds a compound index with the paths which specifies the index segments.
            </summary>
            <param name="paths">Paths of the index segments.</param>
        </member>
        <member name="M:GigaSpaces.Core.Metadata.SpaceTypeDescriptorBuilder.AddCompoundIndex(System.Collections.Generic.ICollection{System.String},System.Boolean)">
            <summary>
            Adds a compound index with the paths which specifies the index segments.
            </summary>
            <param name="paths">Paths of the index segments.</param>
            <param name="unique">Is it a unique index.</param>
        </member>
        <member name="M:GigaSpaces.Core.Metadata.SpaceTypeDescriptorBuilder.AddIndex(GigaSpaces.Core.Metadata.ISpaceIndex)">
            <summary>
            Adds the specified index to the type's index set.
            </summary>
            <param name="index">Index to add.</param>
        </member>
        <member name="M:GigaSpaces.Core.Metadata.SpaceTypeDescriptorBuilder.SetFifoGroupingProperty(System.String)">
            <summary>
            Sets the fifo grouping property.
            </summary>
            <param name="fifoGroupingPropertyPath">Path of fifo grouping property.</param>
        </member>
        <member name="M:GigaSpaces.Core.Metadata.SpaceTypeDescriptorBuilder.AddFifoGroupingIndex(System.String)">
            <summary>
             Adds a fifo grouping index for the specified path. 
            </summary>
            <param name="fifoGroupingIndexPath">Path to index</param>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.SpaceTypeDescriptorBuilder.DocumentWrapperType">
            <summary>
            Sets the document wrapper class for this type. A document wrapper class is a .NET class which extends <see cref="T:GigaSpaces.Core.Document.SpaceDocument"/>		 
            and can be used as a surrogate for a specific type.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.SpaceTypeDescriptorBuilder.FifoSupport">
            <summary>
            Sets this type FIFO support.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.SpaceTypeDescriptorBuilder.Replicable">
            <summary>
            Sets whether this type is replicable or not.
            </summary>	     	     
        </member>
        <member name="P:GigaSpaces.Core.Metadata.SpaceTypeDescriptorBuilder.SupportsOptimisticLocking">
            <summary>
            Sets whether or not this type supports optimistic locking.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.ReadModifiers">
            <summary>
            Reperesents modifiers for space read operations. 
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.ReadModifiers.None">
            <summary>
            Use operation default behavior.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.ReadModifiers.RepeatableRead">
            <summary>
            Allows read operations to have visibility of entities that are not write-locked or exclusively-locked by active transactions.
            <note type="caution">This modifier cannot be used together with: DirtyRead, ReadCommitted</note>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.ReadModifiers.DirtyRead">
            <summary>
            Allows non-transactional read operations to have full visibility of the entities in the space, including entities that are exclusively-locked.
            <note type="caution">This modifier cannot be used together with: RepeatableRead, ReadCommitted</note>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.ReadModifiers.ExclusiveReadLock">
            <summary>
             Allows read operations to have exclusive visibility of entities that are not locked by active transactions.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.ReadModifiers.ReadCommitted">
            <summary>
            Allows read operations to have visibility of already committed entities, regardless of the fact that these entities might be updated (with a newer version) or taken under an uncommitted transaction.
            <note type="caution">This modifier cannot be used together with: RepeatableRead, DirtyRead</note>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.ReadModifiers.IgnorePartialFailure">
            <summary>
            Affects batch operations. The modifier will cause
            partial results to be returned instead of throwing <see cref="T:GigaSpaces.Core.Exceptions.ReadMultipleException"/>
            when not all of the requested number of entries are returned and one or more cluster members are not available.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.ReadModifiers.Fifo">
            <summary>
            Indicates the operation should comply with First-In-First-Out order.
            Can only be used if the relevant type is set with <see cref="F:GigaSpaces.Core.Metadata.FifoSupport.Operation"/>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.ReadModifiers.FifoGroupingPoll">
            <summary>
            The modifier will cause a group fifo poll based on the passed template.
            The template must have a property marked with the <see cref="T:GigaSpaces.Core.Metadata.SpaceFifoGroupingPropertyAttribute"/>.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.ReadModifiers.MemoryOnlySearch">
            <summary>
            Search for matching entries in cache memory only (do not use the underlying EDS).
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.TakeModifiers">
            <summary>
            Reperesents modifiers for space take operations. 
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.TakeModifiers.None">
            <summary>
            Use operation default behavior.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.TakeModifiers.IgnorePartialFailure">
            <summary>
            Affects batch operations. The modifier will cause
            partial results to be returned instead of throwing <see cref="T:GigaSpaces.Core.Exceptions.TakeMultipleException"/>
            when not all of the requested number of entries are returned and one or more cluster members are not available.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.TakeModifiers.EvictOnly">
            <summary>
            A modifier passed to take operations. The modifier will cause
            eviction from cache of the selected entries - relevant for LRU cache policy only 
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.TakeModifiers.Fifo">
            <summary>
            Indicates the operation should comply with First-In-First-Out order.
            Can only be used if the relevant type is set with <see cref="F:GigaSpaces.Core.Metadata.FifoSupport.Operation"/>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.TakeModifiers.FifoGroupingPoll">
            <summary>
            The modifier will cause a group fifo poll based on the passed template.
            The template must have a property marked with the <see cref="T:GigaSpaces.Core.Metadata.SpaceFifoGroupingPropertyAttribute"/>.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.TakeModifiers.MemoryOnlySearch">
            <summary>
            Search for matching entries in cache memory only (do not use the underlying EDS).
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.WriteModifiers">
            <summary>
            Represents modifiers for space write operations.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.WriteModifiers.None">
            <summary>
            Use operation default behavior.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.WriteModifiers.WriteOnly">
            <summary>
            Only write is valid - if the entry exists in the space, a <see cref="T:GigaSpaces.Core.Exceptions.EntryAlreadyInSpaceException"/> will be thrown.
            <note type="caution">This modifier cannot be used together with: UpdateOnly, UpdateOrWrite, PartialUpdate</note>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.WriteModifiers.UpdateOnly">
            <summary>
            Only update is valid - if the entry does not exist in the space, a <see cref="T:GigaSpaces.Core.Exceptions.EntryNotInSpaceException"/> will be thrown.
            <note type="caution">This modifier cannot be used together with: WriteOnly, UpdateOrWrite</note>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.WriteModifiers.PartialUpdate">
            <summary>
            Partial update will be performed - fields with null values in the new entry will be ignored.
            <note type="caution">This modifier cannot be used together with: WriteOnly, UpdateOrWrite</note>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.WriteModifiers.UpdateOrWrite">
            <summary>
            Both update and write are valid - if the entry exists in the space it will be updated, otherwise it will be written.
            <note type="caution">This modifier cannot be used together with: UpdateOnly, WriteOnly, PartialUpdate</note>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.WriteModifiers.NoReturnValue">
            <summary>
            The method will not return a value. 
            This improves performance due to reduction of the overhead of creating the result.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.WriteModifiers.ReturnPrevOnUpdate">
            <summary>
            Determines if an update operation should return the previous entry in the lease.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.WriteModifiers.OneWay">
            <summary>
            Operation is executed in one way mode, meaning no return value will be provided. 
            Using this mode provides no guarantee whether the operation succeeded or not, the only guarantee is that the operation
            was successfully written to the local network buffer. As a result, using this modifier will cause the operation not 
            to guarantee automatic fail-over if the primary space instance failed, and it cannot be done under a transaction.
            When used with an auto generated id space entry, the local entry instance will not be updated with the generated id
            as this is done on the server. The same applies for version property.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.ChangeModifiers">
            <summary>
            Represents modifiers for space change operations.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.ChangeModifiers.None">
            <summary>
            Use operation default behavior.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.ChangeModifiers.OneWay">
            <summary>
            Operation is executed in one way mode, meaning no return value will be provided. 
            Using this mode provides no guarantee whether the operation succeeded or not, the only guarantee is that the operation
            was successfully written to the local network buffer. As a result, using this modifier will cause the operation not 
            to guarantee automatic fail-over if the primary space instance failed, and it cannot be done under a transaction.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.ChangeModifiers.MemoryOnlySearch">
            <summary>
            Search for matching entries in cache memory only (do not use the underlying external data source). However, any changes done on the matches entries
            will propagate to the underlying external data source.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.ChangeModifiers.ReturnDetailedResults">
            <summary>
            Return details results meaning the <see cref="P:GigaSpaces.Core.IChangeResult`1.Results"/> should contain data, otherwise only the number
            of changed entries will be returned as a result which can be accessed via the <see cref="P:GigaSpaces.Core.IChangeResult`1.NumberOfChangedEntries"/>.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.ObjectQuery`1">
            <summary>
            Encapsulates an actual template object that is used to query the space.
            
            This is mainly used to be able to easily create generic code queries over the space.
            </summary>
            <typeparam name="T">Type to be used in the object instance.</typeparam>
        </member>
        <member name="M:GigaSpaces.Core.ObjectQuery`1.#ctor(`0)">
            <summary>
            Constructs a new object query from the given object
            </summary>
            <param name="obj">Query object</param>
        </member>
        <member name="P:GigaSpaces.Core.ObjectQuery`1.Object">
            <summary>
            Gets the underlying object within this query.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Security.IUserDetails">
            <summary>
            Provider user security details 
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Security.IUserDetails.Password">
            <summary>
            Gets user password
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Security.IUserDetails.Username">
            <summary>
            Gets user name
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.SpaceIteratorConfig">
            <summary>
            This class is used to encapsulate settings for <see cref="T:GigaSpaces.Core.ISpaceIterator`1"/> instances.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.SpaceIteratorConfig.#ctor">
            <summary>
            Creates a new SpaceIteratorConfig with default configuration settings.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.SpaceIteratorConfig.#ctor(GigaSpaces.Core.IteratorScope)">
            <summary>
            Creates a new SpaceIteratorConfig with the specified iterator scope.
            All other properties will be set to their respective default values.
            </summary>
            <param name="iteratorScope">Iterator scope.</param>
        </member>
        <member name="M:GigaSpaces.Core.SpaceIteratorConfig.#ctor(GigaSpaces.Core.IteratorScope,System.Int32,System.Int64)">
            <summary>
            Creates a new SpaceIteratorConfig with the specified properties.
            All other properties will be set to their respective default values.
            </summary>
            <param name="iteratorScope">Iterator scope.</param>
            <param name="bufferSize">Iterator buffer size.</param>
            <param name="leaseTime">Iterator lease time, in milliseconds.</param>
        </member>
        <member name="P:GigaSpaces.Core.SpaceIteratorConfig.DefaultIteratorScope">
            <summary>
            Gets or sets the default value for <see cref="P:GigaSpaces.Core.SpaceIteratorConfig.IteratorScope"/> property.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.SpaceIteratorConfig.DefaultBufferSize">
            <summary>
            Gets or sets the default value for <see cref="P:GigaSpaces.Core.SpaceIteratorConfig.BufferSize"/> property.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.SpaceIteratorConfig.DefaultLeaseTime">
            <summary>
            Gets or sets the default value for <see cref="P:GigaSpaces.Core.SpaceIteratorConfig.LeaseTime"/> property.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.SpaceIteratorConfig.IteratorScope">
            <summary>
            Gets or sets the iterator's scope.
            </summary>
            <seealso cref="P:GigaSpaces.Core.SpaceIteratorConfig.IteratorScope"/>
        </member>
        <member name="P:GigaSpaces.Core.SpaceIteratorConfig.BufferSize">
            <summary>
            Gets or sets the iterator's buffer size (i.e. how many entries the iterator will buffer).
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.SpaceIteratorConfig.LeaseTime">
            <summary>
            Gets or sets the iterator's lease time, in milliseconds. 
            When the iterator lease expires, it stops yielding entries.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.SpaceIteratorConfig.EventSessionConfig">
            <summary>
            Gets or sets the event session configuration which will be used by the iterator 
            to monitor future matching entries.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Threading.ThreadManager">
            <summary>
            Provides a set of services to wrap common thread tasks.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Threading.ThreadManager.DetachCurrentThreadFromJvm">
            <summary>
            Detaches the current thread from Jvm.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Threading.ThreadManager.CreateThread(System.Threading.ThreadStart)">
            <summary>
            Creates a new instance of the System.Threading.Thread class.
            </summary>
            <param name="start">A System.Threading.ThreadStart delegate that represents the methods to be invoked when this thread begins executing.</param>
            <returns>A new Thread instance.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Threading.ThreadManager.CreateThread(System.Threading.ThreadStart,System.Int32)">
            <summary>
            Creates a new instance of the System.Threading.Thread class.
            </summary>
            <param name="start">A System.Threading.ThreadStart delegate that represents the methods to be invoked when this thread begins executing.</param>
            <param name="maxStackSize">The maximum stack size to be used by the thread, or 0 to use the default maximum stack size specified in the header for the executable.</param>
            <returns>A new Thread instance.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Threading.ThreadManager.CreateThread(System.Threading.ParameterizedThreadStart)">
            <summary>
            Creates a new instance of the System.Threading.Thread class.
            </summary>
            <param name="start">A System.Threading.ParameterizedThreadStart delegate that represents the methods to be invoked when this thread begins executing.</param>
            <returns>A new Thread instance.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Threading.ThreadManager.CreateThread(System.Threading.ParameterizedThreadStart,System.Int32)">
            <summary>
            Creates a new instance of the System.Threading.Thread class.
            </summary>
            <param name="start">A System.Threading.ParameterizedThreadStart delegate that represents the methods to be invoked when this thread begins executing.</param>
            <param name="maxStackSize">The maximum stack size to be used by the thread, or 0 to use the default maximum stack size specified in the header for the executable.</param>
            <returns>A new Thread instance.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Threading.ThreadManager.QueueUserWorkItem(System.Threading.WaitCallback)">
            <summary>
            Queues a method for execution. The method executes when a thread pool thread becomes available.
            </summary>
            <param name="callback">A System.Threading.WaitCallback that represents the method to be executed.</param>
            <returns>true if the method is successfully queued; System.OutOfMemoryException is thrown if the work item could not be queued.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Threading.ThreadManager.QueueUserWorkItem(System.Threading.WaitCallback,System.Object)">
            <summary>
            Queues a method for execution. The method executes when a thread pool thread becomes available.
            </summary>
            <param name="callback">A System.Threading.WaitCallback that represents the method to be executed.</param>
            <param name="state">An object containing data to be used by the method.</param>
            <returns>true if the method is successfully queued; System.OutOfMemoryException is thrown if the work item could not be queued.</returns>
        </member>
        <member name="T:GigaSpaces.Core.Threading.ThreadManager.ThreadStartWrapper">
            <summary>
            Wrapper for ThreadStart delegates.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Threading.ThreadManager.ParameterizedThreadStartWrapper">
            <summary>
            Wrapper for ParameterizedThreadStart delegates.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Threading.ThreadManager.WaitCallbackWrapper">
            <summary>
            Wrapper for WaitCallback delegates.
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Configuration.BasicContainerConfigurationElement">
            <summary>
            Configuration element for <see cref="T:GigaSpaces.XAP.Configuration.BasicContainerConfigurationElement"/>
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Configuration.BasicContainerConfigurationElement.SpaceProxies">
            <summary>
            Gets or sets the managed space proxies configuration.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Configuration.BasicContainerConfigurationElement.ScanRemotingServices">
            <summary>
            Gets or sets whether the container should scan and automatically host remote services
            (Types marked with <see cref="T:GigaSpaces.XAP.Remoting.SpaceRemotingServiceAttribute"/>).
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Configuration.BasicContainerConfigurationElement.ScanEventContainers">
            <summary>
            Gets or sets whether the container should scan and automatically manage event listener containers
            (Types marked with <see cref="T:GigaSpaces.XAP.Events.EventDrivenAttribute"/>).
            
            <seealso cref="T:GigaSpaces.XAP.Events.Polling.PollingEventDrivenAttribute"/>
            <seealso cref="T:GigaSpaces.XAP.Events.Notify.NotifyEventDrivenAttribute"/>
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Configuration.BasicContainerConfigurationElement.ScanBasicComponents">
            <summary>
            Gets or sets whether the container should scan and automatically manage processing unit components
            (Types marked with <see cref="T:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicProcessingUnitComponentAttribute"/>).
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Configuration.BasicContainerConfigurationElement.ScanAssemblies">
            <summary>
            Gets or sets the configuration of the assemblies which should be auto scanned for remote services, event container and 
            basic components.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Configuration.BasicContainerConfigurationElement.EventContainers">
            <summary>
            Gets or sets the configuration for managed event listener containers.
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Events.IEventListenerContainerServiceDetails">
            <summary>
            A generic <see cref="T:GigaSpaces.XAP.Events.IEventListenerContainer`1"/> service details.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.IEventListenerContainerServiceDetails.PerformSnapshot">
            <summary>
            Gets whether the container perform snapshot on the specified template
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.IEventListenerContainerServiceDetails.Transactional">
            <summary>
            Gets whether the container is transactional
            <see cref="T:GigaSpaces.XAP.Events.TransactionalEventAttribute"/>
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.IEventListenerContainerServiceDetails.TransactionManager">
            <summary>
            Gets a display name of the transaction manager is using (if any).
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Events.IEventListenerContainerServiceMonitors">
            <summary>
            A generic <see cref="T:GigaSpaces.XAP.Events.IEventListenerContainer`1"/> service monitors.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.IEventListenerContainerServiceMonitors.EventDetails">
            <summary>
            Gets the event listener container service details.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.IEventListenerContainerServiceMonitors.ProcessedEvents">
            <summary>
            Gets the number of events that were successfully processed.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.IEventListenerContainerServiceMonitors.FailedEvents">
            <summary>
            Gets the number of events that failed processing.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.IEventListenerContainerServiceMonitors.Status">
            <summary>
            Gets the container status.
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Events.Notify.INotifyEventListenerContainerServiceDetails">
            <summary>
            A <see cref="T:GigaSpaces.XAP.Events.Notify.NotifyEventListenerContainer`1"/> service details.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Notify.INotifyEventListenerContainerServiceDetails.CommType">
            <summary>
            Gets the configured communication type of the container.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Notify.INotifyEventListenerContainerServiceDetails.Fifo">
            <summary>
            Gets the configured fifo mode of the container.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Notify.INotifyEventListenerContainerServiceDetails.BatchSize">
            <summary>
            Gets the configured batch size of the container.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Notify.INotifyEventListenerContainerServiceDetails.BatchTime">
            <summary>
            Gets the configured batch time of the container.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Notify.INotifyEventListenerContainerServiceDetails.BatchPendingThreshold">
            <summary>
            Gets the configured batch pending threshold of the container.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Notify.INotifyEventListenerContainerServiceDetails.AutoRenew">
            <summary>
            Gets the configured auto rewnew mode of the container.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Notify.INotifyEventListenerContainerServiceDetails.NotifyWrite">
            <summary>
            Gets the configured notify write mode of the container.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Notify.INotifyEventListenerContainerServiceDetails.NotifyUpdate">
            <summary>
            Gets the configured notify update mode of the container.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Notify.INotifyEventListenerContainerServiceDetails.NotifyTake">
            <summary>
            Gets the configured notify take mode of the container.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Notify.INotifyEventListenerContainerServiceDetails.NotifyLeaseExpire">
            <summary>
            Gets the configured notify lease expire mode of the container.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Notify.INotifyEventListenerContainerServiceDetails.NotifyUnmatched">
            <summary>
            Gets the configured notify unmatched mode of the container.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Notify.INotifyEventListenerContainerServiceDetails.TriggerNotifyTemplate">
            <summary>
            Gets the configured trigger notify template mode of the container.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Notify.INotifyEventListenerContainerServiceDetails.ReplicateNotifyTemplate">
            <summary>
            Gets the configured replicate notify template mode of the container.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Notify.INotifyEventListenerContainerServiceDetails.PerformTakeOnNotify">
            <summary>
            Gets the configured perform take on notify mode of the container.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Notify.INotifyEventListenerContainerServiceDetails.BatchProcessing">
            <summary>
            Gets whether this container is configured to work with batch processing
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Notify.INotifyEventListenerContainerServiceDetails.Guaranteed">
            <summary>
            Gets the configured guaranteed notification mode of the container.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Notify.INotifyEventListenerContainerServiceDetails.Durable">
            <summary>
            Gets the configured durable notification mode of the container.
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Events.Notify.INotifyEventListenerContainerServiceMonitors">
            <summary>
            A <see cref="T:GigaSpaces.XAP.Events.Notify.NotifyEventListenerContainer`1"/> service monitors
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Notify.INotifyEventListenerContainerServiceMonitors.NotifyEventDetails">
            <summary>
            Gets the <see cref="T:GigaSpaces.XAP.Events.Notify.INotifyEventListenerContainerServiceDetails"/> of the container.
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Events.Polling.IPollingEventListenerContainerServiceDetails">
            <summary>
            A <see cref="T:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1"/> service details.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Polling.IPollingEventListenerContainerServiceDetails.ReceiveTimeout">
            <summary>
            Gets the configured receive timeout of the container.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Polling.IPollingEventListenerContainerServiceDetails.ReceiveOperationHandler">
            <summary>
            Gets a display name of the configured receive operation handler of the container.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Polling.IPollingEventListenerContainerServiceDetails.TriggerOperationHandler">
            <summary>
            Gets a display name of the configured trigger operation handler of the container.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Polling.IPollingEventListenerContainerServiceDetails.ConcurrentConsumers">
            <summary>
            Gets the configured number of minimum concurrent consumers of the container.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Polling.IPollingEventListenerContainerServiceDetails.MaxConcurrentConsumers">
            <summary>
            Gets the configured number of maximum concurrent consumers of the container.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Polling.IPollingEventListenerContainerServiceDetails.BatchProcessing">
            <summary>
            Gets whether this container is configured to work with batch processing
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Polling.IPollingEventListenerContainerServiceDetails.DynamicTemplate">
            <summary>
            Gets whether this container is configured to work with dynamic template.
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Events.Polling.IPollingEventListenerContainerServiceMonitors">
            <summary>
            A <see cref="T:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1"/> service monitors.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Polling.IPollingEventListenerContainerServiceMonitors.PollingEventDetails">
            <summary>
            Gets the <see cref="T:GigaSpaces.XAP.Events.Polling.IPollingEventListenerContainerServiceDetails"/> of the container.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Polling.IPollingEventListenerContainerServiceMonitors.Consumers">
            <summary>
            Gets the number of active consumers.
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Events.Polling.Receive.FifoGroupingReceiveHandler`1">
            <summary>
            Support class to perform receive operations with or without Fifo Grouping
            If configured to use Fifo Grouping, the read/take operation will use <see cref="F:GigaSpaces.Core.ReadModifiers.FifoGroupingPoll"/> / <see cref="F:GigaSpaces.Core.TakeModifiers.FifoGroupingPoll"/> accordingly.
            All the handlers that uses the Fifo Grouping capability should be used with a template that uses Fifo Grouping 
            All the handlers that uses the Fifo Grouping capability must be performed under a transaction
            </summary>
            <typeparam name="TData">Type of data to receive</typeparam>
        </member>
        <member name="T:GigaSpaces.XAP.Events.Polling.Receive.MemoryOnlySearchReceiveHandler`1">
            <summary>
            Support class to perform receive operations with or without memory only search.
            If configured to use memory only search, the read/take operation will use <see cref="F:GigaSpaces.Core.ReadModifiers.MemoryOnlySearch"/> / <see cref="F:GigaSpaces.Core.TakeModifiers.MemoryOnlySearch"/> accordingly.    
            </summary>
            <typeparam name="TData">Type of data to receive</typeparam>
        </member>
        <member name="T:GigaSpaces.XAP.Events.Polling.Receive.NonBlockingReceiveHandler`1">
            <summary>
            Support class to perform either non blockin or blocking receive operation.
            
            <seealso cref="T:GigaSpaces.XAP.Events.Polling.Receive.IReceiveOperationHandler`1"/>
            </summary>
            <typeparam name="TData">Type of data to receive.</typeparam>
        </member>
        <member name="T:GigaSpaces.XAP.Events.Polling.Receive.IReceiveOperationHandler`1">
            <summary>
            Perform the actual receive operations for <see cref="T:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1"/>. and its result is used to trigger the
            <see cref="E:GigaSpaces.XAP.Events.IEventListenerContainer`1.DataEventArrived"/> event and <see cref="E:GigaSpaces.XAP.Events.IEventListenerContainer`1.BatchDataEventArrived"/> event.	
            
            <seealso cref="T:GigaSpaces.XAP.Events.Polling.Receive.TakeReceiveOperationHandler`1"/>
            <seealso cref="T:GigaSpaces.XAP.Events.Polling.Receive.ReadReceiveOperationHandler`1"/>
            <seealso cref="T:GigaSpaces.XAP.Events.Polling.Receive.ExclusiveReadReceiveOperationHandler`1"/>	
            </summary>
            <typeparam name="TData">Type of data to receive.</typeparam>
        </member>
        <member name="M:GigaSpaces.XAP.Events.Polling.Receive.IReceiveOperationHandler`1.Receive(GigaSpaces.Core.IQuery{`0},GigaSpaces.Core.ISpaceProxy,GigaSpaces.Core.ITransaction,System.Int64)">
            <summary>
            Performs the actual receive operation. Return value is a single data object.
            </summary>
            <param name="template">The template for the receive operation.</param>
            <param name="proxy">The proxy to execute the operation on.</param>
            <param name="tx">Operation's transaction context, can be null.</param>
            <param name="receiveTimeout">Operation's receive timeout</param>
            <returns>An object that will be passed to the event listener, null result doesn't trigger an event.</returns>
        </member>
        <member name="M:GigaSpaces.XAP.Events.Polling.Receive.IReceiveOperationHandler`1.ReceiveBatch(GigaSpaces.Core.IQuery{`0},GigaSpaces.Core.ISpaceProxy,GigaSpaces.Core.ITransaction,System.Int64,System.Int32)">
            <summary>
            Performs the actual receive operation. Return value is an array of data objects.
            </summary>
            <param name="template">The template for the receive operation.</param>
            <param name="proxy">The proxy to execute the operation on.</param>
            <param name="tx">Operation's transaction context, can be null.</param>
            <param name="receiveTimeout">Operation's receive timeout</param>
            <param name="batchSize">operation's batch size</param>
            <returns>A batch of objects that will be passed to the event listener, null result doesn't trigger an event.</returns>
        </member>
        <member name="M:GigaSpaces.XAP.Events.Polling.Receive.NonBlockingReceiveHandler`1.Receive(GigaSpaces.Core.IQuery{`0},GigaSpaces.Core.ISpaceProxy,GigaSpaces.Core.ITransaction,System.Int64)">
            <summary>
            Performs the actual receive operation. Return values allowed are single object or an array of objects.
            </summary>
            <param name="template">The template for the receive operation.</param>
            <param name="proxy">The proxy to execute the operation on.</param>
            <param name="tx">Operation's transaction context, can be null.</param>
            <param name="receiveTimeout">Operation's receive timeout</param>
            <returns>An object that will be passed to the event listener, null result doesn't trigger an event.</returns>
        </member>
        <member name="M:GigaSpaces.XAP.Events.Polling.Receive.NonBlockingReceiveHandler`1.ReceiveBatch(GigaSpaces.Core.IQuery{`0},GigaSpaces.Core.ISpaceProxy,GigaSpaces.Core.ITransaction,System.Int64,System.Int32)">
            <summary>
            Performs the actual receive operation. Return values allowed are single object or an array of objects.
            </summary>
            <param name="template">The template for the receive operation.</param>
            <param name="proxy">The proxy to execute the operation on.</param>
            <param name="tx">Operation's transaction context, can be null.</param>
            <param name="receiveTimeout">Operation's receive timeout</param>
            <param name="batchSize">operation's batch size</param>
            <returns>An object that will be passed to the event listener, null result doesn't trigger an event.</returns>
        </member>
        <member name="M:GigaSpaces.XAP.Events.Polling.Receive.NonBlockingReceiveHandler`1.ReceiveBlocking(GigaSpaces.Core.IQuery{`0},GigaSpaces.Core.ISpaceProxy,GigaSpaces.Core.ITransaction,System.Int64)">
            <summary>
            Executes receive operation logic in blocking mode
            </summary>
            <param name="template">The template for the receive operation.</param>
            <param name="proxy">The proxy to execute the operation on.</param>
            <param name="tx">Operation's transaction context, can be null.</param>
            <param name="receiveTimeout">Operation's receive timeout</param>
            <returns>An object that will be passed to the event listener, null result doesn't trigger an event.</returns>
        </member>
        <member name="M:GigaSpaces.XAP.Events.Polling.Receive.NonBlockingReceiveHandler`1.ReceiveNonBlocking(GigaSpaces.Core.IQuery{`0},GigaSpaces.Core.ISpaceProxy,GigaSpaces.Core.ITransaction)">
            <summary>
            Executes receive operation logic in non blocking mode
            </summary>
            <param name="template">The template for the receive operation.</param>
            <param name="proxy">The proxy to execute the operation on.</param>
            <param name="tx">Operation's transaction context, can be null.</param>		
            <returns>An object that will be passed to the event listener, null result doesn't trigger an event.</returns>
        </member>
        <member name="M:GigaSpaces.XAP.Events.Polling.Receive.NonBlockingReceiveHandler`1.ReceiveBatchBlocking(GigaSpaces.Core.IQuery{`0},GigaSpaces.Core.ISpaceProxy,GigaSpaces.Core.ITransaction,System.Int64,System.Int32)">
            <summary>
            Executes receive operation logic in blocking mode
            </summary>
            <param name="template">The template for the receive operation.</param>
            <param name="proxy">The proxy to execute the operation on.</param>
            <param name="tx">Operation's transaction context, can be null.</param>
            <param name="receiveTimeout">Operation's receive timeout</param>
            <param name="batchSize">operation's batch size</param>
            <returns>An object that will be passed to the event listener, null result doesn't trigger an event.</returns>
        </member>
        <member name="M:GigaSpaces.XAP.Events.Polling.Receive.NonBlockingReceiveHandler`1.ReceiveBatchNonBlocking(GigaSpaces.Core.IQuery{`0},GigaSpaces.Core.ISpaceProxy,GigaSpaces.Core.ITransaction,System.Int32)">
            <summary>
            Executes receive operation logic in non blocking mode
            </summary>
            <param name="template">The template for the receive operation.</param>
            <param name="proxy">The proxy to execute the operation on.</param>
            <param name="tx">Operation's transaction context, can be null.</param>		
            <param name="batchSize">operation's batch size</param>
            <returns>An object that will be passed to the event listener, null result doesn't trigger an event.</returns>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Polling.Receive.NonBlockingReceiveHandler`1.NonBlocking">
            <summary>
            Gets or sets whether to perform the operation in a non blocking manner.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Polling.Receive.NonBlockingReceiveHandler`1.NonBlockingFactor">
            <summary>
            Gets or sets the non blocking factor if <see cref="P:GigaSpaces.XAP.Events.Polling.Receive.NonBlockingReceiveHandler`1.NonBlocking"/> is true.
            For instance if its value is 10 and the receive timeout of the operation is 1 seconds,
            The operation will be executed 10 times with intervals of 100 miliseconds between each executions.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Polling.Receive.MemoryOnlySearchReceiveHandler`1.UseMemoryOnlySearch">
            <summary>
            Allows to configure the take/read operation to be performed in a memory only search manner.
            If set to true, will use <see cref="F:GigaSpaces.Core.ReadModifiers.MemoryOnlySearch"/> / <see cref="F:GigaSpaces.Core.TakeModifiers.MemoryOnlySearch"/> as read/take modifiers.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Polling.Receive.FifoGroupingReceiveHandler`1.UseFifoGrouping">
            <summary>
            Allows to configure the take/read operation to be performed in a Fifo Grouping manner.
            If set to true, will use <see cref="F:GigaSpaces.Core.ReadModifiers.FifoGroupingPoll"/> / <see cref="F:GigaSpaces.Core.TakeModifiers.FifoGroupingPoll"/> as read/take modifiers.
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.ProcessingUnit.Containers.AbstractProcessingUnitContainer">
            <summary>
            A processing unit container represents a currently running processing unit context.
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.ProcessingUnit.Containers.IProcessingUnitContainer">
            <summary>
            A processing unit container represents a currently running processing unit context.
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.ProcessingUnit.Containers.IProcessingUnitContainer.Initialize">
            <summary>
            Initialize the processing unit.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.ProcessingUnit.Containers.IProcessingUnitContainer.ClusterInfo">
            <summary>
            Sets the cluster information.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.ProcessingUnit.Containers.IProcessingUnitContainer.Properties">
            <summary>
            Sets properties.
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.ProcessingUnit.Containers.AbstractProcessingUnitContainer.Initialize">
            <summary>
            Initialize the processing unit.
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.ProcessingUnit.Containers.AbstractProcessingUnitContainer.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.ProcessingUnit.Containers.AbstractProcessingUnitContainer.ClusterInfo">
            <summary>
            Gets or sets the processing unit's cluster information.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.ProcessingUnit.Containers.AbstractProcessingUnitContainer.Properties">
            <summary>
            Gets or sets the processing unit's properties.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.XAP.ProcessingUnit.Containers.BasicContainer.AbstractSpaceModeChangedAttribute">
            <summary>
            Base attribute for all the possible space mode changed event attributes
            <see cref="T:GigaSpaces.Core.XAP.ProcessingUnit.Containers.BasicContainer.BeforeBackupAttribute"/>
            <see cref="T:GigaSpaces.Core.XAP.ProcessingUnit.Containers.BasicContainer.BeforePrimaryAttribute"/>
            <see cref="T:GigaSpaces.Core.XAP.ProcessingUnit.Containers.BasicContainer.PostBackupAttribute"/>
            <see cref="T:GigaSpaces.Core.XAP.ProcessingUnit.Containers.BasicContainer.PostPrimaryAttribute"/>
            <see cref="T:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicProcessingUnitContainer"/>
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.XAP.ProcessingUnit.Containers.BasicContainer.AbstractSpaceModeChangedAttribute.SpaceProxyName">
            <summary>
            Gets the name of the space proxy that the marked method should listen for space mode changed events.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.XAP.ProcessingUnit.Containers.BasicContainer.BeforeBackupAttribute">
            <summary>
            Mark a method that should be called before a space instance becomes a backup, the class should be managed by the <see cref="T:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicProcessingUnitContainer"/>.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.XAP.ProcessingUnit.Containers.BasicContainer.BeforePrimaryAttribute">
            <summary>
            Mark a method that should be called before a space instance becomes a primary, the class should be managed by the <see cref="T:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicProcessingUnitContainer"/>.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.XAP.ProcessingUnit.Containers.BasicContainer.PostBackupAttribute">
            <summary>
            Mark a method that should be called after a space instance becomes a backup, the class should be managed by the <see cref="T:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicProcessingUnitContainer"/>.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.XAP.ProcessingUnit.Containers.BasicContainer.PostPrimaryAttribute">
            <summary>
            Mark a method that should be called after a space instance becomes a primary, the class should be managed by the <see cref="T:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicProcessingUnitContainer"/>.
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicContainerInitializationException">
            <summary>
            Thrown when there is a problem with the <see cref="T:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicProcessingUnitContainer"/> initialization.
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicContainerInitializationException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicContainerInitializationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicContainerInitializationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicContainerInitializationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicContainerInitializationException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
        </member>
        <member name="M:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicContainerInitializationException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="M:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicContainerInitializationException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicContainerInitializationException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="T:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicContainerScannedCreationException">
            <summary>
            Thrown when there is an error while creating a component which was automatically scanned by a <see cref="T:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicProcessingUnitContainer"/>
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicContainerScannedCreationException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicContainerScannedCreationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicContainerScannedCreationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicContainerScannedCreationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicContainerScannedCreationException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
        </member>
        <member name="M:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicContainerScannedCreationException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="M:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicContainerScannedCreationException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicContainerScannedCreationException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="T:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicContainerSpaceProxyCreationException">
            <summary>
            Thrown when there is an error creating a space proxy which is managed by a <see cref="T:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicProcessingUnitContainer"/>
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicContainerSpaceProxyCreationException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicContainerSpaceProxyCreationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicContainerSpaceProxyCreationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicContainerSpaceProxyCreationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicContainerSpaceProxyCreationException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
        </member>
        <member name="M:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicContainerSpaceProxyCreationException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="M:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicContainerSpaceProxyCreationException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicContainerSpaceProxyCreationException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="T:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.ContainerInitializedAttribute">
            <summary>
             Marks a method that belongs to a basic processing unit component that will be called by the managing
             <see cref="T:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicProcessingUnitContainer"/> once it has finished its initialization.
             
             <seealso cref="T:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicProcessingUnitComponentAttribute"/>
             <seealso cref="T:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.ContainerInitializingAttribute"/>
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.ContainerInitializingAttribute">
            <summary>
             Marks a method that belongs to a basic processing unit component that will be called by the managing
             <see cref="T:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicProcessingUnitContainer"/> while it is initializing.
             
             <seealso cref="T:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicProcessingUnitComponentAttribute"/>
             <seealso cref="T:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.ContainerInitializedAttribute"/>
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.SpaceProxyMode">
            <summary>
            Specified space proxy mode
            </summary>
        </member>
        <member name="F:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.SpaceProxyMode.Clustered">
            <summary>
            Clustered proxy.
            </summary>
        </member>
        <member name="F:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.SpaceProxyMode.Direct">
            <summary>
            Direct proxy.
            </summary>
        </member>
        <member name="F:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.SpaceProxyMode.Default">
            <summary>
            Default mode.
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Configuration.EventListenerContainerConfigurationElement">
            <summary>
            Configuration for an <see cref="T:GigaSpaces.XAP.Events.IEventListenerContainer`1"/> which is managed by a <see cref="T:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicProcessingUnitContainer"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Configuration.EventListenerContainerConfigurationElement.Name">
            <summary>
            Gets or sets the event container name.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Configuration.EventListenerContainerConfigurationElement.SpaceProxyName">
            <summary>
            Gets or sets the name of the space proxy the event container operates on.
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Configuration.EventListenerContainersConfigurationElement">
            <summary>
            Configuration for a collection of <see cref="T:GigaSpaces.XAP.Events.IEventListenerContainer`1"/> which are managed by <see cref="T:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicProcessingUnitContainer"/>.
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Configuration.EventListenerContainersConfigurationElement.CreateNewElement">
            <summary>
            When overridden in a derived class, creates a new <see cref="T:System.Configuration.ConfigurationElement" />.
            </summary>
            
            <returns>
            A new <see cref="T:System.Configuration.ConfigurationElement" />.
            </returns>
            
        </member>
        <member name="M:GigaSpaces.XAP.Configuration.EventListenerContainersConfigurationElement.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the element key for a specified configuration element when overridden in a derived class.
            </summary>
            
            <returns>
            An <see cref="T:System.Object" /> that acts as the key for the specified <see cref="T:System.Configuration.ConfigurationElement" />.
            </returns>
            
            <param name="element">The <see cref="T:System.Configuration.ConfigurationElement" /> to return the key for. </param>
        </member>
        <member name="M:GigaSpaces.XAP.Configuration.EventListenerContainersConfigurationElement.GetContainerConfig(System.String)">
            <summary>
            Gets a specific event container configuration.
            </summary>
            <param name="name">Event container name.</param>
            <returns>Specific event container configuration.</returns>
        </member>
        <member name="T:GigaSpaces.XAP.Configuration.GigaSpacesXAPConfiguration">
            <summary>
            Custom configuration section class for GigaSpaces XAP component.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Configuration.GigaSpacesXAPConfiguration.ProcessingUnitContainer">
            <summary>
            Gets the processing unit container configuration
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Configuration.ProcessingUnitContainerConfigurationElement">
            <summary>
             Encapsulates configuration for IProcessingUnitContainer
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Configuration.ProcessingUnitContainerConfigurationElement.Type">
            <summary>
            Gets the implementation type name
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Configuration.ProcessingUnitContainerConfigurationElement.BasicContainer">
            <summary>
            Gets or sets the configuration of the built in processing unit container type, <see cref="T:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicProcessingUnitContainer"/>.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Configuration.ProviderConfigurationElement">
            <summary>
            Encapsulates configuration for the product provider selection
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Configuration.ProviderConfigurationElement.Type">
            <summary>
            Gets or sets the used provider
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Configuration.ProviderConfigurationElement.JetProviderSettings">
            <summary>
            Gets or sets Jet provider settings
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Configuration.PathConfigurationElement">
            <summary>
            Represents the configuration for a path.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Configuration.PathConfigurationElement.Path">
            <summary>
            Gets or sets the path.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Exceptions.IllegalSpaceConfigException">
            <summary>
            Thrown when illegal space config was used
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.IllegalSpaceConfigException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.IllegalSpaceConfigException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.IllegalSpaceConfigException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.IllegalSpaceConfigException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="T:GigaSpaces.Core.Exceptions.InactiveSpaceException">
            <summary>
            This exception thrown when attempting to access an inactive space which runs as a backup of
            primary space. As long as the the primary space is alive, clients cannot access the backup space directly 
            to perform space operation. When using clustered proxy, the operation will be transparently routed to 
            the active primary space. The PrimarySpaceName property return the primary space name 
            the user should access.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.InactiveSpaceException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.InactiveSpaceException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.InactiveSpaceException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.InactiveSpaceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.InactiveSpaceException.#ctor(System.String,System.String,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with the relevant primary space 
            member name and inactive space member name and with a specified 
            error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="primarySpaceMemberName">The primary space of this backup.</param>
            <param name="inactiveSpaceMemberName">The inactive space name.</param>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="P:GigaSpaces.Core.Exceptions.InactiveSpaceException.PrimarySpaceMemberName">
            <summary>
            Gets the primary space of this backup or null if this space undergoing election process.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Exceptions.InactiveSpaceException.InactiveSpaceMemberName">
            <summary>
            Gets the inactive space name.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Exceptions.JavaToNetException">
            <summary>
            Thrown when an error occured inside the GigaSpaces.JavaToNet.dll
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.JavaToNetException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.JavaToNetException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.JavaToNetException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.JavaToNetException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.JavaToNetException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.JavaToNetException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.JavaToNetException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.JavaToNetException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="T:GigaSpaces.Core.Exceptions.JvmOutOfMemoryException">
            <summary>
            Thrown when the jvm is out of memory (OutOfMemoryError).
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.JvmOutOfMemoryException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.JvmOutOfMemoryException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.JvmOutOfMemoryException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.JvmOutOfMemoryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.JvmOutOfMemoryException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.JvmOutOfMemoryException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.JvmOutOfMemoryException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.JvmOutOfMemoryException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="T:GigaSpaces.Core.Exceptions.MemoryShortageException">
            <summary>
            This Exception indicates that the space server process reached 
            the predefined percentage usage ratio.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.MemoryShortageException.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the exception.		
            </summary>
            <param name="spaceName">The name of the space that caused this exception.</param>
            <param name="containerName">The name of the container that contains the space that caused this exception.</param>
            <param name="hostName">The name of the machine that hosts the space that caused this exception.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.MemoryShortageException.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
            <param name="spaceName">The name of the space that caused this exception.</param>
            <param name="containerName">The name of the container that contains the space that caused this exception.</param>
            <param name="hostName">The name of the machine that hosts the space that caused this exception.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.MemoryShortageException.#ctor(System.String,System.String,System.String,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
            <param name="spaceName">The name of the space that caused this exception.</param>
            <param name="containerName">The name of the container that contains the space that caused this exception.</param>
            <param name="hostName">The name of the machine that hosts the space that caused this exception.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.MemoryShortageException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>		
        </member>
        <member name="P:GigaSpaces.Core.Exceptions.MemoryShortageException.SpaceName">
            <summary>
            Gets the name of the space that caused this exception.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Exceptions.MemoryShortageException.ContainerName">
            <summary>
            Gets the name of the container that contains the space that caused this exception.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Exceptions.MemoryShortageException.HostName">
            <summary>
            The host name of the machine that caused this exception.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Exceptions.SpaceAlreadyStartedException">
            <summary>
            Thrown when an a start operation is attempted on a space that is already start.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.SpaceAlreadyStartedException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.SpaceAlreadyStartedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.SpaceAlreadyStartedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.SpaceAlreadyStartedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="T:GigaSpaces.Core.Exceptions.SpaceAlreadyStoppedException">
            <summary>
            Thrown when an a stop operation is attempted on a space that is already stopped.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.SpaceAlreadyStoppedException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.SpaceAlreadyStoppedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.SpaceAlreadyStoppedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.SpaceAlreadyStoppedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="T:GigaSpaces.Core.Exceptions.SqlQueryException">
            <summary>
            Thrown when space operation with <see cref="T:GigaSpaces.Core.SqlQuery"/> fails. For example illegal SQL syntax, semantic error.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.SqlQueryException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.SqlQueryException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.SqlQueryException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.SqlQueryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.SqlQueryException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.SqlQueryException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.SqlQueryException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="T:GigaSpaces.Core.Exceptions.WriteMultipleException">
             <summary>
             Thrown when <see cref="M:GigaSpaces.Core.ISpaceProxy.WriteMultiple``1(``0[])"/> operation fails due to partial or complete failure, either in single or clustered
             space topologies. 
            
             The exception contains an array of write results where each result in the array is either a lease or an exception upon failure, 
             the result index corresponds to the entry index in the array of entries which are being written/updated.
             </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.WriteMultipleException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.WriteMultipleException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.WriteMultipleException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.WriteMultipleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.WriteMultipleException.#ctor(GigaSpaces.Core.Exceptions.WriteMultipleException.IWriteResult[],System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
            <param name="results">Exception results</param>
        </member>
        <member name="P:GigaSpaces.Core.Exceptions.WriteMultipleException.Results">
            <summary>
            Returns information about each operation in the batch.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Exceptions.WriteMultipleException.ResultType">
            <summary>
            Determines the type of a single write operation result.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Exceptions.WriteMultipleException.ResultType.Lease">
            <summary>
            Operation succeeded - result is a lease context.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Exceptions.WriteMultipleException.ResultType.Error">
            <summary>
            Operation failed - result is the exception that caused the failure.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Exceptions.WriteMultipleException.IWriteResult">
            <summary>
            Encapsulates information about a single write operation.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Exceptions.WriteMultipleException.IWriteResult.ResultType">
            <summary>
            Gets the result type of the current write operation.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Exceptions.WriteMultipleException.IWriteResult.Lease">
            <summary>
            Gets the resulting lease context, if any.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Exceptions.WriteMultipleException.IWriteResult.Exception">
            <summary>
            Gets the exception that failed the write operation, if any.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Filters.AttributeSpaceFilterConfigFactory">
             <summary>
             A <see cref="T:GigaSpaces.Core.Filters.SpaceFilterConfigFactory"/> implementation that accepts
             an object filter with attributes markers as to which filter operation to listen to. The
             available annotations are the different attributes found within this namespace with
             either the Before prefix or the After prefix (for example:
             <see cref="T:GigaSpaces.Core.Filters.BeforeWriteAttribute"/> and <see cref="T:GigaSpaces.Core.Filters.AfterWriteAttribute"/>). Filter lifecycle methods can be marked
             using <see cref="T:GigaSpaces.Core.Filters.OnFilterInitAttribute"/> and implements IDisposable.
            
             The methods marked with an attribute can accept different arguments. Please see
             <see cref="T:GigaSpaces.Core.Filters.FilterOperationDelegateInvoker"/> for all the different possibilities.
            
             For an object filter adapter that does not use attributes please see <see cref="T:GigaSpaces.Core.Filters.MethodNameSpaceFilterConfigFactory"/>.
             </summary>
        </member>
        <member name="T:GigaSpaces.Core.Filters.SpaceFilterConfigFactory">
            <summary>
            A base class for config creators that creates a fully configured ready to use SpaceFilterConfig that uses <see cref="T:GigaSpaces.Core.Filters.SpaceFilterOperationDelegate"/>
            to delegate filter operations to a custom instance of a filter that doesn't implement the ISpaceFilter interface directly
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Filters.SpaceFilterConfigFactory.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Filters.SpaceFilterConfigFactory.CreateSpaceFilterConfig">
            <summary>
            Creates SpaceFilterConfig using the implemented creator logic
            </summary>
            <returns>A <see cref="T:GigaSpaces.Core.Filters.SpaceFilterConfig"/>.</returns>
        </member>
        <member name="P:GigaSpaces.Core.Filters.SpaceFilterConfigFactory.Filter">
            <summary>
            Gets or sets the filter that will be used. Note, it is not an <see cref="T:GigaSpaces.Core.Filters.ISpaceFilter"/>
            implementation since this object filter can be a delegate that does not require the filter to implement
            the space filter interface.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Filters.SpaceFilterConfigFactory.IsActiveWhenBackup">
            <summary>
            Gets or sets if this filter is active when the space is in backup mode.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Filters.SpaceFilterConfigFactory.Enabled">
            <summary>
            Gets or sets if this filter is enabled.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Filters.SpaceFilterConfigFactory.IsSecurityFilter">
            <summary>
            Gets or sets if this filter is a security filter.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Filters.SpaceFilterConfigFactory.ShutdownSpaceOnInitFailure">
            <summary>
            Gets or sets if the space should shutdown on filter init failure.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Filters.SpaceFilterConfigFactory.Priority">
            <summary>
            Gets or sets the filter priority.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Filters.FilterOperation">
            <summary>
            Represents the different filter operations.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Filters.FilterOperation.BeforeWrite">
            <summary>
            Before write operation.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Filters.FilterOperation.AfterWrite">
            <summary>
            After write operation.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Filters.FilterOperation.BeforeRead">
            <summary>
            Before read operation.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Filters.FilterOperation.BeforeTake">
            <summary>
            Before take operation.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Filters.FilterOperation.BeforeNotify">
            <summary>
            Before notify register operation.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Filters.FilterOperation.BeforeGetAdmin">
            <summary>
            Before GetAdmin operation.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Filters.FilterOperation.SetSecurity">
            <summary>
            On SetSecurityContext operation.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Filters.FilterOperation.BeforeCleanSpace">
            <summary>
            Before clean operation.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Filters.FilterOperation.BeforeUpdate">
            <summary>
            Before update operation.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Filters.FilterOperation.AfterUpdate">
            <summary>
            After update operation.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Filters.FilterOperation.BeforeReadMultiple">
            <summary>
            Before read multiple operation.	
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Filters.FilterOperation.AfterReadMultiple">
            <summary>
            After read multiple operation.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Filters.FilterOperation.BeforeTakeMultiple">
            <summary>
            Before take multiple operation.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Filters.FilterOperation.AfterTakeMultiple">
            <summary>
            After take multiple operation.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Filters.FilterOperation.BeforeNotifyTrigger">
            <summary>
            Before notify trigger operation, indicates 
            that a matched notify template was found to the current 
            entry event.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Filters.FilterOperation.AfterNotifyTrigger">
            <summary>
            After notify trigger operation, indicates that a notify 
            trigger was successful.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Filters.FilterOperation.BeforeAllNotifyTrigger">
            <summary>
            Before all notify trigger operation, indicates that at 
            least one notify template is matched to the current entry 
            event.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Filters.FilterOperation.AfterAllNotifyTrigger">
            <summary>
            After all notify trigger operation, indicates that all 
            notify templates that are matched to the current entry 
            event were triggered and returned or failed.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Filters.FilterOperation.BeforeExecute">
            <summary>
            Before execute task operation.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Filters.FilterOperation.AfterExecute">
            <summary>
            After execute task operation.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Filters.FilterOperation.AfterRead">
            <summary>
            After Read operation.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Filters.FilterOperation.AfterTake">
            <summary>
            After Take operation.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Filters.FilterOperation.BeforeRemove">
            <summary>
            Called before entry remove due to lease expression or 
            lease cancel.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Filters.FilterOperation.AfterRemove">
            <summary>
            Called after entry remove due to lease expression or 
            lease cancel.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Filters.FilterPriority">
            <summary>
            Represent the filter priority.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Filters.FilterPriority.Lowest">
            <summary>
            Lowest priority.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Filters.FilterPriority.Low">
            <summary>
            Low priority.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Filters.FilterPriority.Normal">
            <summary>
            Normal priority.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Filters.FilterPriority.High">
            <summary>
            High priority.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Filters.FilterPriority.Highest">
            <summary>
            Highest priority.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Filters.SetSecurityAttribute">
            <summary>
            Filter callback SetSecurity operation.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Filters.BeforeGetAdminAttribute">
            <summary>
            Filter callback BeforeGetAdmin operation.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Filters.AfterRemoveByLeaseAttribute">
            <summary>
            Filter callback after an entry was removed due to lease expression or lease cancel.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Filters.BeforeRemoveByLeaseAttribute">
            <summary>
            Filter callback before an entry was removed due to lease expression or lease cancel.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Filters.AfterAllNotifyTriggerAttribute">
            <summary>
            Filter callback AfterAllNotifyTrigger. Indicates that all notify templates that are matched to the current entry event were triggered and returned or failed.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Filters.BeforeAllNotifyTriggerAttribute">
            <summary>
            Filter callback BeforeAllNotifyTrigger. Indicates that at least one notify template is matched to the current entry event.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Filters.AfterNotifyTriggerAttribute">
            <summary>
            Filter callback AfterNotifyTrigger. Indicates that a notify trigger was successful.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Filters.BeforeNotifyTriggerAttribute">
            <summary>
            Filter callback BeforeNotifyTrigger. Indicates that a matched notify template was found to the current entry event.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Filters.AfterReadMultipleAttribute">
            <summary>
            Filter callback AfterReadMultiple operation.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Filters.BeforeReadMultipleAttribute">
            <summary>
            Filter callback BeforeReadMultiple operation.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Filters.AfterTakeMultipleAttribute">
            <summary>
            Filter callback AfterTakeMultiple operation.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Filters.BeforeTakeMultipleAttribute">
            <summary>
            Filter callback BeforeTakeMultiple operation.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Filters.AfterUpdateAttribute">
            <summary>
            Filter callback AfterUpdate operation.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Filters.BeforeUpdateAttribute">
            <summary>
            Filter callback BeforeUpdate operation.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Filters.BeforeCleanSpaceAttribute">
            <summary>
            Filter callback BeforeCleanSpace operation.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Filters.BeforeNotifyAttribute">
            <summary>
            Filter callback Before notify register operation.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Filters.BeforeTakeAttribute">
            <summary>
            Filter callback BeforeTake operation.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Filters.BeforeReadAttribute">
            <summary>
            Filter callback BeforeRead operation.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Filters.AfterWriteAttribute">
            <summary>
            Filter callback AfterWrite operation.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Filters.OnFilterInitAttribute">
            <summary>
            Method name for filter lifecycle init callback. Can either have no arguments or a single
            argument that accepts <see cref="T:GigaSpaces.Core.ISpaceProxy"/>.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Filters.BeforeWriteAttribute">
            <summary>
            Filter callback BeforeWrite operation.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Filters.BeforeExecuteAttribute">
            <summary>
            Filter callback BeforeExecute operation.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Filters.AfterExecuteAttribute">
            <summary>
            Filter callback AfterExecute operation.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Filters.AfterReadAttribute">
            <summary>
            Filter callback AfterRead operation.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Filters.AfterTakeAttribute">
            <summary>
            Filter callback AfterTake operation.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Filters.FilterOperationDelegateInvoker">
             <summary>
             A filter operation delegate invoker, invoking a method associated with the given operation code.
             For single <see cref="T:GigaSpaces.Core.Filters.ISpaceFilterEntry"/> invocation
             (see <see cref="T:GigaSpaces.Core.Filters.ISpaceFilter"/> Process(SpaceContext,ISpaceFilter,FilterOperation))
             support the following different structures:
              
             A no op method callback. For example Test()
             A single parameter. The parameter can either be an <see cref="T:GigaSpaces.Core.Filters.ISpaceFilterEntry"/> 
             or the actual template object wrapped by the entry. If using actual types, this delegate will filter out
             all the types that are not assignable to it. For example: Test(ISpaceFilterEntry entry) or
             Test(SimpleMessage message).
             Two parameters. The first one maps to the previous option, the second one is the <see cref="T:GigaSpaces.Core.Filters.FilterOperation"/>.
             Three parameters. The first two maps to the previous option, the third one is a <see cref="T:GigaSpaces.Core.SecurityContext"/>.
            
             For multiple <see cref="T:GigaSpaces.Core.Filters.ISpaceFilterEntry"/> invocation
             (see <see cref="T:GigaSpaces.Core.Filters.ISpaceFilter"/> Process(SpaceContext,ISpaceFilter,ISpaceFilter,FilterOperation))
             support the following different structures:
             A no op method callback. For example Test()
             A single parameter. The parameter can either be an <see cref="T:GigaSpaces.Core.Filters.ISpaceFilterEntry"/> 
             or the actual template object wrapped by the entry. If using actual types, this delegate will filter out
             all the types that are not assignable to it. For example: Test(ISpaceFilterEntry entry) or
             Test(SimpleMessage message).
             Two parameters. The first one maps to the previous option, the second is the same as the first one since
             multiple entries always have two entries (mainly for update operations).
             Three parameters. The first two maps to the previous option, the second one is the <see cref="T:GigaSpaces.Core.Filters.FilterOperation"/>.
             Four parameters. The first three maps to the previous option, the third one is a <see cref="T:GigaSpaces.Core.SecurityContext"/>.   
             </summary>   
        </member>
        <member name="T:GigaSpaces.Core.Filters.ISpaceFilter">
             <summary>
             A filter is a special hook point inside the engine that enables
             integration with external systems or implementation of user 
             defined logic. The filter has a simple life-cycle: it initializes 
             itself in the init()  method, processes events in its process() 
             method and finally cleans resources on close(). The process() 
             method is called by the engine when an event that matches the 
             filter's Operation Code. The possible codes are specified by the 
             <see cref="T:GigaSpaces.Core.Filters.FilterOperation"/>. Filters are grouped by priorities. 
             Filters with higher priorities 
             are activated closer to the hook point. This means:
            
             * Before filters - filters with lower priorities will be activated first.
             * After filters - filters with higher priorities will be activated first.    
            
             Since filters are activated in sensitive hook points in the engine, 
             they should be careful with performing long blocking calls, 
             such as connecting to databases.
             </summary>
        </member>
        <member name="M:GigaSpaces.Core.Filters.ISpaceFilter.Init(GigaSpaces.Core.ISpaceProxy,System.String,System.Collections.Generic.IDictionary{System.String,System.String},GigaSpaces.Core.Filters.FilterPriority)">
            <summary>
            Initializes this filter.
            </summary>
            <param name="proxy">An embedded proxy to the space that contain this filter.</param>
            <param name="filterId">The name of this filter.</param>
            <param name="customProperties">The custom arguments that was passed when this filter was created. used for custom user defined properties</param>
            <param name="priority">Defines the order in which filters are activated.</param>
        </member>
        <member name="M:GigaSpaces.Core.Filters.ISpaceFilter.Process(GigaSpaces.Core.SecurityContext,GigaSpaces.Core.Filters.ISpaceFilterEntry,GigaSpaces.Core.Filters.FilterOperation)">
            <summary>
            This method is called by the engine when an event matching this filter's
            operation code occurs in the space engine.
            </summary>
            <param name="securityContext">The Context passed by the caller, contains security context.</param>
            <param name="entry">The entry related to the operation</param>
            <param name="operation">The operation that defines when this filter is activated. The operation codes are defined in <see cref="T:GigaSpaces.Core.Filters.ISpaceFilter"/></param>
        </member>
        <member name="M:GigaSpaces.Core.Filters.ISpaceFilter.Process(GigaSpaces.Core.SecurityContext,GigaSpaces.Core.Filters.ISpaceFilterEntry,GigaSpaces.Core.Filters.ISpaceFilterEntry,GigaSpaces.Core.Filters.FilterOperation)">
            <summary>
            This method is called by the engine when an event matching this filter's operation code occurs in the engine.		
            Notice: This is a special case that is called only on update() only on AfterUpdate.
            Also on BeforeNotifyTrigger and AfterNotifyTrigger.
            
            On AfterUpdate: the first entity represents the old entry while the second is the new entry.
            On BeforeNotifyTrigger and AfterNotifyTrigger: the first entity represents the entry while the second is the template.
            </summary>
            <param name="securityContext">The Context passed by the caller, contains security context.</param>
            <param name="firstEntry">The first entry related to the operation</param>
            <param name="secondEntry">The second entry related to the operation</param>
            <param name="operation">The operation that defines when this filter is activated. The operation codes are defined in <see cref="T:GigaSpaces.Core.Filters.ISpaceFilter"/></param>
        </member>
        <member name="T:GigaSpaces.Core.Filters.ISpaceFilterEntry">
            <summary>
            Represents an object instance passed to the ISpaceFilter with additional relevent information.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Filters.ISpaceFilterEntry.GetObject">
            <summary>
            Gets the object itself.
            </summary>
            <returns>Object contained within this entry</returns>
        </member>
        <member name="M:GigaSpaces.Core.Filters.ISpaceFilterEntry.UpdateObject(System.Object)">
            <summary>
            Update the object contained within this entry state.
            </summary>
            <param name="obj">Updated object</param>
        </member>
        <member name="P:GigaSpaces.Core.Filters.ISpaceFilterEntry.ObjectType">
            <summary>
            Gets the object type.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Filters.ISpaceFilterEntry.NotifyType">
            <summary>
            Gets the notify type.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Filters.MethodNameSpaceFilterConfigFactory">
             <summary>
             A <see cref="T:GigaSpaces.Core.Filters.SpaceFilterConfigFactory"/> implementation that accepts
             an object filter with different operation callbacks that are marked using this configurer. 
             For each available operation there is a property that accepts the method name to be invoked if the operation happend.
             Not setting a callback means that this filter will not listen to the mentioned operation. For example, if the filter has
             a method called DoSomethingBeforeWrite, the property BeforeWrite will need to be set with DoSomethingBeforeWrite.
            
             The methods marked with an attribute can accept different arguments. Please see
             <see cref="T:GigaSpaces.Core.Filters.FilterOperationDelegateInvoker"/> for all the different possibilities.
            
             For an object filter adapter that uses attributes please see <see cref="T:GigaSpaces.Core.Filters.AttributeSpaceFilterConfigFactory"/>.
             </summary>
        </member>
        <member name="P:GigaSpaces.Core.Filters.MethodNameSpaceFilterConfigFactory.OnFilterInit">
            <summary>
            Method name for filter lifecycle init callback. Can either have no arguments or a single
            argument that accepts <see cref="T:GigaSpaces.Core.ISpaceProxy"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Filters.MethodNameSpaceFilterConfigFactory.BeforeWrite">
            <summary>
            Filter callback BeforeWrite operation.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Filters.MethodNameSpaceFilterConfigFactory.AfterWrite">
            <summary>
            Filter callback AfterWrite operation.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Filters.MethodNameSpaceFilterConfigFactory.BeforeRead">
            <summary>
            Filter callback BeforeRead operation.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Filters.MethodNameSpaceFilterConfigFactory.AfterRead">
            <summary>
            Filter callback AfterRead operation.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Filters.MethodNameSpaceFilterConfigFactory.BeforeTake">
            <summary>
            Filter callback BeforeTake operation.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Filters.MethodNameSpaceFilterConfigFactory.AfterTake">
            <summary>
            Filter callback AfterTake operation.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Filters.MethodNameSpaceFilterConfigFactory.BeforeExecute">
            <summary>
            Filter callback BeforeExecute operation.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Filters.MethodNameSpaceFilterConfigFactory.AfterExecute">
            <summary>
            Filter callback AfterExecute operation.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Filters.MethodNameSpaceFilterConfigFactory.BeforeNotify">
            <summary>
            Filter callback Before notify register operation.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Filters.MethodNameSpaceFilterConfigFactory.BeforeCleanSpace">
            <summary>
            Filter callback BeforeCleanSpace operation.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Filters.MethodNameSpaceFilterConfigFactory.BeforeUpdate">
            <summary>
            Filter callback BeforeUpdate operation.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Filters.MethodNameSpaceFilterConfigFactory.AfterUpdate">
            <summary>
            Filter callback AfterUpdate operation.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Filters.MethodNameSpaceFilterConfigFactory.BeforeReadMultiple">
            <summary>
            Filter callback BeforeReadMultiple operation.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Filters.MethodNameSpaceFilterConfigFactory.AfterReadMultiple">
            <summary>
            Filter callback AfterReadMultiple operation.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Filters.MethodNameSpaceFilterConfigFactory.BeforeTakeMultiple">
            <summary>
            Filter callback BeforeTakeMultiple operation.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Filters.MethodNameSpaceFilterConfigFactory.AfterTakeMultiple">
            <summary>
            Filter callback AfterTakeMultiple operation.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Filters.MethodNameSpaceFilterConfigFactory.BeforeNotifyTrigger">
            <summary>
            Filter callback BeforeNotifyTrigger. Indicates that a matched notify template was found to the current entry event.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Filters.MethodNameSpaceFilterConfigFactory.AfterNotifyTrigger">
            <summary>
            Filter callback AfterNotifyTrigger. Indicates that a notify trigger was successful.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Filters.MethodNameSpaceFilterConfigFactory.BeforeAllNotifyTrigger">
            <summary>
            Filter callback BeforeAllNotifyTrigger. Indicates that at least one notify template is matched to the current entry event.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Filters.MethodNameSpaceFilterConfigFactory.AfterAllNotifyTrigger">
            <summary>
            Filter callback AfterAllNotifyTrigger. Indicates that all notify templates that are matched to the current entry event were triggered and returned or failed.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Filters.MethodNameSpaceFilterConfigFactory.BeforeRemoveByLease">
            <summary>
            Filter callback before an entry was removed due to lease expression or lease cancel.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Filters.MethodNameSpaceFilterConfigFactory.AfterRemoveByLease">
            <summary>
            Filter callback after an entry was removed due to lease expression or lease cancel.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Filters.MethodNameSpaceFilterConfigFactory.BeforeGetAdmin">
            <summary>
            Filter callback BeforeGetAdmin operation.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Filters.MethodNameSpaceFilterConfigFactory.SetSecurity">
            <summary>
            Filter callback SetSecurity operation.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Filters.SpaceFilterConfig">
            <summary>
            Defines configurations for a SpaceFilter.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Filters.SpaceFilterConfig.Name">
            <summary>
            Gets or sets the filter name.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Filters.SpaceFilterConfig.Filter">
            <summary>
            Gets or sets the filter instance.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Filters.SpaceFilterConfig.IsActiveWhenBackup">
            <summary>
            Gets or sets if this filter is active when the space is in backup mode.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Filters.SpaceFilterConfig.Enabled">
            <summary>
            Gets or sets if this filter is enabled.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Filters.SpaceFilterConfig.IsSecurityFilter">
            <summary>
            Gets or sets if this filter is a security filter.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Filters.SpaceFilterConfig.ShutdownSpaceOnInitFailure">
            <summary>
            Gets or sets if the space should shutdown on filter init failure.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Filters.SpaceFilterConfig.Priority">
            <summary>
            Gets or sets the filter priority.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Filters.SpaceFilterConfig.FilterOperations">
            <summary>
            Gets or sets the list of operation to be filtered.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Filters.SpaceFilterConfig.CustomProperties">
            <summary>
            Gets or sets a dictionary of properties to be passed to the filter on initialization.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Filters.SpaceFilterContainer.ReadSpaceFilterEntry(GigaSpaces.Core.Internal.Pbs.PbsInputStream)">
            <summary>
            Reads an ISpaceFilterEntity from the stream
            </summary>
            <param name="input">Input stream</param>		
            <returns>Deserialized ISpaceFilterEntity from the stream</returns>
        </member>
        <member name="M:GigaSpaces.Core.Filters.SpaceFilterContainer.SerializeSpaceFilterEntityResult(GigaSpaces.Core.Internal.Pbs.PbsOutputStream,GigaSpaces.Core.Filters.SpaceFilterEntry)">
            <summary>
            Serializes the space filter entity if it was updated and its updated state
            </summary>
            <param name="output">Target stream</param>
            <param name="filterEntity">SpaceFilterEntity to serialize</param>
        </member>
        <member name="M:GigaSpaces.Core.Filters.SpaceFilterContainer.DeserializeSecurityContext(GigaSpaces.Core.Internal.Pbs.PbsInputStream)">
            <summary>
            Deserialize a security context from the stream
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.Filters.SpaceFilterContainer.ResetCache">
            <summary>
            Resets cache snapshot state
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Filters.SpaceFilterContainer.Instance">
            <summary>
            Gets the ISpaceFilter instance contained within this container
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Filters.SpaceFilterEntry.ObjectUpdated">
            <summary>
            Gets wether the internal entity instance was updated
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Filters.FilterExecutionException">
            <summary>
            Thrown when a filter execution related error occurs.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Filters.FilterExecutionException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Filters.FilterExecutionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GigaSpaces.Core.Filters.FilterExecutionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:GigaSpaces.Core.Filters.FilterExecutionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="T:GigaSpaces.Core.Filters.SpaceFilterOperationDelegate">
             <summary>
             An <see cref="T:GigaSpaces.Core.Filters.ISpaceFilter"/> implementation that acts as an adapter
             delegating the execution of the filter lifecycle methods and specific operation to pluggable
             reflection based methods.
             
             Holds a <see cref="T:System.Reflection.MethodInfo"/> representing an init callback, its value can be null for cases where no delegation is required.
            
             Holds a map of <see cref="T:GigaSpaces.Core.Filters.FilterOperationDelegateInvoker"/> per operation code. 
             Once Process is called, a <see cref="T:GigaSpaces.Core.Filters.FilterOperationDelegateInvoker"/> is required
             based on the operation code, and if found, the invocation is delegated to it.    
             </summary>
        </member>
        <member name="M:GigaSpaces.Core.Filters.SpaceFilterOperationDelegate.Dispose">
            <summary>
            Cleanup any used resources.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Filters.SpaceFilterOperationDelegate.Init(GigaSpaces.Core.ISpaceProxy,System.String,System.Collections.Generic.IDictionary{System.String,System.String},GigaSpaces.Core.Filters.FilterPriority)">
            <summary>
            Initializes this filter.
            </summary>
            <param name="proxy">An embedded proxy to the space that contain this filter.</param>
            <param name="filterId">The name of this filter.</param>
            <param name="customProperties">The custom arguments that was passed when this filter was created. used for custom user defined properties</param>
            <param name="priority">Defines the order in which filters are activated.</param>
        </member>
        <member name="M:GigaSpaces.Core.Filters.SpaceFilterOperationDelegate.Process(GigaSpaces.Core.SecurityContext,GigaSpaces.Core.Filters.ISpaceFilterEntry,GigaSpaces.Core.Filters.FilterOperation)">
            <summary>
            This method is called by the engine when an event matching this filter's
            operation code occurs in the space engine.
            </summary>
            <param name="securityContext">The Context passed by the caller, contains security context.</param>
            <param name="entry">The entry related to the operation</param>
            <param name="operation">The operation that defines when this filter is activated. The operation codes are defined in <see cref="T:GigaSpaces.Core.Filters.ISpaceFilter"/></param>
        </member>
        <member name="M:GigaSpaces.Core.Filters.SpaceFilterOperationDelegate.Process(GigaSpaces.Core.SecurityContext,GigaSpaces.Core.Filters.ISpaceFilterEntry,GigaSpaces.Core.Filters.ISpaceFilterEntry,GigaSpaces.Core.Filters.FilterOperation)">
            <summary>
            This method is called by the engine when an event matching this filter's operation code occurs in the engine.		
            Notice: This is a special case that is called only on update() only on AfterUpdate.
            Also on BeforeNotifyTrigger and AfterNotifyTrigger.
            
            On AfterUpdate: the first entity represents the old entry while the second is the new entry.
            On BeforeNotifyTrigger and AfterNotifyTrigger: the first entity represents the entry while the second is the template.
            </summary>
            <param name="securityContext">The Context passed by the caller, contains security context.</param>
            <param name="firstEntry">The first entry related to the operation</param>
            <param name="secondEntry">The second entry related to the operation</param>
            <param name="operation">The operation that defines when this filter is activated. The operation codes are defined in <see cref="T:GigaSpaces.Core.Filters.ISpaceFilter"/></param>
        </member>
        <member name="T:GigaSpaces.Core.GigaSpacesFactory">
            <summary>
            This class is the starting point for
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.GigaSpacesFactory.LoadCustomConfiguration(System.String)">
            <summary>
            Loads configuration from a custom configuration file.
            </summary>
            <param name="customConfigFilePath">Path of custom configuration file.</param>
        </member>
        <member name="M:GigaSpaces.Core.GigaSpacesFactory.Initialize">
            <summary>
            Initializes the factory. If the factory is already initialized this method has no effect.
            Calling this method is optional - if it was not called, the factory will automatically invoke it
            on the first time it is required. Use this method if you wish to explicitly initialize the factory
            at a specific timing.
            </summary>
            <returns>true if initialization was executed, false if factory was already initialized.</returns>
        </member>
        <member name="M:GigaSpaces.Core.GigaSpacesFactory.ExpandXapNetEnvironmentVariables(System.String)">
            <summary>
            Expands XAP.NET environment variables in specified string, if any.
            </summary>
            <param name="s">String to expand</param>
            <returns>String with expanded variables</returns>
        </member>
        <member name="M:GigaSpaces.Core.GigaSpacesFactory.FindSpace(System.String)">
            <summary>
            Find the space specified by the url.
            </summary>
            <param name="url">The url of the requested space.</param>
            <returns>A proxy connected to the space.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.FinderException">Unable to find requested space.</exception>
        </member>
        <member name="M:GigaSpaces.Core.GigaSpacesFactory.FindSpace(System.String,GigaSpaces.Core.SpaceConfig)">
            <summary>
            Find the space specified by the cluster info and url.
            </summary>
            <param name="url">The url of the requested space.<br/>
            <remarks>
            Using semi-colon separated multiple URLs provides ability to define space search order.
            Search order is based on the URL location in the string starting the left side.
            i.e.:<code> “jini://mylookuphost/mycontainername/myspace; jini://*/*/otherspace;jini://mylookuphost/*/otherSpace2”</code>
            </remarks>
            </param>
            <param name="spaceConfig">Space Config to start the space.</param>
            <returns>A proxy connected to the space.</returns>	
        </member>
        <member name="M:GigaSpaces.Core.GigaSpacesFactory.FindSpace(System.String,GigaSpaces.Core.SecurityContext)">
            <summary>
            Find the space specified by the url.
            </summary>
            <param name="url">The url of the requested space.</param>
            <param name="securityContext">The security context required in order to connect to the space</param>
            <returns>A proxy connected to the space.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.FinderException">Unable to find requested space.</exception>
        </member>
        <member name="M:GigaSpaces.Core.GigaSpacesFactory.FindSpace(System.String,GigaSpaces.Core.SpaceConfig,GigaSpaces.Core.SecurityContext)">
            <summary>
            Find the space specified by the url.
            </summary>
            <param name="url">The url of the requested space.</param>
            <param name="spaceConfig">Space Config to start the space.</param>
            <param name="securityContext">The security context required in order to connect to the space</param>
            <returns>A proxy connected to the space.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.FinderException">Unable to find requested space.</exception>
        </member>
        <member name="M:GigaSpaces.Core.GigaSpacesFactory.FindDistributedTransactionManager(GigaSpaces.Core.JiniTransactionManagerLookupInfo)">
            <summary>
             Finds a distributed transaction manager using the specified lookup info.
            </summary>
            <param name="lookupInfo">Lookup information to be used for finding the transaction.</param>
            <returns>A distributed transaction manager.</returns>
        </member>
        <member name="M:GigaSpaces.Core.GigaSpacesFactory.CreateDistributedTransactionManager">
            <summary>
            Creates a distributed transaction manager.
            </summary>
            <returns>A Distributed transaction manager.</returns>
        </member>
        <member name="M:GigaSpaces.Core.GigaSpacesFactory.CreateLocalCache(GigaSpaces.Core.ISpaceProxy)">
            <summary>
            Creates a new local cache over the specified space proxy with default configuration.
            </summary>
            <param name="spaceProxy">Space proxy to cache.</param>
            <returns>A local cache.</returns>
        </member>
        <member name="M:GigaSpaces.Core.GigaSpacesFactory.CreateLocalCache(GigaSpaces.Core.ISpaceProxy,GigaSpaces.Core.Cache.LocalCacheConfig)">
            <summary>
            Creates a new local cache over the specified space proxy with the specified configuration.
            </summary>
            <param name="spaceProxy">Space proxy to cache.</param>
            <param name="config">Cache configuration.</param>
            <returns>A local cache.</returns>
        </member>
        <member name="M:GigaSpaces.Core.GigaSpacesFactory.CreateIdBasedLocalCache(GigaSpaces.Core.ISpaceProxy)">
            <summary>
            Creates a new id-based local cache over the specified space proxy with default configuration.
            </summary>
            <param name="spaceProxy">Space proxy to cache.</param>
            <returns>A local cache.</returns>
        </member>
        <member name="M:GigaSpaces.Core.GigaSpacesFactory.CreateIdBasedLocalCache(GigaSpaces.Core.ISpaceProxy,GigaSpaces.Core.Cache.IdBasedLocalCacheConfig)">
            <summary>
            Creates a new id-based local cache over the specified space proxy with the specified configuration.
            </summary>
            <param name="spaceProxy">Space proxy to cache.</param>
            <param name="config">Cache configuration.</param>
            <returns>A local cache.</returns>
        </member>
        <member name="M:GigaSpaces.Core.GigaSpacesFactory.CreateLocalView(GigaSpaces.Core.ISpaceProxy,System.Collections.Generic.ICollection{GigaSpaces.Core.View})">
            <summary>
            Creates a new local view 
            </summary>
            <param name="spaceProxy">Space proxy to create a view from.</param>        
            <param name="viewQueries">View(s) for matching in local view.</param>
            <returns>A configured local view.</returns>
        </member>
        <member name="M:GigaSpaces.Core.GigaSpacesFactory.CreateLocalView(GigaSpaces.Core.ISpaceProxy,System.Collections.Generic.ICollection{GigaSpaces.Core.View},GigaSpaces.Core.Cache.LocalViewConfig)">
            <summary>
            Creates a new local view 
            </summary>
            <param name="spaceProxy">Space proxy to create a view from.</param>
            <param name="config">Local view related configuration</param>
            <param name="viewQueries">View(s) for matching in local view.</param>
            <returns>A configured local view.</returns>
        </member>
        <member name="P:GigaSpaces.Core.GigaSpacesFactory.Configuration">
            <summary>
            Gets the GigaSpaces configuration.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.GigaSpacesFactory.IsInitialized">
            <summary>
            Returns true if the GigaSpacesFactory is initialized, false otherwise.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.GigaSpacesFactory.DefaultLeaseTime">
            <summary>
            Gets or sets the default lease time assigned to created proxies. 
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.GigaSpacesFactory.DefaultTimeOut">
            <summary>
            Gets or sets the default timeout assigned to created proxies. 
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.GigaSpacesFactory.DefaultMaxItems">
            <summary>
            Gets or sets the default max items assigned to created proxies. 
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.GigaSpacesFactory.DefaultEventSessionConfig">
            <summary>
            Gets or sets the default <see cref="T:GigaSpaces.Core.Events.EventSessionConfig"/> assigned to created proxies. 
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Commands.CallbackCheck.PbsCallbackCheckInitiator.Execute">
            <summary>
            Executes a callback check
            </summary>
            <returns>If callback mechanizm is working</returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Commands.DataEventSession.PbsDataEventSessionAddListener.Execute(GigaSpaces.Core.Internal.Providers.Cmd.Events.CmdDataEventSession,System.Int64,GigaSpaces.Core.Internal.ObjectContainer@,GigaSpaces.Core.Events.DataEventType,System.Int64,GigaSpaces.Core.Internal.Pbs.PbsObjectFormatter,System.Boolean,System.Boolean)">
            <summary>
            Executes an add listener command
            </summary>
            <param name="dataSession">data event session to register to the notification with</param>
            <param name="callbackHandleId">Handle if of the callback to the event</param>
            <param name="template">Template of the event</param>
            <param name="eventType">Event type</param>
            <param name="leaseDuration">Event lease</param>
            <param name="formatter">Object formatter</param>
            <param name="isBatch">Is batch notification registration</param>
            <param name="returnOnlyUids"></param>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Pbs.Commands.DataEventSession.PbsDataEventSessionBundle">
            <summary>
            Holds Data Event Session commands related consts
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Commands.DataEventSession.PbsDataEventSessionRemoveListener.Execute(GigaSpaces.Core.Internal.Providers.Cmd.Events.CmdDataEventSession,GigaSpaces.Core.Internal.Providers.Cmd.Events.CmdEventRegistration,System.Int64)">
            <summary>
            Executes RemoveListener on the proxied DataEventSession
            </summary>
            <param name="dataSession">Proxy to the DataEventSession</param>
            <param name="eventRegistration">Handle id of the registration</param>
            <param name="eventCallbackId">Handle id of the callback object of the event</param>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Pbs.Commands.EventRegistration.PbsEventRegistrationBundle">
            <summary>
            Holds all const related to EventRegistration commands
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Pbs.Commands.GSIterator.PbsGSIteratorBundle">
            <summary>
            Holds all the GSIterator related consts
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Commands.GSIterator.PbsGSIteratorGetExpiration.Execute``1(GigaSpaces.Core.Internal.Providers.Cmd.CmdSpaceIterator{``0})">
            <summary>
            Executes get expiration on the iterator
            </summary>
            <param name="iterator">Iterator's to execute on</param>				
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Commands.GSIterator.PbsGSIteratorMoveNext.Execute``1(GigaSpaces.Core.Internal.Providers.Cmd.CmdSpaceIterator{``0},System.Int64,``0@,GigaSpaces.Core.Internal.Pbs.PbsObjectFormatter,GigaSpaces.Core.Metadata.QueryResultType)">
            <summary>
            Executes move next logic on the iterator
            </summary>
            <typeparam name="T">Type of object</typeparam>
            <param name="iterator">Iterator to execute move next on</param>
            <param name="timeout">timeout of move next</param>
            <param name="obj">Result Object if such</param>
            <param name="formatter">Formatter to deserialize the object with</param>
            <param name="queryResultType"></param>
            <returns>If has next</returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Commands.GSIterator.PbsGSIteratorRenew.Execute``1(GigaSpaces.Core.Internal.Providers.Cmd.CmdSpaceIterator{``0},System.Int64)">
            <summary>
            Execute renew
            </summary>
            <param name="duration">renew duration</param>
            <param name="iterator">iterator to renew</param>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Pbs.Commands.IFilterEntry.PbsIFilterEntryBundle">
            <summary>
            Holds all the PbsIFilterEntryBundle related consts
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Commands.IFilterEntry.PbsIFilterEntryFetchFilterEntry.Execute(System.Int64,GigaSpaces.Core.Internal.Pbs.PbsObjectFormatter)">
            <summary>
            Fetch the object inside the Filter Entry of the given handle Id
            </summary>
            <param name="handleId">Handle Id of the entry to fetch</param>
            <param name="formatter">Formatter to serialize the entry with</param>
            <returns>object inside the filter</returns>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Pbs.Commands.IRemoteJSpaceAdmin.PbsIRemoteJSpaceAdminBundle">
            <summary>
            Holds all const related to IRemoteJSpaceAdminBundle commands
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Commands.IRemoteJSpaceAdmin.PbsIRemoteJSpaceAdminConstruct.Execute(GigaSpaces.Core.Internal.Providers.Cmd.CmdSpaceProxy)">
            <summary>
            Construct a new instance of IRemoteJSpaceAdmin and return a proxy to it
            </summary>
            <param name="proxy">Proxy to create the admin over</param>
            <returns>Proxy to the constructed instance</returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Commands.IRemoteJSpaceAdmin.PbsIRemoteJSpaceAdminGetRuntimeInfo.Execute(GigaSpaces.Core.Internal.Providers.Cmd.Admin.CmdServerAdmin,System.String)">
            <summary>
            Executes GetRuntimeInfo on the given admin
            </summary>
            <param name="admin">Admin to execute on</param>
            <param name="spaceTypeName">Space type name to get info for</param>
            <returns>SpaceRunTimeInfo for the requested type</returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Commands.IRemoteJSpaceAdmin.PbsIRemoteJSpaceAdminGetState.Execute(GigaSpaces.Core.Internal.Providers.Cmd.Admin.CmdServerAdmin)">
            <summary>
            Executes get state on the given admin
            </summary>
            <param name="admin">Admin to execute on</param>
            <returns>The space state</returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Commands.IRemoteJSpaceAdmin.PbsIRemoteJSpaceAdminGetTypeDescriptor.Execute(GigaSpaces.Core.Internal.Providers.Cmd.Admin.CmdServerAdmin,System.String)">
            <summary>
            Gets a Space Type Info of a given class type name
            </summary>
            <param name="admin">Admin to execute on</param>
            <param name="spaceTypeName">Class to get info for</param>
            <returns>ConcreteSpaceTypeInfo for that class</returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Commands.IRemoteJSpaceAdmin.PbsIRemoteJSpaceAdminSpaceCopy.Execute(GigaSpaces.Core.Internal.Providers.Cmd.Admin.CmdServerAdmin,GigaSpaces.Core.Internal.Providers.Cmd.CmdSpaceProxy,GigaSpaces.Core.Internal.ObjectContainer@,System.Boolean,System.Int32,GigaSpaces.Core.Internal.Pbs.PbsObjectFormatter)">
            <summary>
            Executes Space Copy with proxy argument
            </summary>
            <param name="admin">Admin to execute with</param>
            <param name="proxy">Proxy argument</param>
            <param name="template">Template to copy</param>
            <param name="includeNotifyTemplates">Should include notify template</param>
            <param name="chunkSize">Chunk size of copy</param>
            <param name="formatter">Formatter to serialize the template with</param>
            <returns>Space copy results</returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Commands.IRemoteJSpaceAdmin.PbsIRemoteJSpaceAdminSpaceCopy.Execute(GigaSpaces.Core.Internal.Providers.Cmd.Admin.CmdServerAdmin,System.String,GigaSpaces.Core.Internal.ObjectContainer@,System.Boolean,System.Int32,GigaSpaces.Core.Internal.Pbs.PbsObjectFormatter)">
            <summary>
            Executes Space Copy with source url argument
            </summary>
            <param name="admin">Admin to execute with</param>
            <param name="sourceUrl">source url argument</param>
            <param name="template">Template to copy</param>
            <param name="includeNotifyTemplates">Should include notify template</param>
            <param name="chunkSize">Chunk size of copy</param>
            <param name="formatter">Formatter to serialize the template with</param>
            <returns>Space copy results</returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Commands.IRemoteJSpaceAdmin.PbsIRemoteJSpaceAdminSpaceCopy.DeserializeSpaceCopyResult(GigaSpaces.Core.Internal.Pbs.PbsInputStream)">
            <summary>
            Deserialize space copy results from the stream
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Commands.IRemoteJSpaceAdmin.PbsIRemoteJSpaceAdminStart.Execute(GigaSpaces.Core.Internal.Providers.Cmd.Admin.CmdServerAdmin)">
            <summary>
            Executes start on the admin
            </summary>
            <param name="admin">Admin to execute on</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Commands.IRemoteJSpaceAdmin.PbsIRemoteJSpaceAdminStop.Execute(GigaSpaces.Core.Internal.Providers.Cmd.Admin.CmdServerAdmin)">
            <summary>
            Executes stop on the admin
            </summary>
            <param name="admin">Admin to execute on</param>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Pbs.Commands.ISpaceProxy.PbsISpaceProxyBundle">
            <summary>
            Holds ISpaceProxy commands related consts
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Commands.ISpaceProxy.PbsISpaceProxyClean.Execute(GigaSpaces.Core.Internal.Providers.Cmd.CmdSpaceProxy,System.String)">
            <summary>
            Executes clean on a give proxy
            </summary>
            <param name="proxy">proxy to execute on</param>
            <param name="typeName">type name, can be null</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Commands.ISpaceProxy.PbsISpaceProxyCreateLocalTransactionManager.Execute(GigaSpaces.Core.Internal.Providers.Cmd.CmdSpaceProxy)">
            <summary>
            Creates a local transaction manager
            </summary>
            <param name="proxy">proxy to execute on</param>
            <returns>Proxy to the created transaction manager</returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Commands.ISpaceProxy.PbsISpaceProxyFindSpace.Execute(System.String,GigaSpaces.Core.SpaceConfig,GigaSpaces.Core.SecurityContext)">
            <summary>
            Executes Find space command
            </summary>
            <param name="spaceUrl">Url of the space</param>		
            <param name="spaceConfig">configuration to create the space with.</param>
            <param name="securityContext">Security context to raise the space with</param>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Commands.ISpaceProxy.PbsISpaceProxyGetDirectProxy.Execute(GigaSpaces.Core.Internal.Providers.Cmd.CmdSpaceProxy)">
            <summary>
            Executes GetDirectProxy over a proxy
            </summary>
            <param name="proxy">proxy to get direct proxy over</param>
            <returns>created direct proxy</returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Commands.ISpaceProxy.PbsISpaceProxyPing.Execute(GigaSpaces.Core.Internal.Providers.Cmd.CmdSpaceProxy)">
            <summary>
            Executes ping on the proxy
            </summary>
            <param name="proxy">proxy to execute on</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Commands.ISpaceProxy.PbsISpaceProxyRegisterToSpaceModeEvents.Execute(GigaSpaces.Core.Internal.Providers.Cmd.CmdSpaceProxy)">
            <summary>
            Executes registration to space mode change events of the given proxy
            </summary>
            <param name="proxy">Proxy to register for</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Commands.ISpaceProxy.PbsISpaceProxySetContextClassLoader.Execute(GigaSpaces.Core.Internal.Providers.Cmd.CmdSpaceProxy)">
            <summary>
            Executes SetContextClassLoader for the current thread
            </summary>
            <param name="proxy">proxy to execute on</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Commands.ISpaceProxy.PbsISpaceProxySetProperties.Execute(GigaSpaces.Core.Internal.Providers.Cmd.CmdSpaceProxy,GigaSpaces.Core.Internal.Pbs.Commands.ISpaceProxy.PbsISpaceProxySetProperties.Property,System.Boolean)">
            <summary>
            Execute set property command on the proxy, boolean properties only
            </summary>
            <param name="proxy">proxy to execute on</param>
            <param name="property">Property type</param>
            <param name="value">Property value</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Commands.ISpaceProxy.PbsISpaceProxySetProperties.Execute(GigaSpaces.Core.Internal.Providers.Cmd.CmdSpaceProxy,GigaSpaces.Core.Internal.Pbs.Commands.ISpaceProxy.PbsISpaceProxySetProperties.Property,System.Int32)">
            <summary>
            Execute set property command on the proxy, integer properties only
            </summary>
            <param name="proxy">proxy to execute on</param>
            <param name="property">Property type</param>
            <param name="value">Property value</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Commands.ISpaceProxy.PbsISpaceProxyShutdown.Execute(GigaSpaces.Core.Internal.Providers.Cmd.CmdSpaceProxy)">
            <summary>
            Executes shutdown on the space container causing the space the close
            </summary>
            <param name="proxy">proxy to execute on</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Commands.ISpaceProxy.PbsISpaceProxySnapshot.Execute``1(GigaSpaces.Core.Internal.Providers.Cmd.CmdSpaceProxy,GigaSpaces.Core.Internal.ObjectContainer@)">
            <summary>
            Executes snap shot and created a proxy to a PreparedTemplate
            </summary>
            <param name="proxy">Proxy to execute on</param>
            <param name="template">Template to snapshot</param>		
            <returns></returns>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Pbs.Commands.Lease.PbsLeaseBundle">
            <summary>
            Holds Lease commands related consts
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Commands.Lease.PbsLeaseCancel.Execute(GigaSpaces.Core.Internal.Providers.Cmd.CmdLease)">
            <summary>
            Executes Lease cancel
            </summary>
            <param name="lease">Lease</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Commands.Lease.PbsLeaseGetExpiration.Execute(GigaSpaces.Core.Internal.Providers.Cmd.CmdLease)">
            <summary>
            Executes get expiration on the lease behind the proxy
            </summary>
            <param name="lease">Lease to execute on</param>
            <returns>expiration</returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Commands.Lease.PbsLeaseRenew.Execute(GigaSpaces.Core.Internal.Providers.Cmd.CmdLease,System.Int64)">
            <summary>
            Executes lease renew
            </summary>
            <param name="lease">Lease</param>
            <param name="duration">Duration of renew</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Commands.PbsCommandsBundle.CreateOutputStream(System.Byte,System.Byte,GigaSpaces.Core.Internal.DispatcherObjectProxy)">
            <summary>
            Creates a command stream with the routing prefix according to given
            bundle code and operation code
            </summary>
            <param name="bundleCode">states which bundle this command relates to</param>
            <param name="operationCode">states the operation code within the bundle of the desired command</param>
            <param name="objectProxy">Handle this commands relates to</param>
            <returns>new output stream with the appropriate routing prefix according to the bundle code and operation code</returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Commands.PbsCommandsBundle.CreateDestructStream(System.Byte,System.Int64)">
            <summary>
            Creates a stream representing a destruct command
            </summary>
            <param name="bundleCode">Instance related bundle code</param>
            <param name="handleId">Handle id of the instance to destruct</param>
            <returns>Stream containing the destruct command</returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Commands.PbsCommandsBundle.ExecuteGenericDestructCommand(System.Byte,System.Int64,System.Boolean)">
            <summary>
            Executes a generic destruct command that doesn't need any special handling on return values
            </summary>
            <param name="bundleCode">Instance related bundle code</param>
            <param name="handleId">Handle id of the instance to destruct</param>
            <param name="disposing">is explicit disposing</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Commands.PbsCommandsBundle.ExecuteDebugCommand(System.Byte,System.Byte)">
            <summary>
            Executes a debug command. used for debugging information
            </summary>
            <param name="bundleCode">bundle code</param>
            <param name="debugCommand">debug command</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Commands.PbsCommandsBundle.ExecuteGetInstancesTableSize(System.Byte)">
            <summary>
            Executes debug command, get instances count of the related bundle
            </summary>
            <param name="bundleCode">Bundle to get instances count from</param>
            <returns>Instances count</returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Commands.PbsCommandsBundle.ExecuteGetInstancesTableKeys(System.Byte)">
            <summary>
            Executes debug command, get instances keys of the related bundle
            </summary>
            <param name="bundleCode">Bundle to get instances keys from</param>
            <returns>Instances keys</returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Commands.PbsCommandsBundle.ExecuteJavaGCCollect">
            <summary>
            Executes debug command, calls java System.gc();
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Commands.PbsCommandsBundle.ExecuteGetThreadsStackTraceDump">
            <summary>
            Executes debug command, returns a string represnting all the threads current stack traces
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Commands.PbsDispatcher.Execute(GigaSpaces.Core.Internal.Pbs.PbsOutputStream,GigaSpaces.Core.Internal.DispatcherObjectProxy)">
             <summary>
             Executes the command serialized in the output stream and returns the result serialized in the input stream
             <para><b>The returned input stream is a reusable resource and must be explicitly released by calling <see cref="M:GigaSpaces.Core.Internal.Pbs.PbsStreamResource.ReleaseStream(GigaSpaces.Core.Internal.Pbs.PbsInputStream)"/>
            once all the relevant data has been read from the stream, otherwise this stream resource will leak!</b></para>
             </summary>
             <param name="output">stream containing command execution data</param>
             <param name="proxy">the proxy to the object this execution is invoked on, null if none</param>
             <returns>stream containing serialized command execution result</returns>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Pbs.Commands.PreparedTemplate.PbsPreparedTemplateBundle">
            <summary>
            Holds all const related to PreparedTemplate commands
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Pbs.Commands.TransactionManager.PbsTransactionManagerBundle">
            <summary>
            Holds Transaction Manager commands related consts
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Commands.TransactionManager.PbsTransactionManagerCreateTransaction.Execute(GigaSpaces.Core.Internal.Providers.Cmd.CmdTransactionManager,System.Int64)">
            <summary>
            Create a transaction with the given transaction manager 
            </summary>
            <param name="manager">transaction manager</param>
            <param name="leaseTime">Lease time of the transaction</param>
            <returns>Proxy to the created transaction</returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Commands.Transaction.PbsTransactionAbort.Execute(GigaSpaces.Core.Internal.Providers.Cmd.CmdTransaction,System.Int64)">
            <summary>
            Executes abort of transaction
            </summary>
            <param name="transaction">Transaction</param>
            <param name="timeout">Timeout miliseconds</param>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Pbs.Commands.Transaction.PbsTransactionBundle">
            <summary>
            Holds Transaction commands related consts
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Commands.Transaction.PbsTransactionCommit.Execute(GigaSpaces.Core.Internal.Providers.Cmd.CmdTransaction,System.Int64)">
            <summary>
            Executes commit of transaction
            </summary>
            <param name="transaction">Transaction</param>
            <param name="timeout">Timeout miliseconds</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Executers.CallbackCheck.PbsCallbackCheck.Execute(GigaSpaces.Core.Internal.Pbs.PbsInputStream,GigaSpaces.Core.Internal.Pbs.PbsOutputStream,System.Int64)">
            <summary>
            Executes the callback check
            </summary>
            <param name="input"></param>
            <param name="output"></param>
            <param name="handleId"></param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Executers.SpaceFilter.PbsSpaceFilterConstruct.Execute(GigaSpaces.Core.Internal.Pbs.PbsInputStream,GigaSpaces.Core.Internal.Pbs.PbsOutputStream,System.Int64)">
            <summary>
            Executes a given command
            </summary>
            <param name="input">Serialize command</param>
            <param name="output">Stream to serialize </param>
            <param name="handleId">handle to execute the operation on</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Executers.SpaceFilter.PbsSpaceFilterInit.Execute(GigaSpaces.Core.Internal.Pbs.PbsInputStream,GigaSpaces.Core.Internal.Pbs.PbsOutputStream,System.Int64)">
            <summary>
            Executes a given command
            </summary>
            <param name="input">Serialize command</param>
            <param name="output">Stream to serialize </param>
            <param name="handleId">handle to execute the operation on</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Executers.SpaceFilter.PbsSpaceFilterProcessOneEntry.Execute(GigaSpaces.Core.Internal.Pbs.PbsInputStream,GigaSpaces.Core.Internal.Pbs.PbsOutputStream,System.Int64)">
            <summary>
            Executes a given command
            </summary>
            <param name="input">Serialize command</param>
            <param name="output">Stream to serialize </param>
            <param name="handleId">handle to execute the operation on</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Executers.SpaceFilter.PbsSpaceFilterProcessTwoEntries.Execute(GigaSpaces.Core.Internal.Pbs.PbsInputStream,GigaSpaces.Core.Internal.Pbs.PbsOutputStream,System.Int64)">
            <summary>
            Executes a given command
            </summary>
            <param name="input">Serialize command</param>
            <param name="output">Stream to serialize </param>
            <param name="handleId">handle to execute the operation on</param>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Pbs.Executers.LeaseListenerCallbacks.PbsLeaseListenerCallbacksBundle">
            <summary>
            Holds all the related con
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Executers.PersistencyEnumerator.PbsPersistencyEnumeratorNextBatch.Execute(GigaSpaces.Core.Internal.Pbs.PbsInputStream,GigaSpaces.Core.Internal.Pbs.PbsOutputStream,System.Int64)">
            <summary>
            Executes a given command
            </summary>
            <param name="input">Serialize command</param>
            <param name="output">Stream to serialize </param>
            <param name="handleId">handle to execute the operation on</param>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Pbs.Executers.Persistency.PbsPersistencyEnumeratorQuery">
            <summary>
            Executes Enumerator command with given query
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Pbs.Executers.ProcessingUnit.PbsProcessingUnitInit">
            <summary>
            Executes Init method on a processing unit
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Executers.ProcessingUnit.PbsProcessingUnitInit.Execute(GigaSpaces.Core.Internal.Pbs.PbsInputStream,GigaSpaces.Core.Internal.Pbs.PbsOutputStream,System.Int64)">
            <summary>
            Executes a given command
            </summary>
            <param name="input">Serialize command</param>
            <param name="output">Stream to serialize </param>
            <param name="handleId">handle to execute the operation on</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.PbsObjectFormatter.WriteTemplateAsByteArray(GigaSpaces.Core.Internal.Pbs.PbsOutputStream,GigaSpaces.Core.Internal.ObjectContainer@)">
            <summary>
            Writes a template to the stream		
            </summary>
            <param name="output">Target stream.</param>
            <param name="template">Template to write</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.PbsObjectFormatter.ReadPrimitiveArray(GigaSpaces.Core.Internal.Pbs.PbsInputStream)">
            <summary>
            Reads a primitive objects array
            </summary>
            <param name="stream">Source stream.</param>
            <returns>The object array read from the stream.</returns>
        </member>
        <member name="T:GigaSpaces.Core.IPreparedTemplate`1">
            <summary>
            Encapsulates a template that was prepared by a space proxy.
            </summary>
            <typeparam name="T">Type of entry.</typeparam>
        </member>
        <member name="T:GigaSpaces.Core.Admin.IServerAdmin">
             <summary>
             Provides space server administration operations.
             <remarks>
             The Admin API operations, 
             <see cref="M:GigaSpaces.Core.Admin.IServerAdmin.GetRuntimeInfo"/>,  
             <see cref="M:GigaSpaces.Core.Admin.IServerAdmin.GetTypeDescriptor(System.String)"/>, 
             <see cref="M:GigaSpaces.Core.Admin.IServerAdmin.GetTypeDescriptor(System.Type)"/>, 
             <see cref="M:GigaSpaces.Core.Admin.IServerAdmin.SpaceCopy``1(GigaSpaces.Core.IReadOnlySpaceProxy,``0,System.Int32)"/>
             <see cref="M:GigaSpaces.Core.Admin.IServerAdmin.SpaceCopy``1(System.String,``0,System.Int32)"/> 
             and <see cref="M:GigaSpaces.Core.Admin.IServerAdmin.Shutdown"/>,
             are supported only for non-clustered proxy.  
            To get a non-clustered proxy for a specific cluster member see <see cref="M:GigaSpaces.Core.Admin.IServerAdmin.GetDirectProxy"/>.
             </remarks>
             </summary>
        </member>
        <member name="M:GigaSpaces.Core.Admin.IServerAdmin.GetClusterMemberNames">
            <summary>
            Gets an array of all the members name in the cluster.
            </summary>
            <returns>Array of members names</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.IServerAdmin.GetClusteredProxy">
            <summary>
            If the space is clustered and this proxy is direct, returns a proxy to the entire cluster.
            </summary>
            <returns>A proxy to the entire cluster.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.IServerAdmin.GetDirectProxy">
            <summary>
            Gets a direct proxy to a member of the cluster.
            Using this method with a non-embedded proxy will result in a arbitrary cluster member selection. 
            </summary>
            <returns>A direct proxy.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.IServerAdmin.GetDirectProxy(System.String)">
            <summary>
            Gets a direct proxy to the specified member of the cluster.
            </summary>
            <param name="memberName">Requested member name.</param>
            <returns>A direct proxy.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.IServerAdmin.GetRuntimeInfo">
            <summary>
            Returns runtime information about all the types in the space.
            <br/>
            Supported only for non-clustered proxy see <see cref="M:GigaSpaces.Core.Admin.IServerAdmin.GetDirectProxy"/>.
            </summary>
            <returns>Runtime information about types in the space.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.IServerAdmin.GetRuntimeInfo(System.String)">
            <summary>
            Returns runtime information about for the specified type and its subtypes.
            <br/>
            Supported only for non-clustered proxy see <see cref="M:GigaSpaces.Core.Admin.IServerAdmin.GetDirectProxy"/>.
            </summary>
            <param name="spaceTypeName">Type name in the space.</param>
            <returns>Runtime information about types in the space.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.IServerAdmin.GetRuntimeInfo(System.Type)">
            <summary>
            Returns runtime information about for the specified type and its subtypes.
            <br/>
            Supported only for non-clustered proxy see <see cref="M:GigaSpaces.Core.Admin.IServerAdmin.GetDirectProxy"/>.
            </summary>
            <param name="type">Type to retrieve.</param>
            <returns>Runtime information about types in the space.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.IServerAdmin.GetTypeDescriptor(System.String)">
            <summary>
            Returns information about a type in the space.
            <br/>
            Supported only for non-clustered proxy see <see cref="M:GigaSpaces.Core.Admin.IServerAdmin.GetDirectProxy"/>.
            </summary>
            <param name="spaceTypeName">Name of type in the space</param>
            <returns>Type information.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.IServerAdmin.GetTypeDescriptor(System.Type)">
            <summary>
            Returns information about a type in the space.
            <br/>
            Supported only for non-clustered proxy see <see cref="M:GigaSpaces.Core.Admin.IServerAdmin.GetDirectProxy"/>.
            </summary>
            <param name="type">The type to retrieve.</param>
            <returns>Type information.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.IServerAdmin.SpaceCopy``1(System.String,``0,System.Int32)">
            <summary>
            Copies all data matching the specified template from the specified space 
            to the current space.
            <br/>
            Supported only for non-clustered proxy see <see cref="M:GigaSpaces.Core.Admin.IServerAdmin.GetDirectProxy"/>.
            </summary>
            <typeparam name="T">Type of template.</typeparam>
            <param name="sourceUrl">Url of space to copy data from.</param>
            <param name="template">Template to use for matching.</param>
            <param name="batchSize">Batch size for copy operation.</param>
            <returns>Results of the copy operation.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.IServerAdmin.SpaceCopy``1(GigaSpaces.Core.IReadOnlySpaceProxy,``0,System.Int32)">
            <summary>
            Copies all data matching the specified template from the specified space 
            to the current space.
            <br/>
            Supported only for non-clustered proxy see <see cref="M:GigaSpaces.Core.Admin.IServerAdmin.GetDirectProxy"/>.
            </summary>
            <typeparam name="T">Type of template.</typeparam>
            <param name="sourceProxy">proxy to copy data from.</param>
            <param name="template">Template to use for matching.</param>
            <param name="batchSize">Batch size for copy operation.</param>
            <returns>Results of the copy operation.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Admin.IServerAdmin.Shutdown">
            <summary>
            Shuts down the space.
            <br/>
            Supported only for non-clustered proxy see <see cref="M:GigaSpaces.Core.Admin.IServerAdmin.GetDirectProxy"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.IServerAdmin.State">
            <summary>
             Returns the current state of the space.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.IServerAdmin.SpaceModeChanging">
            <summary>
            Occures when the space mode is changing.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Admin.IServerAdmin.SpaceModeChanged">
            <summary>
            Occures after the space mode has changed.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Admin.IServerAdmin.SpaceMode">
            <summary>
            Gets the current running mode of the space.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Providers.Cmd.CmdLease">
            <summary>
            An implementation of Lease which is a proxy to a remote lease object
            that lives inside a jvm
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.ISpaceIterator`1">
            <summary>
            Provides an encapsulation of an iterator over a space proxy.
            </summary>
            <typeparam name="T">Type of object to read.</typeparam>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceIterator`1.Renew(System.Int64)">
            <summary>
            Used to renew the iterator's lease for an additional period of time, specified in milliseconds.
            </summary>
            <param name="duration">The requested duration in milliseconds.</param>
            <exception cref="T:GigaSpaces.Core.Exceptions.LeaseDeniedException">The iterator's lease has already expired.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ISpaceIterator`1.MoveNext(System.Int64)">
            <summary>
            Same as MoveNext() but with blocking behavior, blocking until a matched entity is available or until timeout expires.
            </summary>
            <param name="timeout"> time to wait until a next element is available.</param>
            <returns>true if there was a next entry, false otherwise.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.NoSuchElementException">Timeout expired and no available match was found.</exception>
        </member>
        <member name="P:GigaSpaces.Core.ISpaceIterator`1.Space">
            <summary>
            Returns the space proxy which is iterated.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.ISpaceIterator`1.Templates">
            <summary>
            Returns the template(s) used for the iteration.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.ISpaceIterator`1.Scope">
            <summary>
            Returns the iteration scope.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.ISpaceIterator`1.BufferSize">
            <summary>
            Returns the buffer size of the iterator.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.ISpaceIterator`1.LeaseTime">
            <summary>
            Returns the original requested lease time.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.ISpaceIterator`1.Expiration">
            <summary>
            Returns the absolute time that the lease will expire, represented as milliseconds from the beginning of the epoch, relative to the local clock.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.SpaceProxyFactory.ClusterInfoToUrl(System.String,GigaSpaces.Core.ClusterInfo)">
            <summary>
            Joins cluster info with a string url into one space finder url
            </summary>
            <param name="url">The url of the requested space.</param>
            <param name="clusterInfo">The cluster info of the requested space.</param>
            <returns>new finder url that consists of the previous url joined with the cluster info</returns>
        </member>
        <member name="T:GigaSpaces.Core.ITransaction">
            <summary>
            Interface for classes representing transactions supported by the space.
            </summary>
            <example>
            Transaction usage is divided to 3 steps: creating the transaction, using the transaction
            to perform operations, and finally committing/aborting the work being done.
            <code>
            // Find the default embedded space:
            ISpaceProxy proxy = GigaSpacesFactory.FindSpace("/./MySpace");
            // Create an automatically disposed transaction scope:
            using (ITransaction tx = proxy.CreateLocalTransaction())
            {
            	try
            	{
            		// Read a person - use the transaction to lock it:
            		Person p = proxy.Take&lt;Person&gt;(new Person(), tx);
            		// Update the person's name:
            		p.Name = p.Name + " (updated in a transaction)";
            		// Update the person in space:
            		proxy.Write&lt;Person&gt;(p, tx);
            		// Commit the transaction:
            		tx.Commit();
            	}
            	catch
            	{
            		// In case of an exception, abort the transaction:
            		tx.Abort();
            		throw;
            	}
            }
            </code>
            </example>
        </member>
        <member name="M:GigaSpaces.Core.ITransaction.Abort">
            <summary>
            Abort the transaction.
            </summary>
            <exception cref="T:GigaSpaces.Core.Exceptions.UnknownTransactionException">
            The transaction is unknown to the manager. 
            This may be because the transaction ID was incorrect, or because the transaction 
            has proceeded to cleanup due to an earlier commit or abort, and has been forgotten.
            </exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.CannotAbortException">The transaction has already been committed.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ITransaction.Abort(System.Int64)">
            <summary>
            Abort the transaction, waiting for participants to be notified of the decision.
            </summary>
            <param name="timeout">Time to wait, from the start of the call until all participants have been notified of the transaction manager's decision.</param>
            <exception cref="T:GigaSpaces.Core.Exceptions.UnknownTransactionException">
            The transaction is unknown to the manager. 
            This may be because the transaction ID was incorrect, or because the transaction 
            has proceeded to cleanup due to an earlier commit or abort, and has been forgotten.
            </exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.CannotAbortException">The transaction has already been committed.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TimeoutExpiredException">
            The timeout expired before all participants have been notified.
            </exception>
        </member>
        <member name="M:GigaSpaces.Core.ITransaction.Commit">
            <summary>
            Commits the transaction.
            </summary>
            <exception cref="T:GigaSpaces.Core.Exceptions.UnknownTransactionException">
            The transaction is unknown to the manager. 
            This may be because the transaction ID was incorrect, or because the transaction 
            has proceeded to cleanup due to an earlier commit or abort, and has been forgotten.
            </exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.CannotCommitException">The transaction has already been aborted.</exception>
        </member>
        <member name="M:GigaSpaces.Core.ITransaction.Commit(System.Int64)">
            <summary>
            Commits the transaction, waiting for participants to be notified of the decision.
            </summary>
            <param name="timeout">Time to wait, from the start of the call until all participants have been notified of the transaction manager's decision.</param>
            <exception cref="T:GigaSpaces.Core.Exceptions.UnknownTransactionException">
            The transaction is unknown to the manager. 
            This may be because the transaction ID was incorrect, or because the transaction 
            has proceeded to cleanup due to an earlier commit or abort, and has been forgotten.
            </exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.CannotCommitException">The transaction has already been aborted.</exception>
            <exception cref="T:GigaSpaces.Core.Exceptions.TimeoutExpiredException">
            The timeout expired before all participants have been notified.
            </exception>
        </member>
        <member name="M:GigaSpaces.Core.ITransaction.SetAbortOnly">
            <summary>
            Sets the transaction state to abort only, as a result a <see cref="M:GigaSpaces.Core.ITransaction.Commit"/> operation will result in an <see cref="M:GigaSpaces.Core.ITransaction.Abort"/> operation.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.ITransaction.Lease">
            <summary>
            Gets the transaction lease time.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.ITransaction.Manager">
            <summary>
            Gets the transaction manager which created this transaction.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.ITransactionManager">
            <summary>
            The interface used for managers of the two-phase commit protocol for top-level transactions.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.ITransactionManager.Create(System.Int64)">
            <summary>
            Create a new transaction with the specified lease time.
            </summary>
            <param name="leaseTime">Time for transaction to live, in milliseconds.</param>
            <returns>A new transaction.</returns>
        </member>
        <member name="M:GigaSpaces.Core.ITransactionManager.Create">
            <summary>
            Create a new transaction with the default lease time.
            </summary>        
            <returns>A new transaction.</returns>
        </member>
        <member name="P:GigaSpaces.Core.ITransactionManager.DefaultLeaseTime">
            <summary>
            Gets or sets the default lease time for transaction creation.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Events.IEventSession">
            <summary>
            A base interface for all EventSession types.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Events.IEventSession.Space">
            <summary>
            Returns the space this event session belongs to.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Events.IEventSession.SessionConfig">
            <summary>
            Returns the configuration used to create this event session.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Events.IEventSession.Transaction">
            <summary>
            Returns the transaction (if any) associated with this event session.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Events.IDataEventSession">
            <summary>
            Provides functionality to add/remove listeners to data events.
            </summary>
            <example>
            The following class demonstrates subscribing a callback method which is invoked whenever a new 
            instance of type Person is written to the space.
            <code>
            public class Demo
            {
            	public void Subscribe(ISpaceProxy proxy)
            	{
            		// Create a new event configuration:
            		EventSessionConfig eventConfig = new EventSessionConfig();
            		eventConfig.Batch = true;
            		eventConfig.BatchSize = 10;
            		eventConfig.BatchTime = 1000;
            		// Create a new event session:
            		IDataEventSession eventSession = proxy.CreateDataEventSession(eventConfig);
            		// Subscribe to new persons written to space:
            		// NOTE: If you don't need a custom configuration, you can use proxy.DefaultDataEventSession instead.
            		eventSession.AddListener&lt;Person&gt;(new Person(), Space_PersonChanged, DataEventType.Write);
            	}
            
            	private void Space_PersonChanged(object sender, SpaceDataEventArgs&lt;Person&gt; e)
            	{
            		// Log the notified person:
            		Console.WriteLine("New person in space: " + e.Object.ToString());			
            	}
            }
            </code>
            </example>
        </member>
        <member name="M:GigaSpaces.Core.Events.IDataEventSession.AddListener``1(``0,System.EventHandler{GigaSpaces.Core.Events.SpaceDataEventArgs{``0}})">
            <summary>
            Registers the listener to the space using the specified template.
            </summary>
            <typeparam name="T">Type of object to listen to.</typeparam>
            <param name="template">The template used for matching.</param>
            <param name="listener">The listener which will handle notifications.</param>
            <returns>An event registration token.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Events.IDataEventSession.AddListener``1(``0,System.EventHandler{GigaSpaces.Core.Events.SpaceDataEventArgs{``0}},GigaSpaces.Core.Events.DataEventType)">
            <summary>
            Registers the listener to the space using the specified template.
            </summary>
            <typeparam name="T">Type of object to listen to.</typeparam>
            <param name="template">The template used for matching.</param>
            <param name="listener">The listener which will handle notifications.</param>
            <param name="eventType">The type of events you wish to receive notification on.</param>
            <returns>An event registration token.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Events.IDataEventSession.AddListener``1(``0,System.EventHandler{GigaSpaces.Core.Events.SpaceDataEventArgs{``0}},System.Int64)">
            <summary>
            Registers the listener to the space using the specified template.
            </summary>
            <typeparam name="T">Type of object to listen to.</typeparam>
            <param name="template">The template used for matching.</param>
            <param name="listener">The listener which will handle notifications.</param>
            <param name="leaseTime">The time duration in which the listener will be receiving calls.</param>
            <returns>An event registration token.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Events.IDataEventSession.AddListener``1(``0,System.EventHandler{GigaSpaces.Core.Events.SpaceDataEventArgs{``0}},GigaSpaces.Core.Events.DataEventType,System.Int64)">
            <summary>
            Registers the listener to the space using the specified template.
            </summary>
            <typeparam name="T">Type of object to listen to.</typeparam>
            <param name="template">The template used for matching.</param>
            <param name="listener">The listener which will handle notifications.</param>
            <param name="eventType">The type of events you wish to receive notification on.</param>
            <param name="leaseTime">The time duration in which the listener will be receiving calls.</param>
            <returns>An event registration token.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Events.IDataEventSession.AddListener``1(GigaSpaces.Core.IQuery{``0},System.EventHandler{GigaSpaces.Core.Events.SpaceDataEventArgs{``0}})">
            <summary>
            Registers the listener to the space using the specified template.
            </summary>
            <typeparam name="T">Type of object to listen to.</typeparam>
            <param name="query">The query used for matching.</param>
            <param name="listener">The listener which will handle notifications.</param>
            <returns>An event registration token.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.SqlQueryException">The query template is an illegal SqlQuery.</exception>
        </member>
        <member name="M:GigaSpaces.Core.Events.IDataEventSession.AddListener``1(GigaSpaces.Core.IQuery{``0},System.EventHandler{GigaSpaces.Core.Events.SpaceDataEventArgs{``0}},GigaSpaces.Core.Events.DataEventType)">
            <summary>
            Registers the listener to the space using the specified template.
            </summary>
            <typeparam name="T">Type of object to listen to.</typeparam>
            <param name="query">The query used for matching.</param>
            <param name="listener">The listener which will handle notifications.</param>
            <param name="eventType">The type of events you wish to receive notification on.</param>
            <returns>An event registration token.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.SqlQueryException">The query template is an illegal SqlQuery.</exception>
        </member>
        <member name="M:GigaSpaces.Core.Events.IDataEventSession.AddListener``1(GigaSpaces.Core.IQuery{``0},System.EventHandler{GigaSpaces.Core.Events.SpaceDataEventArgs{``0}},System.Int64)">
            <summary>
            Registers the listener to the space using the specified template.
            </summary>
            <typeparam name="T">Type of object to listen to.</typeparam>
            <param name="query">The query used for matching.</param>
            <param name="listener">The listener which will handle notifications.</param>
            <param name="leaseTime">The time duration in which the listener will be receiving calls.</param>
            <returns>An event registration token.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.SqlQueryException">The query template is an illegal SqlQuery.</exception>
        </member>
        <member name="M:GigaSpaces.Core.Events.IDataEventSession.AddListener``1(GigaSpaces.Core.IQuery{``0},System.EventHandler{GigaSpaces.Core.Events.SpaceDataEventArgs{``0}},GigaSpaces.Core.Events.DataEventType,System.Int64)">
            <summary>
            Registers the listener to the space using the specified template.
            </summary>
            <typeparam name="T">Type of object to listen to.</typeparam>
            <param name="query">The query used for matching.</param>
            <param name="listener">The listener which will handle notifications.</param>
            <param name="eventType">The type of events you wish to receive notification on.</param>
            <param name="leaseTime">The time duration in which the listener will be receiving calls.</param>
            <returns>An event registration token.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.SqlQueryException">The query template is an illegal SqlQuery.</exception>
        </member>
        <member name="M:GigaSpaces.Core.Events.IDataEventSession.RemoveListener(GigaSpaces.Core.Events.IEventRegistration)">
            <summary>
            Unregisters the listener from the space. 
            </summary>
            <param name="registration">The registration token received from the server when the listener was added.</param>
        </member>
        <member name="M:GigaSpaces.Core.Events.IDataEventSession.AddBatchListener``1(``0,System.EventHandler{GigaSpaces.Core.Events.SpaceBatchDataEventArgs{``0}})">
            <summary>
            Registers the listener to the space using the specified template.
            This can only be used when the <see cref="T:GigaSpaces.Core.Events.IDataEventSession"/> is created with <see cref="P:GigaSpaces.Core.Events.EventSessionConfig.Batch"/> enabled.
            </summary>
            <typeparam name="T">Type of object to listen to.</typeparam>
            <param name="template">The template used for matching.</param>
            <param name="listener">The listener which will handle notifications.</param>
            <returns>An event registration token.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Events.IDataEventSession.AddBatchListener``1(``0,System.EventHandler{GigaSpaces.Core.Events.SpaceBatchDataEventArgs{``0}},GigaSpaces.Core.Events.DataEventType)">
            <summary>
            Registers the listener to the space using the specified template.
            This can only be used when the <see cref="T:GigaSpaces.Core.Events.IDataEventSession"/> is created with <see cref="P:GigaSpaces.Core.Events.EventSessionConfig.Batch"/> enabled.
            </summary>
            <typeparam name="T">Type of object to listen to.</typeparam>
            <param name="template">The template used for matching.</param>
            <param name="listener">The listener which will handle notifications.</param>
            <param name="eventType">The type of events you wish to receive notification on.</param>		
            <returns>An event registration token.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Events.IDataEventSession.AddBatchListener``1(``0,System.EventHandler{GigaSpaces.Core.Events.SpaceBatchDataEventArgs{``0}},System.Int64)">
            <summary>
            Registers the listener to the space using the specified template.
            This can only be used when the <see cref="T:GigaSpaces.Core.Events.IDataEventSession"/> is created with <see cref="P:GigaSpaces.Core.Events.EventSessionConfig.Batch"/> enabled.
            </summary>
            <typeparam name="T">Type of object to listen to.</typeparam>
            <param name="template">The template used for matching.</param>
            <param name="listener">The listener which will handle notifications.</param>
            <param name="leaseTime">The time duration in which the listener will be receiving calls.</param>
            <returns>An event registration token.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Events.IDataEventSession.AddBatchListener``1(``0,System.EventHandler{GigaSpaces.Core.Events.SpaceBatchDataEventArgs{``0}},GigaSpaces.Core.Events.DataEventType,System.Int64)">
            <summary>
            Registers the listener to the space using the specified template.
            This can only be used when the <see cref="T:GigaSpaces.Core.Events.IDataEventSession"/> is created with <see cref="P:GigaSpaces.Core.Events.EventSessionConfig.Batch"/> enabled.
            </summary>
            <typeparam name="T">Type of object to listen to.</typeparam>
            <param name="template">The template used for matching.</param>
            <param name="listener">The listener which will handle notifications.</param>
            <param name="leaseTime">The time duration in which the listener will be receiving calls.</param>
            <param name="eventType">The type of events you wish to receive notification on.</param>
            <returns>An event registration token.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Events.IDataEventSession.AddBatchListener``1(GigaSpaces.Core.IQuery{``0},System.EventHandler{GigaSpaces.Core.Events.SpaceBatchDataEventArgs{``0}})">
            <summary>
            Registers the listener to the space using the specified template.
            This can only be used when the <see cref="T:GigaSpaces.Core.Events.IDataEventSession"/> is created with <see cref="P:GigaSpaces.Core.Events.EventSessionConfig.Batch"/> enabled.
            </summary>
            <typeparam name="T">Type of object to listen to.</typeparam>
            <param name="query">The query used for matching.</param>
            <param name="listener">The listener which will handle notifications.</param>
            <returns>An event registration token.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.SqlQueryException">The query template is an illegal SqlQuery.</exception>
        </member>
        <member name="M:GigaSpaces.Core.Events.IDataEventSession.AddBatchListener``1(GigaSpaces.Core.IQuery{``0},System.EventHandler{GigaSpaces.Core.Events.SpaceBatchDataEventArgs{``0}},GigaSpaces.Core.Events.DataEventType)">
            <summary>
            Registers the listener to the space using the specified template.
            This can only be used when the <see cref="T:GigaSpaces.Core.Events.IDataEventSession"/> is created with <see cref="P:GigaSpaces.Core.Events.EventSessionConfig.Batch"/> enabled.
            </summary>
            <typeparam name="T">Type of object to listen to.</typeparam>
            <param name="query">The query used for matching.</param>
            <param name="listener">The listener which will handle notifications.</param>
            <param name="eventType">The type of events you wish to receive notification on.</param>
            <returns>An event registration token.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.SqlQueryException">The query template is an illegal SqlQuery.</exception>
        </member>
        <member name="M:GigaSpaces.Core.Events.IDataEventSession.AddBatchListener``1(GigaSpaces.Core.IQuery{``0},System.EventHandler{GigaSpaces.Core.Events.SpaceBatchDataEventArgs{``0}},System.Int64)">
            <summary>
            Registers the listener to the space using the specified template.
            This can only be used when the <see cref="T:GigaSpaces.Core.Events.IDataEventSession"/> is created with <see cref="P:GigaSpaces.Core.Events.EventSessionConfig.Batch"/> enabled.
            </summary>
            <typeparam name="T">Type of object to listen to.</typeparam>
            <param name="query">The query used for matching.</param>
            <param name="listener">The listener which will handle notifications.</param>
            <param name="leaseTime">The time duration in which the listener will be receiving calls.</param>
            <returns>An event registration token.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.SqlQueryException">The query template is an illegal SqlQuery.</exception>
        </member>
        <member name="M:GigaSpaces.Core.Events.IDataEventSession.AddBatchListener``1(GigaSpaces.Core.IQuery{``0},System.EventHandler{GigaSpaces.Core.Events.SpaceBatchDataEventArgs{``0}},GigaSpaces.Core.Events.DataEventType,System.Int64)">
            <summary>
            Registers the listener to the space using the specified template.
            This can only be used when the <see cref="T:GigaSpaces.Core.Events.IDataEventSession"/> is created with <see cref="P:GigaSpaces.Core.Events.EventSessionConfig.Batch"/> enabled.
            </summary>
            <typeparam name="T">Type of object to listen to.</typeparam>
            <param name="query">The query used for matching.</param>
            <param name="listener">The listener which will handle notifications.</param>
            <param name="eventType">The type of events you wish to receive notification on.</param>
            <param name="leaseTime">The time duration in which the listener will be receiving calls.</param>
            <returns>An event registration token.</returns>
            <exception cref="T:GigaSpaces.Core.Exceptions.SqlQueryException">The query template is an illegal SqlQuery.</exception>
        </member>
        <member name="T:GigaSpaces.Core.Events.IEventRegistration">
            <summary>
            Represents the result of an event registration by an <see cref="T:GigaSpaces.Core.Events.IEventSession"/>
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Events.IEventRegistration.ID">
            <summary>
            Returns the identifier that will be used in all events generated for this interest registration.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Events.IEventRegistration.Lease">
            <summary>
            Returns the Lease object for this registration.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Events.IEventRegistration.SequenceNumber">
            <summary>
            Returns the value of the sequence number on the event kind that was current when the 
            registration was granted, allowing comparison with the sequence number in any 
            subsequent notifications.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Events.IEventRegistration.Source">
            <summary>
            Returns the source that will be used in all events generated for this interest registration.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Providers.Cmd.Events.CmdLeaseRenewalListener">
            <summary>
            Lease renewal callback Listener
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Events.SpaceDataEventArgs`1">
            <summary>
            Encapsulates arguments related to space data events.
            </summary>
            <typeparam name="T">Type of entry which triggered the event.</typeparam>
        </member>
        <member name="F:GigaSpaces.Core.Events.SpaceDataEventArgs`1._template">
            <summary>
            Storage field for Template property.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Events.SpaceDataEventArgs`1._object">
            <summary>
            Storage field for Object property.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Events.SpaceDataEventArgs`1._eventType">
            <summary>
            Storage field for EventType property.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Events.SpaceDataEventArgs`1._uid">
            <summary>
            Storage field for Uid property.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Events.SpaceDataEventArgs`1._version">
            <summary>
            Storage field for Version property.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Events.SpaceDataEventArgs`1.#ctor(GigaSpaces.Core.ISpaceProxy,`0,System.String,System.Object,GigaSpaces.Core.Events.DataEventType)">
            <summary>
            Create an instance of the event arguments with the specified values.
            </summary>
            <param name="space">The space proxy.</param>
            <param name="obj">The object which was changed.</param>
            <param name="uid">The unique identifier of the notified entry.</param>
            <param name="template">The template which was used during subscription.</param>
            <param name="eventType">The type of event which has happenned.</param>
        </member>
        <member name="M:GigaSpaces.Core.Events.SpaceDataEventArgs`1.#ctor(GigaSpaces.Core.ISpaceProxy,`0,System.String,System.Object,GigaSpaces.Core.Events.DataEventType,GigaSpaces.Core.Internal.OperationId@)">
            <summary>
            Create an instance of the event arguments with the specified values.
            </summary>
            <param name="space">The space proxy.</param>
            <param name="obj">The object which was changed.</param>
            <param name="uid">The unique identifier of the notified entry.</param>
            <param name="template">The template which was used during subscription.</param>
            <param name="eventType">The type of event which has happenned.</param>
            <param name="operationId">operation id of the notification</param>
        </member>
        <member name="P:GigaSpaces.Core.Events.SpaceDataEventArgs`1.Object">
            <summary>
            Returns the Object which was changed by the event.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Events.SpaceDataEventArgs`1.Uid">
            <summary>
            Returns the unique identifier of the notified entry.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Events.SpaceDataEventArgs`1.Template">
            <summary>
            Returns the template which was used during subscription.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Events.SpaceDataEventArgs`1.EventType">
            <summary>
            Returns the type of event which has occurred.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Providers.Cmd.Events.CmdSpaceDataEventArgs`1.#ctor(GigaSpaces.Core.ISpaceProxy,GigaSpaces.Core.Internal.Pbs.PbsObjectFormatter,System.Byte[],System.Object,GigaSpaces.Core.Events.DataEventType,GigaSpaces.Core.Internal.OperationId@,GigaSpaces.Core.Metadata.QueryResultType)">
            <summary>
            Create an instance of the event arguments with the specified values.
            </summary>
            <param name="space">The space proxy.</param>
            <param name="streamedObject">The java entry which was changed as a stream of bytes.</param>		
            <param name="template">The template which was used during subscription.</param>
            <param name="eventType">The type of event which has happenned.</param>
            <param name="formatter">The formatter used to deserialize the object when needed</param>
            <param name="operationId">operation id of the notification</param>
            <param name="resultType"></param>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Providers.Cmd.Events.CmdSpaceDataEventArgs`1.Object">
            <summary>
            Returns the object which was changed by the event.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Internal.Providers.Cmd.Events.CmdSpaceDataEventArgs`1.Uid">
            <summary>
            Returns the unique identifier of the notified entry.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.JavaExecuter.JavaClassMainExecuter">
            <summary>
            Entry point for java class execution, Internal use only.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.JavaExecuter.JavaClassMainExecuter.ExecuteMain(System.String,System.String[])">
            <summary>
            Executes the main method on the specified java class with the given arguments, Internal use only.
            </summary>
            <param name="javaClassName"></param>
            <param name="args"></param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.JavaExecuter.JavaClassMainExecuter.ExecuteSystemBoot(System.String,System.String[])">
            <summary>
            Executes the main method of the java SystemBoot class with the given arguments, Internal use only.
            </summary>
            <param name="services"></param>
            <param name="args"></param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.JavaExecuter.JavaClassMainExecuter.ExecuteCli(System.String[])">
            <summary>
            Executes the main method of GigaSpaces CLI class with the given arguments, Internal use only.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.JavaExecuter.JavaClassMainExecuter.ExecuteGui(System.String[])">
            <summary>
            Executes the main method of GigaSpaces GUI class with the given arguments, Internal use only.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.JavaExecuter.JavaClassMainExecuter.ExecuteWebUi(System.String[])">
            <summary>
            Executes the main method of GigaSpaces WebUi class with the given arguments, Internal use only.
            </summary>
            <param name="args"></param>
        </member>
        <member name="T:GigaSpaces.Core.Metadata.ITypeDescriptor">
            <summary>
            Encapsulates information about a type in the space.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.ITypeDescriptor.SpaceName">
            <summary>
            Name of type in the space.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.ITypeDescriptor.BaseTypesNames">
            <summary>
            Names of base types.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.ITypeDescriptor.Fields">
            <summary>
            Returns information about the type's fields.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.ITypeDescriptor.Fifo">
            <summary>
            Is type marked for FIFO processing.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.ITypeDescriptor.Replicate">
            <summary>
            Is type marked for replication.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Metadata.ITypeFieldDescriptor">
            <summary>
            Encapsulates information about a type's field in the space.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.ITypeFieldDescriptor.SpaceName">
            <summary>
            Field's name in the space.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.ITypeFieldDescriptor.SpaceTypeName">
            <summary>
            Field's type name in the space.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.ITypeFieldDescriptor.IndexType">
            <summary>
            Field's index type.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Persistency.BatchDataEnumerator">
            <summary>
            Wraps a data enumerator to work in batches
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Persistency.BatchDataEnumerator.GetNextBatch(System.Int32)">
            <summary>
            Returns a batch of objects taken from the enumerator of batch size
            </summary>
            <param name="batchSize">Batch size of objects to return</param>
            <returns>batch of objects taken from the enumerator of the minimum between batch size and amount of objects left in enumerator</returns>
        </member>
        <member name="T:GigaSpaces.Core.Persistency.BulkOperation">
            <summary>
            Bulk operation to execute
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Persistency.BulkOperation.Remove">
            <summary>
            Indicates a remove operation in the data source.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Persistency.BulkOperation.Update">
            <summary>
            Indicates a update operation in the data source.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Persistency.BulkOperation.Write">
            <summary>
            Indicates a write operation in the data source.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Persistency.BulkItem">
            <summary>
            BulkItem defines a single item in a bulk.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Persistency.BulkItem.#ctor(GigaSpaces.Core.Persistency.BulkOperation,System.Object)">
            <summary>
            Constructor
            </summary>
            <param name="operation">Operation to execute</param>
            <param name="item">Data item</param>
        </member>
        <member name="P:GigaSpaces.Core.Persistency.BulkItem.Operation">
            <summary>
            Gets the operation to execute
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Persistency.BulkItem.Item">
            <summary>
            Gets the data item
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Persistency.Usage">
            <summary>
            External Data Source usage
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Persistency.Usage.ReadWrite">
            <summary>
            External Data Source will be used as read through and write through.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Persistency.Usage.ReadOnly">
            <summary>
            External Data Source will be used as read through.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Persistency.ExternalDataSourceConfig">
            <summary>
            Defines configurations for an ExternalDataSource.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Persistency.ExternalDataSourceConfig.ExportExternalDataSourceUsage(GigaSpaces.Core.Persistency.Usage)">
            <summary>
            Exports an external data source usage to java string
            </summary>
            <param name="mode">Mode to export</param>
            <returns></returns>
        </member>
        <member name="P:GigaSpaces.Core.Persistency.ExternalDataSourceConfig.Instance">
            <summary>
            Gets or sets the instance of the managed data source.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Persistency.ExternalDataSourceConfig.CustomProperties">
            <summary>
            Gets or sets the custom properties passed to the external data source instance upon Init.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Persistency.ExternalDataSourceConfig.Usage">
            <summary>
            Gets or sets the external data source usage
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Persistency.ExternalDataSourceConfig.SharedIteratorMode">
            <summary>
             Gets or sets whether to use shared iterator mode.
             When this mode is enabled, concurrent read access to the data source for the same query will be
             optimized when possible, and the iterator data will be shared among the accessors.
             
             <note>When null the default will be used</note>
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Persistency.ExternalDataSourceConfig.SharedIteratorTimeToLive">
            <summary>
            Gets or sets the time to live in miliseconds of a shared iterator when <see cref="P:GigaSpaces.Core.Persistency.ExternalDataSourceConfig.SharedIteratorMode"/> is enabled.
            Once this time interval elapsed from a shared iterator creation, that iterator will no longer be shared by new queries.
            
            <note>When null the default will be used</note>
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Persistency.ExternalDataSourceConfig.EntryType">
            <summary>
            Gets or sets the entry type the data source should work with
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Persistency.ExternalDataSourceContainer.ReadObject(GigaSpaces.Core.Internal.Pbs.PbsInputStream)">
            <summary>
            Reads object from the stream
            </summary>
            <param name="input">input stream</param>
            <returns>Object</returns>
        </member>
        <member name="M:GigaSpaces.Core.Persistency.ExternalDataSourceContainer.ReadQuery(GigaSpaces.Core.Internal.Pbs.PbsInputStream)">
            <summary>
            Reads a persistency query from the stream
            </summary>
            <param name="input">input stream</param>
            <returns>Query</returns>
        </member>
        <member name="M:GigaSpaces.Core.Persistency.ExternalDataSourceContainer.WriteObject(GigaSpaces.Core.Internal.Pbs.PbsOutputStream,System.Object)">
            <summary>
            Writes a object to the stream
            </summary>
            <param name="output">Output stream</param>
            <param name="obj">Object to write</param>
        </member>
        <member name="M:GigaSpaces.Core.Persistency.ExternalDataSourceContainer.WriteObjectList(GigaSpaces.Core.Internal.Pbs.PbsOutputStream,System.Collections.Generic.List{System.Object})">
            <summary>
            Writes a object array to the stream
            </summary>
            <param name="output">Output stream</param>
            <param name="objects">Objects to write</param>
        </member>
        <member name="M:GigaSpaces.Core.Persistency.ExternalDataSourceContainer.ResetCache">
            <summary>
            Resets cache snapshot state
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Persistency.ExternalDataSourceContainer.TestUseOnlySetCacheSnapshoted(System.Type)">
            <summary>
            This method is used only for testing, it sets the cache snapshot state of a given type to rue
            </summary>
            <param name="type">Type to set as snapshoted</param>
        </member>
        <member name="T:GigaSpaces.Core.Persistency.IDataEnumerator">
            <summary>
            A disposable enumerator
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Persistency.IManagedDataSource">
            <summary>
            IManagedDataSource is an interface for space external data source.
            This interface provider the basic data source functionality supported by the space.
            It should be implemented when initialization and shutdown operations are needed by the data base.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Persistency.IManagedDataSource.Init(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Initialize and configure the data source using given properties.
            Called when space is started.
            </summary>
            <param name="properties">Propeties to initialize by.</param>
        </member>
        <member name="M:GigaSpaces.Core.Persistency.IManagedDataSource.InitialLoad">
            <summary>
            Creates and returns an enumerator over all the entries that should be loaded into space.
            </summary>
            <returns>Enumerator over all the entries that should be loaded into space.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Persistency.IManagedDataSource.Shutdown">
            <summary>
            Close the data source and clean any used resources.
            Called before space shutdown.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Persistency.ISqlDataSource">
            <summary>
            ISqlDataSource is an interface for space external data source.
            This interface provides all the data source functionality supported by space.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Persistency.ISqlDataSource.GetEnumerator(GigaSpaces.Core.Persistency.Query)">
            <summary>
            Create an enumerator over all objects that match the given <see cref="T:GigaSpaces.Core.Persistency.Query"/>.
            </summary>
            <param name="query">The Query used for matching.</param>
            <returns>Enumerator over all objects that match the given <see cref="T:GigaSpaces.Core.Persistency.Query"/>.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Persistency.ISqlDataSource.ExecuteBulk(System.Collections.Generic.IList{GigaSpaces.Core.Persistency.BulkItem})">
             <summary>
             Execute given bulk of operations.
             Each <see cref="T:GigaSpaces.Core.Persistency.BulkItem"/> contains one of the following operation -
            
             WRITE - given object should be inserted to the data store,
             UPDATE - given object should be updated in the data store,
             REMOVE - given object should be deleted from the data store
            
             If the implementation uses transactions,
             all the bulk operations must be executed in one transaction.
             </summary>
             <param name="bulk">Collection of bulk items to execute</param>
        </member>
        <member name="T:GigaSpaces.Core.Events.DataEventType">
            <summary>
            Lists possible data event types.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Events.DataEventType.None">
            <summary>
            No events.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Events.DataEventType.Write">
            <summary>
            Occurs when a new entry is written to the space.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Events.DataEventType.Update">
            <summary>
            Occurs when an entry in the space has been updated.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Events.DataEventType.Take">
            <summary>
            Occurs when an entry has been taken from the space.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Events.DataEventType.LeaseExpiration">
            <summary>
            Occurs when an entry's lease has expired.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Events.DataEventType.All">
            <summary>
            Occurs when any entry-related event occurs.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Events.DataEventType.Unmatched">
            <summary>
            Occurs when an entry in the space that was suitable for a provided notify template
            has been updated and as a result is no longer suitable.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Events.DataEventType.MatchedUpdate">
            <summary>
            Occurs when an entry in the space that wasn't suitable for a provided notify template
            has been updated and as a result became suitable.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Events.DataEventType.RematchedUpdate">
            <summary>
            Occurs when an entry in the space that was suitable for a provided notify template
            has been updated and stayed suitable.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Events.ComType">
            <summary>
            Lists possible event communication protocols.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Events.ComType.Unicast">
            <summary>
            Unicast propagation uses TCP unicast communication, which is usually best for a small amount of registered clients. This is the default communication type.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Events.ComType.Multiplex">
            <summary>
            The same as Unicast in terms of communication protocol, but uses a single client-side multiplexer, which handles all of the dispatching to the different notification listeners.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Events.LeaseRenewalEventArgs">
            <summary>
            Encapsulates arguments related to lease renewal.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Events.LeaseRenewalEventArgs.#ctor(System.Exception,System.Int64,GigaSpaces.Core.ILease)">
            <summary>
            Default constructor.
            </summary>
            <param name="exception">The exception (if any) that caused the event to be sent</param>
            <param name="expiration">Expiration time of the lease to which event pertains</param>
            <param name="lease">Lease to which the event pertains</param>
        </member>
        <member name="P:GigaSpaces.Core.Events.LeaseRenewalEventArgs.Exception">
            <summary>
            Returns the exception (if any) that caused the event to be sent.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Events.LeaseRenewalEventArgs.Expiration">
            <summary>
            Returns the desired expiration time of the lease to which event pertains.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Events.LeaseRenewalEventArgs.Lease">
            <summary>
            Returns a reference to the lease to which the event pertains.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Exceptions.CannotAbortException">
            <summary>
            Thrown when a transaction cannot abort because it has already already to commit.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.CannotAbortException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.CannotAbortException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.CannotAbortException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.CannotAbortException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="T:GigaSpaces.Core.Exceptions.CannotCommitException">
            <summary>
            Thrown when a transaction cannot commit because it has already decided to abort.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.CannotCommitException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.CannotCommitException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.CannotCommitException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.CannotCommitException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="T:GigaSpaces.Core.Exceptions.DetailedUnusableEntryException">
            <summary>
            Thrown when class version compatibility error, the space server contains an older version of class.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Exceptions.UnusableEntryException">
            <summary>
            Thrown when one tries to get an Entry from a service, but the entry is unusable (due to serialization or other errors). 
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.UnusableEntryException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.UnusableEntryException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.UnusableEntryException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.UnusableEntryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.UnusableEntryException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.UnusableEntryException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.UnusableEntryException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.UnusableEntryException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.DetailedUnusableEntryException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.DetailedUnusableEntryException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.DetailedUnusableEntryException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.DetailedUnusableEntryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.DetailedUnusableEntryException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.DetailedUnusableEntryException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.DetailedUnusableEntryException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.DetailedUnusableEntryException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="T:GigaSpaces.Core.Exceptions.EntryAlreadyInSpaceException">
            <summary>
            Thrown when the entry (or another with same UID) is already in space.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.EntryAlreadyInSpaceException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.EntryAlreadyInSpaceException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.EntryAlreadyInSpaceException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.EntryAlreadyInSpaceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.EntryAlreadyInSpaceException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.EntryAlreadyInSpaceException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.EntryAlreadyInSpaceException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.EntryAlreadyInSpaceException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="T:GigaSpaces.Core.Exceptions.EntryNotInSpaceException">
            <summary>
            Thrown when the entry specified by the UID is not in the space - it was not found or has been deleted.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.EntryNotInSpaceException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.EntryNotInSpaceException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.EntryNotInSpaceException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.EntryNotInSpaceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.EntryNotInSpaceException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.EntryNotInSpaceException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.EntryNotInSpaceException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.EntryNotInSpaceException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="T:GigaSpaces.Core.Exceptions.EntryVersionConflictException">
            <summary>
            This exception is thrown when update/write/take operation is rejected as a result of optimistic locking version conflict.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.EntryVersionConflictException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.EntryVersionConflictException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.EntryVersionConflictException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.EntryVersionConflictException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="T:GigaSpaces.Core.Exceptions.FinderException">
            <summary>
            Thrown when an attempt to find space or container fails.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.FinderException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.FinderException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.FinderException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.FinderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.FinderException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.FinderException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.FinderException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.FinderException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="T:GigaSpaces.Core.Exceptions.InvalidEventSessionConfigException">
            <summary>
            Thrown when EventSessionConfig is identified as invalid.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.InvalidEventSessionConfigException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.InvalidEventSessionConfigException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.InvalidEventSessionConfigException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.InvalidEventSessionConfigException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.InvalidEventSessionConfigException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="T:GigaSpaces.Core.Exceptions.JavaException">
            <summary>
            Added to Space exception, contains Java Exception data.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.JavaException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.JavaException.#ctor(System.String,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with Java Exception data.
            </summary>
            <param name="message">Exception's message</param>
            <param name="stackTrace">Exception's stack trace</param>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.JavaException.#ctor(System.String,System.String,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with Java Exception data.
            </summary>
            <param name="message">Exception's message</param>
            <param name="stackTrace">Exception's stack trace</param>
            <param name="innerException">Inner exception</param>
            <param name="javaClassName">The java class name of the exception</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.JavaException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.JavaException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Implements specific serialization for the added members of JavaException. 
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.JavaException.ToString">
            <summary>
            ToString() implementation.  
            </summary>
            <returns>returns string with this.Source, this.Message, this.StackTrace and InnerException.ToString()</returns>
        </member>
        <member name="P:GigaSpaces.Core.Exceptions.JavaException.StackTrace">
             <summary>
              Gets a string representation of the frames on the call stack at the time
                 the current exception was thrown.
            
             Returns:
                 A string that describes the contents of the call stack, with the most recent
                 method call appearing first.
             </summary>
        </member>
        <member name="P:GigaSpaces.Core.Exceptions.JavaException.JavaClassName">
            <summary>
            Gets the Java class name of the original Java Exception.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Exceptions.JavaException.JavaMessage">
            <summary>
            Gets the Java message of the original Java Exception
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Exceptions.LeaseDeniedException">
            <summary>
            Thrown when a lease request or renewal is denied.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Exceptions.LeaseException">
            <summary>
            Base class for specific lease exceptions.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.LeaseException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.LeaseException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.LeaseException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.LeaseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.LeaseException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.LeaseException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.LeaseException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.LeaseException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.LeaseDeniedException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.LeaseDeniedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.LeaseDeniedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.LeaseDeniedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.LeaseDeniedException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.LeaseDeniedException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.LeaseDeniedException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.LeaseDeniedException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="T:GigaSpaces.Core.Exceptions.NoSuchElementException">
            <summary>
            Thrown to indicate that there are no more elements in the enumeration.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.NoSuchElementException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.NoSuchElementException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.NoSuchElementException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.NoSuchElementException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.NoSuchElementException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.NoSuchElementException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.NoSuchElementException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.NoSuchElementException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="T:GigaSpaces.Core.Exceptions.OperationTimeoutException">
            <summary>
            Thrown when a space operation timeouts.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.OperationTimeoutException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.OperationTimeoutException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.OperationTimeoutException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.OperationTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.OperationTimeoutException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.OperationTimeoutException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.OperationTimeoutException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.OperationTimeoutException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="T:GigaSpaces.Core.Exceptions.SpaceMetadataMissingException">
            <summary>
            Thrown when an operation is performed on the space without metadata, and the metadata is not in the cache.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.SpaceMetadataMissingException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.SpaceMetadataMissingException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.SpaceMetadataMissingException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.SpaceMetadataMissingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.SpaceMetadataMissingException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="T:GigaSpaces.Core.Exceptions.SpaceMetadataValidationException">
            <summary>
            Thrown when a type's metadata validation fails.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.SpaceMetadataValidationException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.SpaceMetadataValidationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.SpaceMetadataValidationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.SpaceMetadataValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.SpaceMetadataValidationException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.SpaceMetadataValidationException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.SpaceMetadataValidationException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="T:GigaSpaces.Core.Exceptions.SpaceSecurityException">
            <summary>
             Thrown when a space operation is performed without permissions on a secured space.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.SpaceSecurityException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.SpaceSecurityException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.SpaceSecurityException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.SpaceSecurityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.SpaceSecurityException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.SpaceSecurityException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.SpaceSecurityException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.SpaceSecurityException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="T:GigaSpaces.Core.Exceptions.TimeoutExpiredException">
            <summary>
            Thrown when a transaction timeout has expired.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.TimeoutExpiredException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.TimeoutExpiredException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.TimeoutExpiredException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.TimeoutExpiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="T:GigaSpaces.Core.Exceptions.UnknownLeaseException">
            <summary>
            Thrown when a lease is not known to the grantor of the lease. This can occur when a lease expires or has been cancelled.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.UnknownLeaseException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.UnknownLeaseException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.UnknownLeaseException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.UnknownLeaseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.UnknownLeaseException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.UnknownLeaseException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.UnknownLeaseException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.UnknownLeaseException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="T:GigaSpaces.Core.Exceptions.UnknownTransactionException">
            <summary>
            Thrown when a transaction is not recognized as a valid or known transaction. 
            Common reasons for this include: the transaction has previously been explicitly aborted; 
            the transaction has previously aborted because the transaction manager crashed; 
            the transaction has previously been explicitly committed. 
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.UnknownTransactionException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.UnknownTransactionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.UnknownTransactionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:GigaSpaces.Core.Exceptions.UnknownTransactionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="T:GigaSpaces.Core.Events.EventSessionConfig">
            <summary>
            Encapsulates the variuos settings which can be used to configure an event session.
            <code>
            //Define an event session with auto renew.
            EventSessionConfig sessionConfig = new EventSessionConfig();
            sessionConfig.AutoRenew = true;
            sessionConfig.AutoRenewTotalDuration = 60 * 60 * 1000;
            sessionConfig.AutoRenewLeaseDuration= 10000;
            sessionConfig.AutoRenewRTT = 1000;
            sessionConfig.AutoRenewFailed += delegate {//_my failed notification handler code_//};
            //Creates a data event session with the created config
            IDataEventSession eventSession = mySpaceProxy.CreateDataEventSession(sessionConfig);
            </code>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Events.EventSessionConfig.AutoRenewRTTDefaultValue">
            <summary>
            Default value for AutoRenewRTT property.
            <seealso cref="P:GigaSpaces.Core.Events.EventSessionConfig.AutoRenewRTT"/>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Events.EventSessionConfig.AutoRenewLeaseDurationDefaultValue">
            <summary>
            Default value for AutoRenewLeaseDuration property.
            <seealso cref="P:GigaSpaces.Core.Events.EventSessionConfig.AutoRenewLeaseDuration"/>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Events.EventSessionConfig.AutoRenewTotalDurationDefaultValue">
            <summary>
            Default value for AutoRenewTotalDuration property.
            <seealso cref="P:GigaSpaces.Core.Events.EventSessionConfig.AutoRenewTotalDuration"/>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Events.EventSessionConfig.FifoDefaultValue">
            <summary>
            Default value for Fifo property.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Events.EventSessionConfig.ComTypeDefaultValue">
            <summary>
            Default value for ComType property.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Events.EventSessionConfig.#ctor">
            <summary>
            Create an empty default configuration instance.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Events.EventSessionConfig.#ctor(GigaSpaces.Core.Events.EventSessionConfig)">
            <summary>
            Creates a copy of the specified configuration.
            </summary>
            <param name="copy">Configuration to copy.</param>
        </member>
        <member name="M:GigaSpaces.Core.Events.EventSessionConfig.Validate">
            <summary>
            Validates the configuration to ensure that dependent properties are configured correctly.
            </summary>
        </member>
        <member name="E:GigaSpaces.Core.Events.EventSessionConfig.AutoRenewFailed">
            <summary>
            Raised when an event session fails to renew a lease.
            </summary>
            <seealso cref="P:GigaSpaces.Core.Events.EventSessionConfig.AutoRenew"/>
            <seealso cref="P:GigaSpaces.Core.Events.EventSessionConfig.AutoRenewLeaseDuration"/>
            <seealso cref="P:GigaSpaces.Core.Events.EventSessionConfig.AutoRenewTotalDuration"/>
            <seealso cref="P:GigaSpaces.Core.Events.EventSessionConfig.AutoRenewRTT"/>
        </member>
        <member name="P:GigaSpaces.Core.Events.EventSessionConfig.ComType">
            <summary>
            Gets or sets the communication protocol.		
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Events.EventSessionConfig.Fifo">
            <summary>
            Gets or sets whether events should arrive in the order they are triggered.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Events.EventSessionConfig.ReplicateNotifyTemplate">
            <summary>
            Gets or sets whether to replicate the registration to other spaces in the cluster the belongs to the same replication group.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Events.EventSessionConfig.TriggerNotifyTemplate">
            <summary>
            Gets or sets whether to send notifications from all spaces in the cluster that belongs the same replication group that were triggered by the same template.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Events.EventSessionConfig.Batch">
            <summary>
            Gets or sets whether Batch Notifications are enabled.
            <note>If defined, <see cref="P:GigaSpaces.Core.Events.EventSessionConfig.BatchSize"/> and <see cref="P:GigaSpaces.Core.Events.EventSessionConfig.BatchTime"/> must be defined as well.</note>
            </summary>
            <seealso cref="P:GigaSpaces.Core.Events.EventSessionConfig.BatchSize"/>
            <seealso cref="P:GigaSpaces.Core.Events.EventSessionConfig.BatchTime"/>
        </member>
        <member name="P:GigaSpaces.Core.Events.EventSessionConfig.BatchSize">
            <summary>
            Gets or sets the size of the batch used when sending notifications to the client.
            </summary>
            <seealso cref="P:GigaSpaces.Core.Events.EventSessionConfig.Batch"/>
            <seealso cref="P:GigaSpaces.Core.Events.EventSessionConfig.BatchTime"/>
        </member>
        <member name="P:GigaSpaces.Core.Events.EventSessionConfig.BatchTime">
            <summary>
            Gets or sets the maximum elapsed time, in milliseconds, between two batch notifications.
            </summary>
            <seealso cref="P:GigaSpaces.Core.Events.EventSessionConfig.Batch"/>
            <seealso cref="P:GigaSpaces.Core.Events.EventSessionConfig.BatchSize"/>
        </member>
        <member name="P:GigaSpaces.Core.Events.EventSessionConfig.BatchPendingThreshold">
            <summary>
            Gets or sets the number of notifications accumulated at the server before notifications are sent to the client.
            If not set, <seealso cref="P:GigaSpaces.Core.Events.EventSessionConfig.BatchSize"/> is used.
            </summary>
            <seealso cref="P:GigaSpaces.Core.Events.EventSessionConfig.Batch"/>
            <seealso cref="P:GigaSpaces.Core.Events.EventSessionConfig.BatchSize"/>
        </member>
        <member name="P:GigaSpaces.Core.Events.EventSessionConfig.AutoRenew">
            <summary>
            Gets or sets whether the event session automatic lease renewal is enabled.
            <note>If defined, <see cref="E:GigaSpaces.Core.Events.EventSessionConfig.AutoRenewFailed"/> must have at least one subscriber.</note>
            </summary>
            <seealso cref="P:GigaSpaces.Core.Events.EventSessionConfig.AutoRenewLeaseDuration"/>
            <seealso cref="P:GigaSpaces.Core.Events.EventSessionConfig.AutoRenewTotalDuration"/>
            <seealso cref="P:GigaSpaces.Core.Events.EventSessionConfig.AutoRenewRTT"/>
            <seealso cref="E:GigaSpaces.Core.Events.EventSessionConfig.AutoRenewFailed"/>
        </member>
        <member name="P:GigaSpaces.Core.Events.EventSessionConfig.AutoRenewLeaseDuration">
            <summary>
            Gets or sets the lease period, in milliseconds, used to auto renew the Event Session.
            This period defines the max time passes between session failure, and the time the failure notifications is received.
            The parameter value must be bigger than <see cref="P:GigaSpaces.Core.Events.EventSessionConfig.AutoRenewRTT"/>.
            </summary>
            <seealso cref="P:GigaSpaces.Core.Events.EventSessionConfig.AutoRenew"/>
            <seealso cref="P:GigaSpaces.Core.Events.EventSessionConfig.AutoRenewTotalDuration"/>
            <seealso cref="P:GigaSpaces.Core.Events.EventSessionConfig.AutoRenewRTT"/>
            <seealso cref="E:GigaSpaces.Core.Events.EventSessionConfig.AutoRenewFailed"/>
        </member>
        <member name="P:GigaSpaces.Core.Events.EventSessionConfig.AutoRenewTotalDuration">
            <summary>
            Gets or sets the total period of time, in milliseconds, at which Event Session lease will be auto renewed.
            Each renewal period will be of <see cref="P:GigaSpaces.Core.Events.EventSessionConfig.AutoRenewLeaseDuration"/>.
            </summary>
            <seealso cref="P:GigaSpaces.Core.Events.EventSessionConfig.AutoRenew"/>
            <seealso cref="P:GigaSpaces.Core.Events.EventSessionConfig.AutoRenewLeaseDuration"/>
            <seealso cref="P:GigaSpaces.Core.Events.EventSessionConfig.AutoRenewRTT"/>
            <seealso cref="E:GigaSpaces.Core.Events.EventSessionConfig.AutoRenewFailed"/>
        </member>
        <member name="P:GigaSpaces.Core.Events.EventSessionConfig.AutoRenewRTT">
            <summary>
            Gets or sets the time that takes to reach the server and return (Round trip time) in milliseconds.
            This value will be the time the renew request will be sent to the server prior to the end of the current lease.
            </summary>
            <seealso cref="P:GigaSpaces.Core.Events.EventSessionConfig.AutoRenew"/>
            <seealso cref="P:GigaSpaces.Core.Events.EventSessionConfig.AutoRenewLeaseDuration"/>
            <seealso cref="P:GigaSpaces.Core.Events.EventSessionConfig.AutoRenewTotalDuration"/>
            <seealso cref="E:GigaSpaces.Core.Events.EventSessionConfig.AutoRenewFailed"/>
        </member>
        <member name="P:GigaSpaces.Core.Events.EventSessionConfig.GuaranteedNotifications">
            <summary>
             Gets or sets whether to generate notifications that will not be lost during failover.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Events.EventSessionConfig.DurableNotifications">
            <summary>
             Gets or sets whether to generate notifications that will not be lost during failover and disconnection.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Pbs.Executers.PbsExecuter">
            <summary>
            Used as the end point the JNetBridge is calling to execute commands
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Executers.PbsExecuter.ExecuteCommand(GigaSpaces.Core.Internal.Pbs.PbsInputStream)">
            <summary>
            Executes a command represnted by a byte array
            </summary>
            <param name="input">Command in buffer</param>
            <returns>Response to command execution</returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Executers.PbsExecuter.CreateImpl``1(System.String,System.String,System.String[])">
            <summary>
            Dynamically creates an implementation
            </summary>
            <typeparam name="T">Type of implementation</typeparam>
            <param name="assemblyFullPath">Assembly containing the implementation full path</param>
            <param name="implName">Implementation type name</param>
            <param name="dependencies">Dependencies needed to load</param>
            <returns>Created implementation</returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Executers.PbsExecuter.LoadAssemblies(System.String[])">
            <summary>
            Load given assemblies from a load command
            </summary>
            <param name="assemblies">Load command</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Executers.PbsExecuter.LoadAssembly(System.String)">
            <summary>
            Attempts to load a given assembly
            </summary>
            <param name="assemblyPath">Assembly path</param>
            <returns>Loaded assembly</returns>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Pbs.Executers.Persistency.PbsPersistencyConstruct">
            <summary>
            Constructs the IExternalDataSource implementation
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Executers.Persistency.PbsPersistencyConstruct.CreateExternalDataSourceImplFromStream(GigaSpaces.Core.Internal.Pbs.PbsInputStream)">
            <summary>
            Creates an external data source from the data passed on the stream
            </summary>
            <param name="input">Input stream</param>
            <returns>Created external data source instance</returns>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Pbs.Executers.Persistency.PbsPersistencyExecuteBulk">
            <summary>
            Executes a bulk command
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Pbs.Executers.Persistency.PbsPersistencyInit">
            <summary>
            Executes init command with given properties
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Pbs.Executers.Persistency.PbsPersistencyInitialLoad">
            <summary>
            Executes initial load command
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Pbs.Executers.Persistency.PbsPersistencyShutdown">
            <summary>
            Executes shutdown command
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.PbsExceptionFormatter.WriteException(GigaSpaces.Core.Internal.Pbs.PbsOutputStream,System.Exception,GigaSpaces.Core.Internal.Pbs.PbsErrorCode)">
            <summary>
            Writes an exception to the stream
            </summary>
            <param name="stream">Target stream.</param>
            <param name="ex">Exception to write.</param>
            <param name="errorCode">exception's error code</param>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.PbsExceptionFormatter.WriteUnspecifiedException(GigaSpaces.Core.Internal.Pbs.PbsOutputStream,System.Exception)">
            <summary>
            Writes an unspecified exception to the stream, dump all data
            </summary>
            <param name="stream">Target stream.</param>
            <param name="ex">Exception to write.</param>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Utils.LogEvent">
            <summary>
            Encapsulates properties of a log event.
            Note: This class is intended for internal logging purposes.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvent.EventID">
            <summary>
            Returns the log event ID.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvent.EventType">
            <summary>
            Returns the log event type.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvent.Message">
            <summary>
            Returns the log event message or message template.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Utils.LogEvent.#ctor(System.Diagnostics.TraceEventType,System.Int32,System.String)">
            <summary>
            Creates a new log event instance.
            </summary>
            <param name="eventID">The event ID.</param>
            <param name="eventType">The event type.</param>
            <param name="message">The event message or message template.</param>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Utils.LogEvents">
            <summary>
            Encapsulates a list of all known log events.
            This class is intended for internal logging purposes.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.CoreInitialized">
            <summary>
            Logged when the core component is initialized.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.UnexpectedException">
            <summary>
            Logged when an unexpected exception is caught.
            <param>{0} - Exception's message</param>
            <param>{1} - Exception's stacktrace</param>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.DataEventThreadUnhandledException">
            <summary>
            Logged when a data event sink intercepts an exception.
            <param>{0} - Exception's message</param>
            <param>{1} - Exception's stacktrace</param>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.LeaseRenewalThreadUnhandledException">
            <summary>
            Logged when a lease renewal listener intercepts an exception.
            <param>{0} - Exception's message</param>
            <param>{1} - Exception's stacktrace</param>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.MissingMetadataIntercepted">
            <summary>
            Logged when an insufficent type info is thrown from the java proxy and .Net intercepts and attempts recovery.
            </summary>
            <param>{0} - object type</param>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.UnrecognizedSpaceTypeCode">
            <summary>
             Logged when Unrecognized Java Type Code
            <param>{0} - the unexpected SpaceTypeCode</param>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.FinderExceptionException">
            <summary>
             Logged when a com.j_spaces.core.client.FinderException is caught.
            <param>{0} - the exception message</param>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.MemoryShortageException">
            <summary>
             Logged when com.j_spaces.core.MemoryShortateException is caught
            <param>{0} - the exception message</param>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.JvmOutOfMemoryException">
            <summary>
             Logged when java.lang.OutOfMemoryError is caught
            <param>{0} - the exception message</param>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.RedoLogCapacityExceededException">
            <summary>
             Logged when com.gigaspaces.cluster.replication.RedoLogCapacityExceededException is caught
            <param>{0} - the exception message</param>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.IllegalSpaceConfigException">
            <summary>
             Logged when IllegalSpaceConfigException is caught
            <param>{0} - the exception message</param>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.RuntimeDirInvalid">
            <summary>
            Logged when the runtime dir does not contain the product jars.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.RuntimeDirNotDefined">
            <summary>
            Logged when the runtime dir is not defined.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.SourceNotConfigured">
            <summary>
            Logged when the GigaSpaces source is not configured.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.JvmDllNotFound">
            <summary>
            Logged when the jvm dll file is not found
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.JvmDllPathMustBeSupplied">
            <summary>
            Logged when the jvm mode is custom and no path is supplied
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.JvmDllContradictingConfiguration">
            <summary>
            Logged when the jvm mode is not custom and a path is supplied
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.JvmDirInvalid">
            <summary>
            Logged when the java dir does not contain the jvm.dll.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.JvmDirNotDefined">
            <summary>
            Logged when the java home dir is not defined.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.JvmInitialize">
            <summary>
            Logged when the Jvm is about to be initalized
            <param>{0} - Jvm initialization options</param>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.SettingsNotDefined">
            <summary>
            Logged when there's an error locating the setting file or a value inside the settings
            <param>{0} - Message</param>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.EventSessionConfigAutoRenewFailedValidation">
            <summary>
            Logged when AutoRenewFailed is NULL
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.EventSessionConfigBatchSizeValidation">
            <summary>
             Logged when BatchSize param validation failed.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.EventSessionConfigBatchTimeValidation">
            <summary>
             Logged when BatchTime validation failed.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.EventSessionConfigBatchPendingThresholdValidation">
            <summary>
             Logged when BatchPendingThreshold validation failed.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.EventSessionConfigAutoRenewRTTValidation">
            <summary>
             Logged when BatchTime validation failed.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.TransactionException">
            <summary>
             Logged when an net.jini.core.transaction.TransactionException is caught.
            <param>{0} - the exception message</param>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.UnusableEntryException">
            <summary>
             Logged when an net.jini.core.entry.UnusableEntryException is caught. 
            <param>{0} - the exception message</param>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.DetailedUnusableEntryException">
            <summary>
             Logged when an com.j_spaces.core.DetailedUnusableEntryException is caught.
            <param>{0} - the exception message</param>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.EntryNotInSpaceException">
            <summary>
             Logged when an com.j_spaces.core.client.EntryNotInSpaceException is caught. 
            <param>{0} - the exception message</param>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.EntryAlreadyInSpaceException">
            <summary>
             Logged when an com.j_spaces.core.client.EntryAlreadyInSpaceException is caught. 
            <param>{0} - the exception message</param>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.LeaseDeniedException">
            <summary>
             Logged when an net.jini.core.lease.LeaseDeniedException is caught. 
            <param>{0} - the exception message</param>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.UnknownLeaseException">
            <summary>
             Logged when an net.jini.core.lease.UnknownLeaseException is caught. 
            <param>{0} - the exception message</param>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.LeaseException">
            <summary>
             Logged when an net.jini.core.lease.LeaseException is caught. 
            <param>{0} - the exception message</param>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.OperationTimeoutException">
            <summary>
             Logged when an com.j_spaces.core.client.OperationTimeoutException is caught. 
            <param>{0} - the exception message</param>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.NoSuchElementException">
            <summary>
             Logged when an  java.util.NoSuchElementException is caught. 
            <param>{0} - the exception message</param>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.SqlQueryException">
            <summary>
             Logged when SqlQueryException is caught
            <param>{0} - the exception message</param>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.DelegateExecutionException">
            <summary>
            Logged when an executing a delegate error is caught.
            <param>{0} - the exception message</param>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.DynamicLoadingAssemblyByFullNameException">
            <summary>
            Logged when loading a dynamic assembly has an exception
            <param>{0} - Assembly name attempted to load</param>
            <param>{1} - Assembly full name that was actually loaded</param>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.UsingAssemblyResolverMechanism">
            <summary>
            Logged when loading an assembly was failed and has to be resolved by the assembly resolver mechanism
            <param>{0} - Assembly name attempted to load</param>        
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.IExternalDataSourceEnumeratorDisposed">
            <summary>
            Logged when an ISqlDataSource enumerator is disposed
            <param>{0} - Enumerator key Id</param>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.DispatcherObjectProxyDisposeException">
            <summary>
            Logged when an exception happens while disposing a dispatcher object proxy
            <param>{0} - Bundle code</param>
            <param>{1} - Handle id</param>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.JavaToNetException">
            <summary>
            Logged when com.gigaspaces.serialization.pbs.commands.JavaToNetException is caught.
            <param>{0} - the exception message</param>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.DispatcherObjectProxiesFinalizerUnloadException">
            <summary>
            Logged when the Dispatcher Object Proxies Finalizer thread is being stopped during AppDomain unload but it does not
            finish gracefully its job within the specified timeout.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Utils.LogEvents.#ctor">
            <summary>
            Default empty constructor.
            Protected constructor is explicitly defined to prevent creating instances of this class, but allow inheritance.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.MetadataLogEvents.TypeConstructorMissingValidation">
            <summary>
             Logged when no constractor for the object. 
            <param>{0} - the type name </param>        
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.MetadataLogEvents.TreeValidationError">
            <summary>
             Logged on MetaData Tree validation failure.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.MetadataLogEvents.ConvertNullValueValidationException">
            <summary>
             Logged on convert NullValue failure.  
            <param>{0} - type to convert from</param>
            <param>{1} - type to convert to</param>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.MetadataLogEvents.FieldDefinedMoreThenOnceValidationException">
            <summary>
             Logged when field metadata is defined more then once in the class tree. 
            <param>{0} - First field/property name</param>
            <param>{1} - Second field/property name</param> 
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.MetadataLogEvents.FieldConflictingAttributesValidationException">
            <summary>
             Logged when field attributes validation failed.
            <param>{0} - the field name</param>      
            <param>{1} - the confliction details</param>      
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.MetadataLogEvents.VersionFieldTypeValidationException">
            <summary>
             Logged when version field type is NOT int.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.MetadataLogEvents.ObjectDeserializationFailedException">
            <summary>
             Logged when object deserialization failed.
            <param>{0} - type to convert from</param>
            <param>{1} - type to convert to</param>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.MetadataLogEvents.InsufficientFieldTypeInfoException">
            <summary>
             Logged when Insufficient FieldType Information exception occured.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.MetadataLogEvents.UnexpectedBehaviorInInheritance">
            <summary>
            Logged when meta data unexpected behavior occured.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.MetadataLogEvents.TypeAddedToCache">
            <summary>
             Logged when a type is added to the type info cache.
            <param>{0} - the type information. </param>    
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.MetadataLogEvents.DtdValidationException">
            <summary>
            Logged when gs.xml get DTD validation exception
            <param>{0} - Exception's message</param>
            <param>{1} - Exception's stacktrace</param>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.MetadataLogEvents.DtdWasNotFoundException">
            <summary>
            Logged when DTD was not found.
            <param>{0} - Exception's message</param>
            <param>{1} - Exception's stacktrace</param>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.MetadataLogEvents.SpaceTypeInfoConstructorStarted">
            <summary>
            Logged when entering ConcreteSpaceTypeInfo ctor.
            <param>{0} - Type's full name.</param>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.MetadataLogEvents.SpaceTypeInfoConstructorFinished">
            <summary>
            Logged when leaving ConcreteSpaceTypeInfo ctor.
            <param>{0} - Type's full name.</param>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.MetadataLogEvents.SpaceFieldInfoConstructorStarted">
            <summary>
            Logged when entering ConcreteSpacePropertyInfo ctor.
            <param>{0} - Type's full name.</param>
            <param>{1} - Property's name.</param>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.MetadataLogEvents.SpaceFieldInfoConstructorFinished">
            <summary>
            Logged when leaving ConcreteSpacePropertyInfo ctor.
            <param>{0} - Type's full name.</param>
            <param>{1} - Property's name.</param>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.MetadataLogEvents.PersistFieldTypeValidationException">
            <summary>
             Logged when persist field type is NOT bool.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.PULogEvents.ProcessingUnitInitializationInfo">
            <summary>
            Logged at the Processing Unit initialization process, information level.
            <param>{0} - information to log</param>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.PULogEvents.ProcessingUnitInitializationVerbose">
            <summary>
            Logged at the Processing Unit initialization process, verbose level.
            <param>{0} - information to log</param>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.PULogEvents.ProcessingUnitInitializationError">
            <summary>
            Logged at the Processing Unit initialization process, error level.
            <param>{0} - information to log</param>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.PULogEvents.ProcessingUnitDisposalInfo">
            <summary>
            Logged at the Processing Unit disposal process, information level.
            <param>{0} - information to log</param>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.PULogEvents.ProcessingUnitDisposalVerbose">
            <summary>
            Logged at the Processing Unit disposal process, verbose level.
            <param>{0} - information to log</param>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.PULogEvents.ProcessingUnitDisposalError">
            <summary>
            Logged at the Processing Unit disposal process, error level.
            <param>{0} - information to log</param>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.PULogEvents.BasicProcessingUnitContainerInfo">
            <summary>
            Logged information by the basic processing unit container, information level.
            <param>{0} - information to log</param>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.PULogEvents.BasicProcessingUnitContainerError">
            <summary>
            Logged error by the basic processing unit container, error level.
            <param>{0} - information to log</param>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.EventListenerContainerEvents.EventListenerContainerExceptionOccured">
            <summary>
            Logged when an exception is thrown during a container life cycle, error level.
            <param>{0} - Container name</param>
            <param>{1} - Exception</param>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.EventListenerContainerEvents.TaskExecutorException">
            <summary>
            Logged when an exception is thrown during a task executor life cycle, error level.
            <param>{0} - Container name</param>
            <param>{1} - Exception</param>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.EventListenerContainerEvents.EventListenerContainerStateChange">
            <summary>
            Logged during the life cycle of the container, info level.
            <param>{0} - Container name</param>
            <param>{1} - message</param>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.EventListenerContainerEvents.EventListenerUserContainerExceptionOccuring">
            <summary>
            Logged when an exception is thrown inside an event listener method, error level.
            <param>{0} - Container name</param>
            <param>{1} - Exception</param>
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.LogEvents.EventListenerContainerEvents.EventListenerContainerTransactionAbortFailed">
            <summary>
            Logged when an event container fails to abort a transaction during a container life cycle, error level.
            <param>{0} - Container name</param>
            <param>{1} - Exception</param>
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Metadata.IncludeMembers">
            <summary>
            Determines which members are automatically stored in the space.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Metadata.IncludeMembers.None">
            <summary>
            No members are auomatically stored.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Metadata.IncludeMembers.Public">
            <summary>
            Public members are automatically stored. Non-public members are ignored.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Metadata.IncludeMembers.All">
            <summary>
            All members are automatically stored.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Metadata.SpaceIndexType">
            <summary>
            Determines the index type of a field.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Metadata.SpaceIndexType.None">
            <summary>
            No Index.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Metadata.SpaceIndexType.Basic">
            <summary>
            Basic Index.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Metadata.SpaceIndexType.Extended">
            <summary>
            Extended Index.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Metadata.StorageType">
            <summary>
            Determines how a user defined object will be stored in the space.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Metadata.StorageType.Default">
            <summary>
            Storage type will automatically determined by the system.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Metadata.StorageType.Object">
            <summary>
            The object will be stored as a Pojo in the space. It will be matchable and
            readable from any proxy. A compatible class in java must be defined in the
            space classpath.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Metadata.StorageType.Binary">
            <summary>
            The object will be stored in a portable binary format. It will not be deserialized
            and constructed in the space. It will not be matchable. It will be readable from
            any proxy.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Metadata.StorageType.BinaryCustom">
            <summary>
            The object will be stored in a binary form, using user-defined serialization 
            or standard serialization, according to the platform of the proxy. It will 
            not be matchable. It will be readable only from proxies of the same platform 
            (Java/.Net/C++).
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Metadata.StorageType.Document">
            <summary>
            If the object is not part of the built-in inter-operable types, the object will be 
            stored as a SpaceDocument in the space. It will be matchable
            and readable from a .NET or Java proxy. When placed on built-in inter-operable types,
            such as Arrays, Lists, Dictionaries and Dynamic Properties, this storage type will 
            be propogated to the items in these collections while the containers them-selves 
            will be stored in their inter-operable form.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Metadata.FifoSupport">
            <summary>
            Determines FIFO operations support.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Metadata.FifoSupport.Default">
            <summary>
            FIFO support will be inherited from the base class. 
            If base class doesn't have FIFO settings, FifoSupport will be set to OFF.		 
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Metadata.FifoSupport.Off">
            <summary>
            FIFO operations are not supported for this class.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Metadata.FifoSupport.Operation">
            <summary>
            FIFO operations are supported for this class. Use {@link com.j_spaces.core.client.ReadModifiers#FIFO} to perform a FIFO operation. 
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Metadata.FifoSupport.All">
            <summary>
            FIFO operations are supported for this class. All operations involving this class are FIFO.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Metadata.SpaceClassAttribute">
            <summary>
            Provides space metadata information about a class.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Metadata.SpaceClassAttribute.FifoDefaultValue">
            <summary>
            Default value for Fifo property.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Metadata.SpaceClassAttribute.FifoSupportDefaultValue">
            <summary>
            Default value for FifoSupport property.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Metadata.SpaceClassAttribute.PersistDefaultValue">
            <summary>
            Default value for Persist property.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Metadata.SpaceClassAttribute.ReplicateDefaultValue">
            <summary>
            Default value for replicate property.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Metadata.SpaceClassAttribute.IncludeFieldsDefaultValue">
            <summary>
            Default value for IncludeFields property.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Metadata.SpaceClassAttribute.IncludePropertiesDefaultValue">
            <summary>
            Default value for IncludeProperties property.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.SpaceClassAttribute.Fifo">
            <summary>
            Enables/disables FIFO-based notifications and take operations.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.SpaceClassAttribute.FifoSupport">
            <summary>
            Determines FIFO operations support for this class. 
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.SpaceClassAttribute.Persist">
            <summary>
            When space defined as persistent true value for this annotation will persist object of this type.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.SpaceClassAttribute.Replicate">
            <summary>
            Enables/disables replicating the all objects of this type to target space(s) In partial replication mode.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.SpaceClassAttribute.IncludeFields">
            <summary>
            Determines which fields are implicitly stored in the space, even without SpaceProperty attribute.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.SpaceClassAttribute.IncludeProperties">
            <summary>
            Determines which properties are implicitly stored in the space, even without SpaceProperty attribute.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.SpaceClassAttribute.AliasName">
            <summary>
            Specifies the name of the type in the space. If null, the original name will be used.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Metadata.SpaceExcludeAttribute">
            <summary>
            Specifies that the annotated field/property will not be stored in the space, regardless 
            of its accessor or the SpaceClass settings.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Metadata.SpaceIDAttribute">
            <summary>
            Specifies that the annotated field/property will be used as the entity's primary key.
            </summary>
            <remarks>
            A field/property annotated with this attribute will always be stored in the space, regardless 
            of its accessor or the SpaceClass settings - using SpaceProperty attribute is not required.
            The field/property is also implicitly indexed.
            </remarks>
        </member>
        <member name="F:GigaSpaces.Core.Metadata.SpaceIDAttribute.AutoGenerateDefaultValue">
            <summary>
            Default value for AutoGenerate property.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.SpaceIDAttribute.AutoGenerate">
            <summary>
            Specifiy if the entry's UID is generated automatically when written to the space.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Metadata.SpacePropertyAttribute">
            <summary>
            Specifies that the annotated field/property will be stored in the space, regardless 
            of its accessor or the SpaceClass settings. You can also specify its indexing level
            and null value.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Metadata.SpacePropertyAttribute.IndexDefaultValue">
            <summary>
            Default value for index type.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Metadata.SpacePropertyAttribute.StoreTypeDefaultValue">
            <summary>
            Default value for store type.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.SpacePropertyAttribute.Index">
            <summary>
            Specifies the indexing mode used with this field/property.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.SpacePropertyAttribute.NullValue">
            <summary>
            Specifies an alternate null value to be used for matching.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.SpacePropertyAttribute.AliasName">
            <summary>
            Specifies the name of the property in the space. If null, the original name will be used.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Metadata.SpacePropertyAttribute.StorageType">
            <summary>
            Specifies how this field/property will be serialized and stored in the space.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Metadata.SpaceRoutingAttribute">
            <summary>
            Specifies that this field/property is used for routing in clustered spaces. The field/property will be
            stored in the space.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Metadata.SpaceVersionAttribute">
            <summary>
            Specifies that this field/property stores the entry's version. The field/property is 
            not stored in the space, and must be of type <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.IteratorScope">
            <summary>
            Determines the scope of entries visible to a space iterator.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.IteratorScope.ExistingEntries">
            <summary>
            Indicates that the iterator will process entries currently in the space and ignores future changes.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.IteratorScope.FutureEntries">
            <summary>
            Indicates that the iterator will ignore entries currently in the space and process future changes.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.IteratorScope.ExistingAndFutureEntries">
            <summary>
            Indicates that the iterator will process both entries currently in the space and future changes.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Provider">
            <summary>
            Determines the provider that should be used
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Provider.Jet">
            <summary>
            Jet provider
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.JvmMode">
            <summary>
            Determines the Jvm mode.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.JvmMode.Client">
            <summary>
            Client mode.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.JvmMode.Server">
            <summary>
            Server mode.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.JvmMode.Custom">
            <summary>
            Custom dll location.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.EntryType">
            <summary>
            Determines entry type.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.EntryType.Object">
            <summary>
            Concrete <see cref="T:System.Object"/> type.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.EntryType.Document">
            <summary>
            Virtual <see cref="T:GigaSpaces.Core.Document.SpaceDocument"/>.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Metadata.GsXmlConstants">
            <summary>
            Code representation of constant xml values based on the GS.xml schema DTD 6.0 version.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Metadata.ConcreteSpacePropertyInfo.#ctor(GigaSpaces.Core.Metadata.ConcreteSpacePropertyInfo,System.Int32)">
            <summary>
            Copy constructor with level deviation
            </summary>
            <param name="other">Other space field info to copy from</param>
            <param name="levelOffset">Given offset from original level</param>
        </member>
        <member name="M:GigaSpaces.Core.Metadata.ConcreteSpacePropertyInfo.CreateSortKey">
            <summary>
            // Generate sort key using field level (i.e. type in which it was declared) and field name. This maches pojo logic.
            </summary>
            <returns>Generated sort key</returns>
        </member>
        <member name="T:GigaSpaces.Core.Metadata.ConcreteSpaceTypeDescriptor">
            <summary>
            tyepinfo - internal type cached object
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Utils.GetHandler">
            <summary>
            Delegate for injection of the Getter
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="T:GigaSpaces.Core.Internal.Utils.SetHandler">
            <summary>
            Delegate for injection of the Setter
            </summary>
            <param name="source"></param>
            <param name="value"></param>
        </member>
        <member name="T:GigaSpaces.Core.Persistency.Properties">
            <summary>
            Holds properties names
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Persistency.Properties.NumberOfPartitions">
            <summary>
            Use this constant to get from the Properties the number of partitions
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Persistency.Properties.StaticPartitionNumber">
            <summary>
            Use this constant to get from the Properties the partition number
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Persistency.Query">
            <summary>
            Represnts a query based template
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Persistency.Query.#ctor(System.Object[],System.String)">
            <summary>
            Constructs a new query.
            </summary>
            <param name="parameters">Query parameters.</param>
            <param name="sqlQuery">Query string.</param>
        </member>
        <member name="P:GigaSpaces.Core.Persistency.Query.Parameters">
            <summary>
            Gets the query's parameters
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.Persistency.Query.SqlQuery">
            <summary>
            Gets the Sql query representing this query
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Configuration.SpaceProxiesConfigurationElement">
            <summary>
            Configuration element for managed space proxies within a <see cref="T:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicProcessingUnitContainer"/>
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Configuration.SpaceProxiesConfigurationElement.CreateNewElement">
            <summary>
            When overridden in a derived class, creates a new <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </summary>
            
            <returns>
            A new <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </returns>
            
        </member>
        <member name="M:GigaSpaces.XAP.Configuration.SpaceProxiesConfigurationElement.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the element key for a specified configuration element when overridden in a derived class.
            </summary>
            
            <returns>
            An <see cref="T:System.Object" /> that acts as the key for the specified <see cref="T:System.Configuration.ConfigurationElement" />.
            </returns>
            
            <param name="element">The <see cref="T:System.Configuration.ConfigurationElement" /> to return the key for. </param>
        </member>
        <member name="M:GigaSpaces.XAP.Configuration.SpaceProxiesConfigurationElement.Add(GigaSpaces.XAP.Configuration.SpaceProxyConfigurationElement)">
            <summary>
            Add Space proxy config to the space proxies config collection.
            </summary>
            <param name="spaceProxyConfigurationElement">Space proxy config to add.</param>
        </member>
        <member name="T:GigaSpaces.XAP.Configuration.SpaceProxyConfigurationElement">
            <summary>
            Configuration for a managed space proxy within a <see cref="T:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicProcessingUnitContainer"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Configuration.SpaceProxyConfigurationElement.Name">
            <summary>
            Gets or sets the space proxy name.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Configuration.SpaceProxyConfigurationElement.Url">
            <summary>
            Gets or sets the space proxy url.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Configuration.SpaceProxyConfigurationElement.ClusterInfoAware">
            <summary>
            Gets or sets whether this space proxy is aware to the cluster info of the managing <see cref="T:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicProcessingUnitContainer"/>
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Configuration.SpaceProxyConfigurationElement.Mode">
            <summary>
            Gets or sets this proxy mode regarding its cluster aspect.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Configuration.SpaceProxyConfigurationElement.WriteModifiers">
            <summary>
            Gets or sets this proxy default write modifiers.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Configuration.SpaceProxyConfigurationElement.ReadModifiers">
            <summary>
            Gets or sets this proxy default read modifiers.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Configuration.SpaceProxyConfigurationElement.TakeModifiers">
            <summary>
            Gets or sets this proxy default take modifiers.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Configuration.SpaceProxyConfigurationElement.ChangeModifiers">
            <summary>
            Gets or sets this proxy default change modifiers.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Configuration.SpaceProxyConfigurationElement.Gateway">
            <summary>
            Gets or sets gateway configuration of this space.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Configuration.SpaceProxyConfigurationElement.CustomProperties">
            <summary>
            Gets or sets additional space proxy properties.
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Events.EventDrivenAttribute">
            <summary>
            Used by <see cref="M:GigaSpaces.XAP.Events.EventListenerContainerFactory.CreateContainer``1(GigaSpaces.Core.ISpaceProxy,System.Object)"/> operation to create an appropriate <see cref="T:GigaSpaces.XAP.Events.IEventListenerContainer`1"/> that will use
            the marked class for event listening.	
            <seealso cref="T:GigaSpaces.XAP.Events.EventListenerContainerFactory"/>
            <seealso cref="T:GigaSpaces.XAP.Events.Notify.NotifyEventDrivenAttribute"/>
            <seealso cref="T:GigaSpaces.XAP.Events.Polling.PollingEventDrivenAttribute"/>
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.EventDrivenAttribute.Name">
            <summary>
            See <see cref="P:GigaSpaces.XAP.Events.IEventListenerContainer`1.Name"/>
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.EventDrivenAttribute.SpaceProxyName">
            <summary>
            See <see cref="P:GigaSpaces.XAP.Events.IEventListenerContainer`1.SpaceProxy"/>
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.EventDrivenAttribute.PerformSnapshot">
            <summary>
            See <see cref="P:GigaSpaces.XAP.Events.IEventListenerContainer`1.PerformSnapshot"/>
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.EventDrivenAttribute.CloneEventListenersPerThread">
            <summary>
            See <see cref="P:GigaSpaces.XAP.Events.EventListenerContainer`1.CloneEventListenersPerThread"/>
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Events.EventTemplateAttribute">
            <summary>
            Marks a field, property or method that returns the <see cref="P:GigaSpaces.XAP.Events.IEventListenerContainer`1.Template"/>.
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Events.DataEventHandlerAttribute">
            <summary>
            Marks a method to be executed when a <see cref="E:GigaSpaces.XAP.Events.IEventListenerContainer`1.DataEventArrived"/> occurs.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.DataEventHandlerAttribute.WriteOrUpdate">
            <summary>
            Gets or sets whether to write or update the results to back to space or only to write, which means if the result
            object already exists in space an <see cref="T:GigaSpaces.Core.Exceptions.EntryAlreadyInSpaceException"/> will be thrown.
            
            <seealso cref="T:GigaSpaces.Core.WriteModifiers"/>
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.DataEventHandlerAttribute.WriteLease">
            <summary>
            Gets or sets the result object write or update lease.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.DataEventHandlerAttribute.UpdateTimeout">
            <summary>
            Gets or sets the result object timeout if the write back operation becomes an update operation
            
            <seealso cref="M:GigaSpaces.Core.ISpaceProxy.Write``1(``0,GigaSpaces.Core.ITransaction,System.Int64,System.Int64,GigaSpaces.Core.WriteModifiers)"/>
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Events.ContainerExceptionAttribute">
            <summary>
            Marks a method to be executed when a <see cref="E:GigaSpaces.XAP.Events.IEventListenerContainer`1.ContainerExceptionOccured"/> occurs.
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Events.UserExceptionAttribute">
            <summary>
            Marks a method to be executed when a <see cref="E:GigaSpaces.XAP.Events.IEventListenerContainer`1.UserExceptionOccured"/> occures.
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Events.TransactionalEventAttribute">
            <summary>
            Marks an event driven class to be transactional
            <seealso cref="T:GigaSpaces.XAP.Events.EventListenerContainerFactory"/>
            <seealso cref="P:GigaSpaces.XAP.Events.IEventListenerContainer`1.TransactionTimeout"/>
            <seealso cref="P:GigaSpaces.XAP.Events.IEventListenerContainer`1.TransactionManager"/>
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.TransactionalEventAttribute.TransactionTimeout">
            <summary>
            See <see cref="P:GigaSpaces.XAP.Events.IEventListenerContainer`1.TransactionTimeout"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.TransactionalEventAttribute.TransactionType">
            <summary>
            See <see cref="P:GigaSpaces.XAP.Events.IEventListenerContainer`1.TransactionType"/>.
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Events.BatchDataEventArgs`1">
            <summary>
            Batch Data Event arguments
            </summary>
            <typeparam name="TData">Type of data which raised the event.</typeparam>
        </member>
        <member name="M:GigaSpaces.XAP.Events.BatchDataEventArgs`1.#ctor(`0[],GigaSpaces.Core.ISpaceProxy,GigaSpaces.Core.ITransaction,System.Object)">
            <summary>
            Constructs data event arguments
            </summary>
            <param name="data">Event data</param>
            <param name="spaceProxy">SpaceProxy which the data arrived from</param>
            <param name="transaction">Transaction context of current event</param>
            <param name="customEventArgs">Custom event arguments</param>
        </member>
        <member name="P:GigaSpaces.XAP.Events.BatchDataEventArgs`1.Data">
            <summary>
            Gets the event data
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.BatchDataEventArgs`1.SpaceProxy">
            <summary>
            Gets the space proxy of the container that sent this event
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.BatchDataEventArgs`1.Transaction">
            <summary>
            Gets the transaction context of this event
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.BatchDataEventArgs`1.CustomEventArgs">
            <summary>
            Gets custom event arguments.
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Events.ContainerExceptionEventArgs">
            <summary>
            Container Exception event arguments.
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Events.ContainerExceptionEventArgs.#ctor(System.Exception)">
            <summary>
            Constructs container exception event args
            </summary>
            <param name="exception">Occured exception</param>
        </member>
        <member name="P:GigaSpaces.XAP.Events.ContainerExceptionEventArgs.Exception">
            <summary>
            Gets the occured exception.
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Events.DataEventArgs`1">
            <summary>
            Data Event arguments
            </summary>
            <typeparam name="TData">Type of data which raised the event.</typeparam>
        </member>
        <member name="M:GigaSpaces.XAP.Events.DataEventArgs`1.#ctor(`0,GigaSpaces.Core.ISpaceProxy,GigaSpaces.Core.ITransaction,System.Object)">
            <summary>
            Constructs data event arguments
            </summary>
            <param name="data">Event data</param>
            <param name="spaceProxy">SpaceProxy which the data arrived from</param>
            <param name="transaction">Transaction context of current event</param>
            <param name="customEventArgs">Custom event arguments</param>
        </member>
        <member name="P:GigaSpaces.XAP.Events.DataEventArgs`1.Data">
            <summary>
            Gets the event data
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.DataEventArgs`1.SpaceProxy">
            <summary>
            Gets the space proxy of the container that sent this event
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.DataEventArgs`1.Transaction">
            <summary>
            Gets the transaction context of this event
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.DataEventArgs`1.CustomEventArgs">
            <summary>
            Gets custom event arguments.
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Events.WriteBackDataEventHandler`2">
            <summary>
            Simple delegate that is used in conjuction with the <see cref="T:GigaSpaces.XAP.Events.DelegateDataEventArrivedAdapter`2"/> that 
            <see cref="E:GigaSpaces.XAP.Events.IEventListenerContainer`1.DataEventArrived"/> event listeners can implement for easier use and built in write back of
            results to the space.
            
            <seealso cref="T:GigaSpaces.XAP.Events.WriteBackResultDataEventAdapter`1"/>
            </summary>
            <typeparam name="TData">Type of event data.</typeparam>
            <typeparam name="TResult">Type of event results.</typeparam>
            <param name="sender">Event sender</param>
            <param name="e">Event arguments</param>
            <returns>Event results that will be written back to space, or null if none exists.</returns>
        </member>
        <member name="T:GigaSpaces.XAP.Events.WriteBackBatchDataEventHandler`2">
            <summary>
            Simple delegate that is used in conjuction with the <see cref="T:GigaSpaces.XAP.Events.DelegateDataEventArrivedAdapter`2"/> that 
            <see cref="E:GigaSpaces.XAP.Events.IEventListenerContainer`1.BatchDataEventArrived"/> event listeners can implement for easier use and built in write back of
            results to the space.
            
            <seealso cref="T:GigaSpaces.XAP.Events.WriteBackResultDataEventAdapter`1"/>
            </summary>
            <typeparam name="TData">Type of event data.</typeparam>
            <typeparam name="TResult">Type of event results.</typeparam>
            <param name="sender">Event sender</param>
            <param name="e">Event arguments</param>
            <returns>Event results that will be written back to space, or null if none exists.</returns>
        </member>
        <member name="T:GigaSpaces.XAP.Events.DelegateDataEventArrivedAdapter`2">
            <summary>
            Adapts a supplied delegate of type <see cref="T:GigaSpaces.XAP.Events.WriteBackDataEventHandler`2"/> to <see cref="T:GigaSpaces.XAP.Events.DataEventHandler`1"/> which
            has a built in logic of writing back the results to space.
            
            Usage:
            Subsribe to the <see cref="E:GigaSpaces.XAP.Events.IEventListenerContainer`1.DataEventArrived"/> event with the adapter:
            IEventListenerContainer.DataEventArrived += new DelegateDataEventArrivedAdapter(myDelegate).OnEvent;
            
            <seealso cref="T:GigaSpaces.XAP.Events.WriteBackResultDataEventAdapter`1"/>
            </summary>
            <typeparam name="TData">Type of data object.</typeparam>
            <typeparam name="TResult">Type of result object.</typeparam>
        </member>
        <member name="T:GigaSpaces.XAP.Events.WriteBackResultDataEventAdapter`1">
            <summary>
            Base class for adapters that adapts listener methods to <see cref="T:GigaSpaces.XAP.Events.DataEventHandler`1"/>.
            <seealso cref="T:GigaSpaces.XAP.Events.DelegateDataEventArrivedAdapter`2"/>
            </summary>
            <typeparam name="TData">Type of data object.</typeparam>
        </member>
        <member name="M:GigaSpaces.XAP.Events.WriteBackResultDataEventAdapter`1.#ctor(System.Reflection.MethodInfo)">
            <summary>
            Constructs a WriteBackResultDataEventAdapter
            </summary>
            <param name="methodInfo">Method which is being adapted</param>
        </member>
        <member name="M:GigaSpaces.XAP.Events.WriteBackResultDataEventAdapter`1.WriteBackDataEventHandler(System.Object,GigaSpaces.XAP.Events.DataEventArgs{`0})">
            <summary>
            The adapter method, adapts a regular <see cref="T:GigaSpaces.XAP.Events.DataEventHandler`1"/> method call to the
            supplied method and write backs the results.
            </summary>
            <param name="sender">The object which raised the event.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:GigaSpaces.XAP.Events.WriteBackResultDataEventAdapter`1.WriteBackBatchDataEventHandler(System.Object,GigaSpaces.XAP.Events.BatchDataEventArgs{`0})">
            <summary>
            The adapter method, adapts a regular <see cref="T:GigaSpaces.XAP.Events.DataEventHandler`1"/> method call to the
            supplied method and write backs the results.
            </summary>
            <param name="sender">The object which raised the event.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:GigaSpaces.XAP.Events.WriteBackResultDataEventAdapter`1.InvokeListenerMethod(System.Object,GigaSpaces.XAP.Events.DataEventArgs{`0})">
            <summary>
            Invokes the listener method.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event args.</param>
            <returns>Method result that needs to be written to the space, null if none.</returns>
        </member>
        <member name="M:GigaSpaces.XAP.Events.WriteBackResultDataEventAdapter`1.InvokeBatchListenerMethod(System.Object,GigaSpaces.XAP.Events.BatchDataEventArgs{`0})">
            <summary>
            Invokes the batch listener method.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event args.</param>
            <returns>Method result that needs to be written to the space, null if none.</returns>
        </member>
        <member name="M:GigaSpaces.XAP.Events.DelegateDataEventArrivedAdapter`2.#ctor(GigaSpaces.XAP.Events.WriteBackDataEventHandler{`0,`1})">
            <summary>
            Constructs
            </summary>
            <param name="handler">Method that will be the event listener</param>
        </member>
        <member name="M:GigaSpaces.XAP.Events.DelegateDataEventArrivedAdapter`2.#ctor(GigaSpaces.XAP.Events.WriteBackBatchDataEventHandler{`0,`1})">
            <summary>
            Constructs
            </summary>
            <param name="handler">Method that will be the event listener</param>
        </member>
        <member name="M:GigaSpaces.XAP.Events.DelegateDataEventArrivedAdapter`2.InvokeListenerMethod(System.Object,GigaSpaces.XAP.Events.DataEventArgs{`0})">
            <summary>
            Invokes the listener method.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event args.</param>
            <returns>Method result that needs to be written to the space, null if none.</returns>
        </member>
        <member name="M:GigaSpaces.XAP.Events.DelegateDataEventArrivedAdapter`2.InvokeBatchListenerMethod(System.Object,GigaSpaces.XAP.Events.BatchDataEventArgs{`0})">
            <summary>
            Invokes the listener method.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event args.</param>
            <returns>Method result that needs to be written to the space, null if none.</returns>
        </member>
        <member name="M:GigaSpaces.XAP.Events.DelegateDataEventArrivedAdapter`2.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            The supplied handle containing class needs to implement the <see cref="T:System.ICloneable"/> interface as well.
            </summary>
            
            <returns>
            A new object that is a copy of this instance.
            </returns>		
        </member>
        <member name="T:GigaSpaces.XAP.Events.TransactionType">
            <summary>
            Specifies transacion type.
            </summary>
        </member>
        <member name="F:GigaSpaces.XAP.Events.TransactionType.Manual">
            <summary>
            Transaction type will be determined by the supplied <see cref="P:GigaSpaces.XAP.Events.IEventListenerContainer`1.TransactionManager"/>. 
            If no manager is set then no transactions will be used.
            </summary>
        </member>
        <member name="F:GigaSpaces.XAP.Events.TransactionType.Local">
            <summary>
            Transaction will be created by a local transaction manager, using the supplied <see cref="P:GigaSpaces.XAP.Events.IEventListenerContainer`1.SpaceProxy"/> <see cref="P:GigaSpaces.Core.ISpaceProxy.LocalTransactionManager"/>.
            </summary>
        </member>
        <member name="F:GigaSpaces.XAP.Events.TransactionType.Distributed">
            <summary>
            Transaction will be created by a distributed transaction manager created by <see cref="M:GigaSpaces.Core.GigaSpacesFactory.CreateDistributedTransactionManager"/>.
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Events.EventListenerContainer`1">
            <summary>
            Base class for event listener container that executes the event listening logic.
            </summary>
            <typeparam name="TData">Type of data which the container monitors for events.</typeparam>
        </member>
        <member name="T:GigaSpaces.XAP.Events.IEventListenerContainer`1">
            <summary>
            Represents an event listener container
            </summary>
            <typeparam name="TData">Type of data which the container monitors for events.</typeparam>
        </member>
        <member name="M:GigaSpaces.XAP.Events.IEventListenerContainer`1.Validate">
            <summary>
            Validates the container's configuration.
            <exception cref="T:GigaSpaces.XAP.Events.InvalidEventListenerConfigurationException">The container is not configured properly.</exception>
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Events.IEventListenerContainer`1.Start">
            <summary>
            Starts listening to events.
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Events.IEventListenerContainer`1.Stop">
            <summary>
            Stops listening to events. Execution is blocked until the container is fully stopped.
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Events.IEventListenerContainer`1.Stop(System.TimeSpan)">
            <summary>
            Stops listening to events. Execution is blocked until the container is fully stopped or the specified timeout elapses.
            </summary>
            <param name="timeout">Maximum time to wait for container to stop.</param>
            <returns>true if the container managed to stop before the specified timeout elapsed, false otherwise.</returns>
        </member>
        <member name="M:GigaSpaces.XAP.Events.IEventListenerContainer`1.Stop(System.Int32)">
            <summary>
            Stops listening to events. Execution is blocked until the container is fully stopped or the specified timeout elapses.
            </summary>
            <param name="timeout">Maximum time to wait for container to stop (in milliseconds).</param>
            <returns>true if the container managed to stop before the specified timeout elapsed, false otherwise.</returns>
        </member>
        <member name="P:GigaSpaces.XAP.Events.IEventListenerContainer`1.Name">
            <summary>
            Gets or sets the name of the container. This property is not required, but setting a friendly name might be helpful in debugging scenarios.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.IEventListenerContainer`1.Template">
            <summary>
            Gets or sets the template that determines which entries this container should listen for.
            <seealso cref="P:GigaSpaces.XAP.Events.IEventListenerContainer`1.PerformSnapshot"/>
            </summary>
            <remarks>
            This property cannot be changed when the container is running. To change it,  <see cref="M:GigaSpaces.XAP.Events.IEventListenerContainer`1.Stop"/> the container, set the new value then <see cref="M:GigaSpaces.XAP.Events.IEventListenerContainer`1.Start"/> it again.
            </remarks>
        </member>
        <member name="P:GigaSpaces.XAP.Events.IEventListenerContainer`1.PerformSnapshot">
            <summary>
            Gets or sets whether to perform a <see cref="M:GigaSpaces.Core.IReadOnlySpaceProxy.Snapshot``1(``0)"/> on the <see cref="P:GigaSpaces.XAP.Events.IEventListenerContainer`1.Template"/> for improved performance.
            </summary>
            <remarks>
            This property cannot be changed when the container is running. To change it,  <see cref="M:GigaSpaces.XAP.Events.IEventListenerContainer`1.Stop"/> the container, set the new value then <see cref="M:GigaSpaces.XAP.Events.IEventListenerContainer`1.Start"/> it again.
            </remarks>
        </member>
        <member name="P:GigaSpaces.XAP.Events.IEventListenerContainer`1.SpaceProxy">
            <summary>
            Gets or sets the proxy to the space which should be listened to.
            </summary>
            <remarks>
            This property cannot be changed when the container is running. To change it,  <see cref="M:GigaSpaces.XAP.Events.IEventListenerContainer`1.Stop"/> the container, set the new value then <see cref="M:GigaSpaces.XAP.Events.IEventListenerContainer`1.Start"/> it again.
            </remarks>
        </member>
        <member name="P:GigaSpaces.XAP.Events.IEventListenerContainer`1.TransactionType">
            <summary>
            Gets or sets the <see cref="P:GigaSpaces.XAP.Events.IEventListenerContainer`1.TransactionType"/>. When <see cref="F:GigaSpaces.XAP.Events.TransactionType.Manual"/> is used, the transaction type will be determined by the <see cref="P:GigaSpaces.XAP.Events.IEventListenerContainer`1.TransactionManager"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.IEventListenerContainer`1.TransactionManager">
            <summary>
            Gets or sets the transaction manager that will be used to create transactions for the event listening and handling operations.
            If null, no transactions will be used.
            <remarks>
            This property cannot be changed when the container is running. To change it,  <see cref="M:GigaSpaces.XAP.Events.IEventListenerContainer`1.Stop"/> the container, set the new value then <see cref="M:GigaSpaces.XAP.Events.IEventListenerContainer`1.Start"/> it again.
            </remarks>
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.IEventListenerContainer`1.TransactionTimeout">
            <summary>
            Gets or sets a transaction timeout value to override the default value in the <see cref="P:GigaSpaces.XAP.Events.IEventListenerContainer`1.TransactionManager"/> property.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.IEventListenerContainer`1.IsActive">
            <summary>
            Returns true if the container is currently listening to events, false otherwise.
            <seealso cref="M:GigaSpaces.XAP.Events.IEventListenerContainer`1.Start"/>
            <seealso cref="M:GigaSpaces.XAP.Events.IEventListenerContainer`1.Stop"/>
            </summary>
        </member>
        <member name="E:GigaSpaces.XAP.Events.IEventListenerContainer`1.DataEventArrived">
            <summary>
            Occurs when a data event arrives.
            </summary>
        </member>
        <member name="E:GigaSpaces.XAP.Events.IEventListenerContainer`1.BatchDataEventArrived">
            <summary>
            Occurs when a batch data event arrives.
            </summary>
        </member>
        <member name="E:GigaSpaces.XAP.Events.IEventListenerContainer`1.ContainerExceptionOccured">
            <summary>
            Occurs when an exception is thrown during the container's asynchronous life-cycle.
            </summary>
        </member>
        <member name="E:GigaSpaces.XAP.Events.IEventListenerContainer`1.UserExceptionOccured">
            <summary>
            Occurs when an exception is thrown while <see cref="E:GigaSpaces.XAP.Events.IEventListenerContainer`1.DataEventArrived"/> is processed.
            </summary>
        </member>
        <member name="F:GigaSpaces.XAP.Events.EventListenerContainer`1.DefaultPerformSnapshot">
            <summary>
            Default value for <see cref="P:GigaSpaces.XAP.Events.EventListenerContainer`1.PerformSnapshot"/>.
            </summary>
        </member>
        <member name="F:GigaSpaces.XAP.Events.EventListenerContainer`1.DefaultCloneEventListeners">
            <summary>
            Default value for <see cref="P:GigaSpaces.XAP.Events.EventListenerContainer`1.CloneEventListenersPerThread"/>.
            </summary>
        </member>
        <member name="F:GigaSpaces.XAP.Events.EventListenerContainer`1.DefaultTranscationScope">
            <summary>
            Default value for <see cref="P:GigaSpaces.XAP.Events.EventListenerContainer`1.TransactionType"/>.
            </summary>
        </member>
        <member name="F:GigaSpaces.XAP.Events.EventListenerContainer`1.DefaultTransactionCommitAbortTimeout">
            <summary>
            Default value for transaction abort or commit when the container is considered transactional.
            </summary>
        </member>
        <member name="F:GigaSpaces.XAP.Events.EventListenerContainer`1._processedEvents">
            <summary>
            Number of processed events
            </summary>
        </member>
        <member name="F:GigaSpaces.XAP.Events.EventListenerContainer`1._failedEvents">
            <summary>
            Number of failed events
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Events.EventListenerContainer`1.#ctor">
            <summary>
            Creates a container without configuration.
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Events.EventListenerContainer`1.#ctor(GigaSpaces.Core.ISpaceProxy)">
            <summary>
            Creates a container with the specified space proxy.
            </summary>
            <param name="spaceProxy">SpaceProxy that the container will use.</param>
        </member>
        <member name="M:GigaSpaces.XAP.Events.EventListenerContainer`1.#ctor(GigaSpaces.Core.ISpaceProxy,System.Object)">
            <summary>
            Creates a container with the specified space proxy and template.
            </summary>
            <param name="spaceProxy">SpaceProxy that the container will use.</param>
            <param name="template">Template that is used for event listening.</param>
        </member>
        <member name="M:GigaSpaces.XAP.Events.EventListenerContainer`1.Validate">
            <summary>
            Validates the container's configuration.
            <exception cref="T:GigaSpaces.XAP.Events.InvalidEventListenerConfigurationException">The container is not configured properly.</exception>
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Events.EventListenerContainer`1.Start">
            <summary>
            Starts listening to events.
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Events.EventListenerContainer`1.Stop">
            <summary>
            Stops listening to events. Execution is blocked until the container is fully stopped.
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Events.EventListenerContainer`1.Stop(System.TimeSpan)">
            <summary>
            Stops listening to events. Execution is blocked until the container is fully stopped or the specified timeout elapses.
            </summary>
            <param name="timeout">Maximum time to wait for container to stop.</param>
            <returns>true if the container managed to stop before the specified timeout elapsed, false otherwise.</returns>
        </member>
        <member name="M:GigaSpaces.XAP.Events.EventListenerContainer`1.Stop(System.Int32)">
            <summary>
            Stops listening to events. Execution is blocked until the container is fully stopped or the specified timeout elapses.
            </summary>
            <param name="timeout">Maximum time to wait for container to stop (in milliseconds).</param>
            <returns>true if the container managed to stop before the specified timeout elapsed, false otherwise.</returns>
        </member>
        <member name="M:GigaSpaces.XAP.Events.EventListenerContainer`1.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>		
        </member>
        <member name="M:GigaSpaces.XAP.Events.EventListenerContainer`1.OnStart">
            <summary>
            Execute container logic that should be done when the container is started, this method should not block.
            The container is space mode aware, and should do its work in <see cref="M:GigaSpaces.XAP.Events.EventListenerContainer`1.OnBecomePrimary"/>.
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Events.EventListenerContainer`1.OnStop(System.Int32)">
            <summary>
            Execute container logic that should be done when the container is stopped, this method should not block.
            </summary>
            <param name="timeout">Maximum time to wait for container to stop (in milliseconds).</param>
            <returns>Returns true if container was stopped, false otherwise.</returns>
        </member>
        <member name="M:GigaSpaces.XAP.Events.EventListenerContainer`1.OnBecomePrimary">
            <summary>
            Execute container logic that should be done when the underlying space behind the proxy becomes primary, this method should not block.
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Events.EventListenerContainer`1.OnBecomeNotPrimary">
            <summary>
            Execute container logic that should be done when the underlying space behind the proxy is no longer primary, this method should not block.
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Events.EventListenerContainer`1.AssertNotActive(System.String)">
            <summary>
            Asserts that the container is not running currently, and if it does throws <see cref="T:GigaSpaces.XAP.Events.InvalidEventListenerOperationException"/>.
            </summary>
            <param name="propertyName">Name of property to include in error message.</param>
        </member>
        <member name="M:GigaSpaces.XAP.Events.EventListenerContainer`1.GetContainerNameLoggingPrefix">
            <summary>
            Creates a container logging prefix.
            </summary>
            <returns>a container logging prefix.</returns>
        </member>
        <member name="M:GigaSpaces.XAP.Events.EventListenerContainer`1.InitTransaction">
            <summary>
            Creates a transaction using the supplied <see cref="P:GigaSpaces.XAP.Events.EventListenerContainer`1.TransactionManager"/>, 
            it takes into consideration the <see cref="P:GigaSpaces.XAP.Events.EventListenerContainer`1.TransactionTimeout"/> if it was set to override the default manager timeout.
            </summary>
            <returns>Created transaction</returns>				
        </member>
        <member name="M:GigaSpaces.XAP.Events.EventListenerContainer`1.InvokeDataEventArrived(System.Object,GigaSpaces.XAP.Events.DataEventArgs{`0})">
            <summary>
            Invokes <see cref="E:GigaSpaces.XAP.Events.EventListenerContainer`1.DataEventArrived"/> event.
            </summary>
            <param name="sender">event sender</param>
            <param name="e">event args</param>
        </member>
        <member name="M:GigaSpaces.XAP.Events.EventListenerContainer`1.InvokeBatchDataEventArrived(System.Object,GigaSpaces.XAP.Events.BatchDataEventArgs{`0})">
            <summary>
            Invokes <see cref="E:GigaSpaces.XAP.Events.EventListenerContainer`1.BatchDataEventArrived"/> event.
            </summary>
            <param name="sender">event sender</param>
            <param name="e">event args</param>
        </member>
        <member name="M:GigaSpaces.XAP.Events.EventListenerContainer`1.ProcessContainerException(System.Exception,GigaSpaces.Core.ITransaction)">
            <summary>
            Processes a container exception.
            This method must not throw an exception.
            </summary>
            <param name="ex">The exception that occurred in the container.</param>
            <param name="tx">The current transaction, if any.</param>
        </member>
        <member name="M:GigaSpaces.XAP.Events.EventListenerContainer`1.InvokeContainerExceptionOccured(System.Object,GigaSpaces.XAP.Events.ContainerExceptionEventArgs)">
            <summary>
            Invokes <see cref="E:GigaSpaces.XAP.Events.EventListenerContainer`1.ContainerExceptionOccured"/> event.
            </summary>
            <param name="sender">event sender</param>
            <param name="e">event args</param>
        </member>
        <member name="M:GigaSpaces.XAP.Events.EventListenerContainer`1.InvokeUserExceptionOccured(System.Object,GigaSpaces.XAP.Events.UserExceptionEventArgs{`0})">
            <summary>
            Invokes <see cref="E:GigaSpaces.XAP.Events.EventListenerContainer`1.UserExceptionOccured"/> event.
            </summary>
            <param name="sender">event sender</param>
            <param name="e">event args</param>
        </member>
        <member name="M:GigaSpaces.XAP.Events.EventListenerContainer`1.DataEventArrivedHasSubscriptions">
            <summary>
            Returns true if <see cref="E:GigaSpaces.XAP.Events.EventListenerContainer`1.DataEventArrived"/> has subscriptions, false otherwise.
            </summary>
            <returns>Returns true if <see cref="E:GigaSpaces.XAP.Events.EventListenerContainer`1.DataEventArrived"/> has subscriptions, false otherwise.</returns>
        </member>
        <member name="M:GigaSpaces.XAP.Events.EventListenerContainer`1.BatchDataEventArrivedHasSubscriptions">
            <summary>
            Returns true if <see cref="E:GigaSpaces.XAP.Events.EventListenerContainer`1.BatchDataEventArrived"/> has subscriptions, false otherwise.
            </summary>
            <returns>Returns true if <see cref="E:GigaSpaces.XAP.Events.EventListenerContainer`1.BatchDataEventArrived"/> has subscriptions, false otherwise.</returns>
        </member>
        <member name="E:GigaSpaces.XAP.Events.EventListenerContainer`1.DataEventArrived">
            <summary>
            Occurs when a data event arrives.
            </summary>		
        </member>
        <member name="E:GigaSpaces.XAP.Events.EventListenerContainer`1.BatchDataEventArrived">
            <summary>
            Occurs when a batch data event arrives.
            </summary>
        </member>
        <member name="E:GigaSpaces.XAP.Events.EventListenerContainer`1.ContainerExceptionOccured">
            <summary>
            Occurs when an exception is thrown during the container's asynchronous life-cycle.
            </summary>
        </member>
        <member name="E:GigaSpaces.XAP.Events.EventListenerContainer`1.UserExceptionOccured">
            <summary>
            Occurs when an exception is thrown while <see cref="E:GigaSpaces.XAP.Events.EventListenerContainer`1.DataEventArrived"/> is processed.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.EventListenerContainer`1.Name">
            <summary>
            Gets or sets the name of the container. This property is not required, but setting a friendly name might be helpful in debugging scenarios.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.EventListenerContainer`1.Template">
            <summary>
            Gets or sets the template that determines which entries this container should listen for.
            <seealso cref="P:GigaSpaces.XAP.Events.EventListenerContainer`1.PerformSnapshot"/>
            </summary>
            <remarks>
            This property cannot be changed when the container is running. To change it,  <see cref="M:GigaSpaces.XAP.Events.EventListenerContainer`1.Stop"/> the container, set the new value then <see cref="M:GigaSpaces.XAP.Events.EventListenerContainer`1.Start"/> it again.
            </remarks>
        </member>
        <member name="P:GigaSpaces.XAP.Events.EventListenerContainer`1.PerformSnapshot">
            <summary>
            Gets or sets whether to perform an <see cref="M:GigaSpaces.Core.IReadOnlySpaceProxy.Snapshot``1(``0)"/> on the <see cref="P:GigaSpaces.XAP.Events.EventListenerContainer`1.Template"/> for improved performance.
            </summary>
            <remarks>
            This property cannot be changed when the container is running. To change it,  <see cref="M:GigaSpaces.XAP.Events.EventListenerContainer`1.Stop"/> the container, set the new value then <see cref="M:GigaSpaces.XAP.Events.EventListenerContainer`1.Start"/> it again.
            </remarks>
        </member>
        <member name="P:GigaSpaces.XAP.Events.EventListenerContainer`1.SpaceProxy">
            <summary>
            Gets or sets the proxy to the space which should be listened to.
            </summary>
            <remarks>
            This property cannot be changed when the container is running. To change it,  <see cref="M:GigaSpaces.XAP.Events.EventListenerContainer`1.Stop"/> the container, set the new value then <see cref="M:GigaSpaces.XAP.Events.EventListenerContainer`1.Start"/> it again.
            </remarks>
        </member>
        <member name="P:GigaSpaces.XAP.Events.EventListenerContainer`1.TransactionType">
            <summary>
            Gets or sets the <see cref="P:GigaSpaces.XAP.Events.IEventListenerContainer`1.TransactionType"/>. When <see cref="F:GigaSpaces.XAP.Events.TransactionType.Manual"/> is used, the transaction type will be determined by the <see cref="P:GigaSpaces.XAP.Events.IEventListenerContainer`1.TransactionManager"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.EventListenerContainer`1.TransactionManager">
            <summary>
            Gets or sets the transaction manager that will be used to create transactions for the event listening and handling operations.
            If null, no transactions will be used.
            </summary>
            <remarks>
            This property cannot be changed when the container is running. To change it,  <see cref="M:GigaSpaces.XAP.Events.EventListenerContainer`1.Stop"/> the container, set the new value then <see cref="M:GigaSpaces.XAP.Events.EventListenerContainer`1.Start"/> it again.
            </remarks>
        </member>
        <member name="P:GigaSpaces.XAP.Events.EventListenerContainer`1.TransactionTimeout">
            <summary>
            Gets or sets a transaction timeout value to override the default value in the <see cref="P:GigaSpaces.XAP.Events.EventListenerContainer`1.TransactionManager"/> property.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.EventListenerContainer`1.IsActive">
            <summary>
            Returns true if the container is currently listening to events, false otherwise.
            <seealso cref="M:GigaSpaces.XAP.Events.EventListenerContainer`1.Start"/>
            <seealso cref="M:GigaSpaces.XAP.Events.EventListenerContainer`1.Stop"/>
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.EventListenerContainer`1.CloneEventListenersPerThread">
            <summary>
            Gets or sets whether to clone the event listener containing classes when the container is invoking the <see cref="E:GigaSpaces.XAP.Events.EventListenerContainer`1.DataEventArrived"/> event
            from more than one thread
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.EventListenerContainer`1.ActualTemplate">
            <summary>
            Gets the actual template that is used for event listening. If <see cref="P:GigaSpaces.XAP.Events.EventListenerContainer`1.PerformSnapshot"/> is true, this will be the snapshot result of the <see cref="P:GigaSpaces.XAP.Events.EventListenerContainer`1.Template"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.EventListenerContainer`1.IsBatch">
            <summary>
            Returns true if the listener is in batch mode, false otherwise.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.EventListenerContainer`1.Mode">
            <summary>
            Gets the space mode that container is aware of
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Events.EventListenerContainerBuilder`1">
            <summary>
            Base class for event listener container builders.
            </summary>
            <typeparam name="TData"></typeparam>
        </member>
        <member name="M:GigaSpaces.XAP.Events.EventListenerContainerBuilder`1.CreateContainer(System.Object)">
            <summary>
            Creates a new event listener container and configures it according to the attributes on the specified event listener.
            </summary>
            <param name="eventListener">Event listener instance to draw configuration from.</param>
            <returns>A new configured event listener.</returns>
        </member>
        <member name="M:GigaSpaces.XAP.Events.EventListenerContainerBuilder`1.CreateContainer(System.Object,GigaSpaces.Core.ISpaceProxy)">
            <summary>
            Creates a new event listener container and configures it according to the attributes on the specified event listener.
            </summary>
            <param name="eventListener">Event listener instance to draw configuration from.</param>
            <param name="spaceProxy">The space proxy which the container should listen to.</param>
            <returns>A new configured event listener.</returns>
        </member>
        <member name="M:GigaSpaces.XAP.Events.EventListenerContainerBuilder`1.ConfigureContainer(GigaSpaces.XAP.Events.EventListenerContainer{`0},System.Object)">
            <summary>
            Configures the specified container according to the attributes on the specified event listener.
            </summary>
            <param name="container">Event listener container to configure.</param>
            <param name="eventListener">Event listener instance to draw configuration from.</param>
        </member>
        <member name="M:GigaSpaces.XAP.Events.EventListenerContainerBuilder`1.CreateContainerInstance">
            <summary>
            Returns a new, unconfigured container instance.
            </summary>
            <returns>New container instance.</returns>
        </member>
        <member name="M:GigaSpaces.XAP.Events.EventListenerContainerBuilder`1.ValidateContainer(GigaSpaces.XAP.Events.IEventListenerContainer{`0})">
            <summary>
            Validates that the specified container is configured properly.
            </summary>
            <param name="container"></param>
        </member>
        <member name="T:GigaSpaces.XAP.Events.EventListenerContainerFactory">
            <summary>
            Used to create an <see cref="T:GigaSpaces.XAP.Events.IEventListenerContainer`1"/> from a listener instance marked by attributed.
            
            <seealso cref="T:GigaSpaces.XAP.Events.IEventListenerContainer`1"/>
            <seealso cref="T:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1"/>
            <seealso cref="T:GigaSpaces.XAP.Events.Notify.NotifyEventListenerContainer`1"/>
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Events.EventListenerContainerFactory.CreateContainer``1(GigaSpaces.Core.ISpaceProxy,System.Object)">
            <summary>
            Creates an <see cref="T:GigaSpaces.XAP.Events.IEventListenerContainer`1"/> from the supplied listener instance, the listener class should be
            marked with the appropriate <see cref="T:GigaSpaces.XAP.Events.Notify.NotifyEventDrivenAttribute"/> or <see cref="T:GigaSpaces.XAP.Events.Polling.PollingEventDrivenAttribute"/> attribute.
            By default, if the listener class is not marked with an <see cref="T:GigaSpaces.XAP.Events.EventDrivenAttribute"/> attribute, a <see cref="T:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1"/> will be created
            
            </summary>
            <typeparam name="TData">Container data type</typeparam>
            <param name="spaceProxy">The space proxy to be used for space events listening operations.</param>
            <param name="attributedListener">The listener instance that configured the container and listen for events</param>
            <returns>Created <see cref="T:GigaSpaces.XAP.Events.IEventListenerContainer`1"/></returns>
        </member>
        <member name="T:GigaSpaces.XAP.ProcessingUnit.Containers.ServiceGrid.PlainServiceDetails">
            <summary>
            Plain service details
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Events.DataEventHandler`1">
            <summary>
            <see cref="E:GigaSpaces.XAP.Events.IEventListenerContainer`1.DataEventArrived"/> subscription method.
            </summary>
            <typeparam name="T">Event data type.</typeparam>
            <param name="sender">Event sender.</param>
            <param name="e">Data event arguments.</param>
        </member>
        <member name="T:GigaSpaces.XAP.Events.BatchDataEventHandler`1">
            <summary>
            <see cref="E:GigaSpaces.XAP.Events.IEventListenerContainer`1.BatchDataEventArrived"/> subscription method.
            </summary>
            <typeparam name="T">Event data type.</typeparam>
            <param name="sender">Event sender.</param>
            <param name="e">Data event arguments.</param>
        </member>
        <member name="T:GigaSpaces.XAP.Events.InvalidEventListenerConfigurationException">
            <summary>
            Thrown when an event listener container was configured inappropriatly.
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Events.InvalidEventListenerConfigurationException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Events.InvalidEventListenerConfigurationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GigaSpaces.XAP.Events.InvalidEventListenerConfigurationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:GigaSpaces.XAP.Events.InvalidEventListenerConfigurationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="T:GigaSpaces.XAP.Events.InvalidEventListenerOperationException">
            <summary>
            Thrown when an invalid operation is executed on or by the event listener container
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Events.InvalidEventListenerOperationException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Events.InvalidEventListenerOperationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GigaSpaces.XAP.Events.InvalidEventListenerOperationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:GigaSpaces.XAP.Events.InvalidEventListenerOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="T:GigaSpaces.XAP.Events.ITask">
            <summary>
            Tasks that should be executed within an ITaskExecutor
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Events.ITaskExecutor">
            <summary>
            Serves as a concurrent task executor.
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Events.Notify.NotifyEventDrivenAttribute">
            <summary>
            Used by <see cref="M:GigaSpaces.XAP.Events.EventListenerContainerFactory.CreateContainer``1(GigaSpaces.Core.ISpaceProxy,System.Object)"/> operation to create a <see cref="T:GigaSpaces.XAP.Events.Notify.NotifyEventListenerContainer`1"/> that will use
            the marked class for event listening.
            <seealso cref="T:GigaSpaces.XAP.Events.EventDrivenAttribute"/>	
            <seealso cref="T:GigaSpaces.XAP.Events.Notify.NotifyEventListenerContainer`1"/>
            <seealso cref="T:GigaSpaces.XAP.Events.EventListenerContainerFactory"/>
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Notify.NotifyEventDrivenAttribute.NotifyType">
            <summary>
            <see cref="P:GigaSpaces.XAP.Events.Notify.NotifyEventListenerContainer`1.NotifyType"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Notify.NotifyEventDrivenAttribute.PerformTakeOnNotify">
            <summary>
            <see cref="P:GigaSpaces.XAP.Events.Notify.NotifyEventListenerContainer`1.PerformTakeOnNotify"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Notify.NotifyEventDrivenAttribute.IgnoreEventOnNullTake">
            <summary>
            <see cref="P:GigaSpaces.XAP.Events.Notify.NotifyEventListenerContainer`1.IgnoreEventOnNullTake"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Notify.NotifyEventDrivenAttribute.QueuedEventHandlersPoolSize">
            <summary>
            See <see cref="P:GigaSpaces.XAP.Events.Notify.NotifyEventListenerContainer`1.QueuedEventHandlersPoolSize"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Notify.NotifyEventDrivenAttribute.QueuedEventHandling">
            <summary>
            See <see cref="P:GigaSpaces.XAP.Events.Notify.NotifyEventListenerContainer`1.QueuedEventHandling"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Notify.NotifyEventDrivenAttribute.QueuedEventsSizeLimit">
            <summary>
            See <see cref="P:GigaSpaces.XAP.Events.Notify.NotifyEventListenerContainer`1.QueuedEventsSizeLimit"/>.
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Events.Notify.EventSessionConfigAttribute">
            <summary>
            Marks a field, property or a method that represents the <see cref="P:GigaSpaces.XAP.Events.Notify.NotifyEventListenerContainer`1.EventSessionConfig"/> of the <see cref="T:GigaSpaces.XAP.Events.Notify.NotifyEventListenerContainer`1"/>.
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Events.Notify.NotifyEventListenerContainerBuilder`1">
            <summary>
            Builders that builds notify container
            </summary>
            <typeparam name="TData">Type of data which the container monitors for events.</typeparam>
        </member>
        <member name="T:GigaSpaces.XAP.Events.Notify.NotifyEventListenerContainer`1">
            <summary>
            Notification based event listener container allowing to subscribe to <see cref="E:GigaSpaces.XAP.Events.EventListenerContainer`1.DataEventArrived"/> that will be triggered
            by notifications.
            
            Event listener execution can automatically be wrapped in transactions through
            passing an <see cref="T:GigaSpaces.Core.ITransactionManager"/> into the <see cref="P:GigaSpaces.XAP.Events.EventListenerContainer`1.TransactionManager"/> property.
            
            The container can automatically take the notified event data (using <see cref="M:GigaSpaces.Core.ISpaceProxy.Take``1(``0)"/>)
            if the <see cref="P:GigaSpaces.XAP.Events.Notify.NotifyEventListenerContainer`1.PerformTakeOnNotify"/> is set to true. If the flag is set to true, <see cref="P:GigaSpaces.XAP.Events.Notify.NotifyEventListenerContainer`1.IgnoreEventOnNullTake"/>
            can control of the event will be propagated to the event listener if the take operation returned
            null.
            </summary>
            <typeparam name="TData">Type of data which the container monitors for events.</typeparam>
        </member>
        <member name="F:GigaSpaces.XAP.Events.Notify.NotifyEventListenerContainer`1.DefaultNotifyType">
            <summary>
            Default notification type used when registering for notifications
            </summary>
        </member>
        <member name="F:GigaSpaces.XAP.Events.Notify.NotifyEventListenerContainer`1.DefaultPerformTakeOnNotify">
            <summary>
            Default value for <see cref="P:GigaSpaces.XAP.Events.Notify.NotifyEventListenerContainer`1.PerformTakeOnNotify"/>
            </summary>
        </member>
        <member name="F:GigaSpaces.XAP.Events.Notify.NotifyEventListenerContainer`1.DefaultIgnoreEventOnNullTake">
            <summary>
            Default value for <see cref="P:GigaSpaces.XAP.Events.Notify.NotifyEventListenerContainer`1.IgnoreEventOnNullTake"/>
            </summary>
        </member>
        <member name="F:GigaSpaces.XAP.Events.Notify.NotifyEventListenerContainer`1.DefaultQueuedEventHandling">
            <summary>
            Default value for <see cref="P:GigaSpaces.XAP.Events.Notify.NotifyEventListenerContainer`1.QueuedEventHandling"/>
            </summary>
        </member>
        <member name="F:GigaSpaces.XAP.Events.Notify.NotifyEventListenerContainer`1.DefaultQueuedEventHandlersPoolSize">
            <summary>
            Default value for <see cref="P:GigaSpaces.XAP.Events.Notify.NotifyEventListenerContainer`1.QueuedEventHandlersPoolSize"/>
            </summary>
        </member>
        <member name="F:GigaSpaces.XAP.Events.Notify.NotifyEventListenerContainer`1.DefaultQueuedEventsSizeLimit">
            <summary>
            Default value for <see cref="P:GigaSpaces.XAP.Events.Notify.NotifyEventListenerContainer`1.QueuedEventsSizeLimit"/>
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Events.Notify.NotifyEventListenerContainer`1.#ctor">
            <summary>
            Creates a container without configuration.
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Events.Notify.NotifyEventListenerContainer`1.#ctor(GigaSpaces.Core.ISpaceProxy)">
            <summary>
            Creates a container with the specified space proxy.
            </summary>
            <param name="spaceProxy">SpaceProxy that the container will use.</param>
        </member>
        <member name="M:GigaSpaces.XAP.Events.Notify.NotifyEventListenerContainer`1.#ctor(GigaSpaces.Core.ISpaceProxy,System.Object)">
            <summary>
            Creates a container with the specified space proxy and template.
            </summary>
            <param name="spaceProxy">SpaceProxy that the container will use.</param>
            <param name="template">Template that is used for event listening.</param>
        </member>
        <member name="M:GigaSpaces.XAP.Events.Notify.NotifyEventListenerContainer`1.Validate">
            <summary>
            Validate that the container is configured properly
            <exception cref="T:GigaSpaces.XAP.Events.InvalidEventListenerConfigurationException">The container is not configured properly.</exception>
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Events.Notify.NotifyEventListenerContainer`1.OnStart">
            <summary>
            Execute container logic that should be done when the container is started, this method should not block.
            The container is space mode aware, and should do its work in <see cref="M:GigaSpaces.XAP.Events.EventListenerContainer`1.OnBecomePrimary"/>.
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Events.Notify.NotifyEventListenerContainer`1.OnStop(System.Int32)">
            <summary>
            Execute container logic that should be done when the container is stopped, this method should not block.
            </summary>
            <param name="timeout">Maximum time to wait for container to stop (in milliseconds).</param>
            <returns>Returns true if container was stopped, false otherwise.</returns>
        </member>
        <member name="M:GigaSpaces.XAP.Events.Notify.NotifyEventListenerContainer`1.OnBecomePrimary">
            <summary>
            Execute container logic that should be done when the underlying space behind the proxy becomes primary, this method should not block.
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Events.Notify.NotifyEventListenerContainer`1.OnBecomeNotPrimary">
            <summary>
            Execute container logic that should be done when the underlying space behind the proxy is no longer primary, this method should not block.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Notify.NotifyEventListenerContainer`1.NotifyType">
            <summary>
            Gets or sets the type(s) of notification to register for.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Notify.NotifyEventListenerContainer`1.EventSessionConfig">
            <summary>
            Gets or sets the event session config that is used to create the <see cref="T:GigaSpaces.Core.Events.IDataEventSession"/> that is used for
            notification registration.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Notify.NotifyEventListenerContainer`1.PerformTakeOnNotify">
            <summary>
            Gets or sets whether the container should take the entry from the space when an event arrives.
            <seealso cref="P:GigaSpaces.XAP.Events.Notify.NotifyEventListenerContainer`1.IgnoreEventOnNullTake"/>
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Notify.NotifyEventListenerContainer`1.IgnoreEventOnNullTake">
            <summary>
            Gets or sets whether a data event should be raised when the container receives a notification but fails to take the entry. This can happen, for instance, if
            there are multiple listeners that listen for the same data and use <see cref="P:GigaSpaces.XAP.Events.Notify.NotifyEventListenerContainer`1.PerformTakeOnNotify"/> .In that case only one of them will take the entry and the rest
            will return null, which is probably means the event is irrelevant for those listeners and should not be raised.
            <seealso cref="P:GigaSpaces.XAP.Events.Notify.NotifyEventListenerContainer`1.PerformTakeOnNotify"/>
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Notify.NotifyEventListenerContainer`1.QueuedEventHandling">
            <summary>
            Gets or sets whether events are processed in the notification thread or queued and processed in different event handler threads. 
            
            <note>Using <see cref="P:GigaSpaces.XAP.Events.Notify.NotifyEventListenerContainer`1.QueuedEventHandling"/> in conjuction with larger than one <see cref="P:GigaSpaces.XAP.Events.Notify.NotifyEventListenerContainer`1.QueuedEventHandlersPoolSize"/> might break fifo behaviour if fifo is configured by the space or the specific class type.</note>
            <note>The notification is executed in a resource
            pool of the proxy that handles notifications, if the notification triggered code takes too long, it can overload the proxy notification resources
            which can cause notifications evantually to get lost.</note>
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Notify.NotifyEventListenerContainer`1.QueuedEventHandlersPoolSize">
            <summary>
            Gets or sets the size of the event handling thread pool, this is relevant when <see cref="P:GigaSpaces.XAP.Events.Notify.NotifyEventListenerContainer`1.QueuedEventHandling"/> is set to true.
            
            <note>Using <see cref="P:GigaSpaces.XAP.Events.Notify.NotifyEventListenerContainer`1.QueuedEventHandling"/> in conjuction with larger than one <see cref="P:GigaSpaces.XAP.Events.Notify.NotifyEventListenerContainer`1.QueuedEventHandlersPoolSize"/> might break fifo behaviour if fifo is configured by the space or the specific class type.</note>
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Notify.NotifyEventListenerContainer`1.QueuedEventsSizeLimit">
            <summary>
            Gets or sets the size of the events queue, this is relevant when <see cref="P:GigaSpaces.XAP.Events.Notify.NotifyEventListenerContainer`1.QueuedEventHandling"/> is set to true.
            When the queue size is reached, it will block until the size decreases.
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.ProcessingUnit.Containers.ServiceGrid.IServiceDetailsProvider">
            <summary>
            Provide details of generic services that exists within a processing unit.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.ProcessingUnit.Containers.ServiceGrid.IServiceDetailsProvider.ServiceDetails">
            <summary>
            Gets services details
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.ProcessingUnit.Containers.ServiceGrid.IServiceMonitorsProvider">
            <summary>
            A provider of one or more <see cref="T:GigaSpaces.XAP.ProcessingUnit.Containers.ServiceGrid.IServiceMonitors"/>. A component within a processing
            unit can implement it in order to expose "statistics" information regarding the service.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.ProcessingUnit.Containers.ServiceGrid.IServiceMonitorsProvider.ServiceMonitors">
            <summary>
            Gets one or more <see cref="T:GigaSpaces.XAP.ProcessingUnit.Containers.ServiceGrid.IServiceMonitors"/> that the service exposes.
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Events.Notify.ShortLivedTaskExecutor">
            <summary>
            Executes tasks that are shored lived, hence ends after a limited amount of time.
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Events.Polling.PollingEventDrivenAttribute">
            <summary>
            Used by <see cref="M:GigaSpaces.XAP.Events.EventListenerContainerFactory.CreateContainer``1(GigaSpaces.Core.ISpaceProxy,System.Object)"/> operation to create a <see cref="T:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1"/> that will use
            the marked class for event listening.
            <seealso cref="T:GigaSpaces.XAP.Events.EventDrivenAttribute"/>	
            <seealso cref="T:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1"/>
            <seealso cref="T:GigaSpaces.XAP.Events.EventListenerContainerFactory"/>
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Polling.PollingEventDrivenAttribute.MinConcurrentConsumers">
            <summary>
            See <see cref="P:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1.MinConcurrentConsumers"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Polling.PollingEventDrivenAttribute.MaxConcurrentConsumers">
            <summary>
            See <see cref="P:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1.MaxConcurrentConsumers"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Polling.PollingEventDrivenAttribute.IdleIterationsThreshold">
            <summary>
            See <see cref="P:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1.IdleIterationsThreshold"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Polling.PollingEventDrivenAttribute.BusyIterationsThreshold">
            <summary>
            See <see cref="P:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1.BusyIterationsThreshold"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Polling.PollingEventDrivenAttribute.DynamicScaleSampleRate">
            <summary>
            See <see cref="P:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1.DynamicScaleSampleRate"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Polling.PollingEventDrivenAttribute.ReceiveTimeout">
            <summary>
            See <see cref="P:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1.ReceiveTimeout"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Polling.PollingEventDrivenAttribute.ReceiveBatchSize">
            <summary>
            See <see cref="P:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1.ReceiveBatchSize"/>.
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Events.Polling.TriggerHandlerAttribute">
            <summary>
            Marks a field, property or a method that represents the <see cref="T:GigaSpaces.XAP.Events.Polling.Trigger.ITriggerOperationHandler`1"/> of the <see cref="T:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1"/>.
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Events.Polling.ReceiveHandlerAttribute">
            <summary>
            Marks a field, property or a method that represents the <see cref="T:GigaSpaces.XAP.Events.Polling.Receive.IReceiveOperationHandler`1"/> of the <see cref="T:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1"/>.
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Events.Polling.DynamicEventTemplateAttribute">
            <summary>
            Marks a method that returns the <see cref="P:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1.DynamicTemplate"/>.
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Events.Polling.InfiniteTaskExecutor">
            <summary>
            Executes given tasks forever until the task or the executor are stopped.
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainerBuilder`1">
            <summary>
            Builder that builds a polling container
            </summary>
            <typeparam name="TData">Type of data which the container monitors for events.</typeparam>
        </member>
        <member name="T:GigaSpaces.XAP.Events.Polling.DynamicEventTemplateProvider`1">
            <summary>
            Delegate which is used as a dynamic template provider.
            </summary>
            <returns>The dynamic template to use.</returns>
        </member>
        <member name="T:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1">
            <summary>
            Event listener container that uses a receive operation handler to poll for events and allows to subscribe to <see cref="E:GigaSpaces.XAP.Events.EventListenerContainer`1.DataEventArrived"/> that will be triggered
            by a successfull receive operation, Usally used in conjuction with the 
            <see cref="M:GigaSpaces.Core.ISpaceProxy.Take``1(``0,GigaSpaces.Core.ITransaction,System.Int64)"/> API. This container also allow for transactional
            reception of messages.
            
            Event reception and listener execution can automatically be wrapped in transactions through
            passing an <see cref="T:GigaSpaces.Core.ITransactionManager"/> into the <see cref="P:GigaSpaces.XAP.Events.EventListenerContainer`1.TransactionManager"/> property.	
            
            Actual event listener execution happens in a concurrent asynchronous manner, initially <see cref="P:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1.MinConcurrentConsumers"/> consumers will be created.
            Dynamic scaling of the number of concurrent consumers can be activated through specifying a <see cref="P:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1.MaxConcurrentConsumers"/> value that is higher than the
            <see cref="P:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1.MinConcurrentConsumers"/> value. The scale is done both ways, scale up when necessary and scale down
            when some of the invokers are idle. A consumer is considered idle when <see cref="P:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1.IdleIterationsThreshold"/> cycles has passed and it didn't
            trigger any event, the scaling rate is determined by <see cref="P:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1.DynamicScaleSampleRate"/> property, its specifies the rate in which
            to sample the load of the concurrent consumers for scaling up or down. 
            
            <note>Using more than one consumer might break fifo behaviour if fifo is configured by the space or the specific class type, 
            however, this is not take case when using Fifo Grouping.</note>
            </summary>
            <typeparam name="TData">Type of data which the container monitors for events.</typeparam>
        </member>
        <member name="F:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1.DefaultReceiveTimeout">
            <summary>
            Default value for <see cref="P:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1.ReceiveTimeout"/>.
            </summary>
        </member>
        <member name="F:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1.DefaultReceiveBatchSize">
            <summary>
            Default value for <see cref="P:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1.ReceiveBatchSize"/>.
            </summary>
        </member>
        <member name="F:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1.DefaultMinConcurrentConsumers">
            <summary>
            Default value for <see cref="P:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1.MinConcurrentConsumers"/>.
            </summary>
        </member>
        <member name="F:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1.DefaultMaxConcurrentConsumers">
            <summary>
            Default value for <see cref="P:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1.MaxConcurrentConsumers"/>.
            </summary>
        </member>
        <member name="F:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1.DefaultDynamicScaleSampleRate">
            <summary>
            Default value for <see cref="P:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1.DynamicScaleSampleRate"/>.
            </summary>
        </member>
        <member name="F:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1.DefaultIdleIterationsThreshold">
            <summary>
            Default value for <see cref="P:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1.IdleIterationsThreshold"/>.
            </summary>
        </member>
        <member name="F:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1.DefaultBusyIterationsThreshold">
            <summary>
            Default value for <see cref="P:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1.BusyIterationsThreshold"/>.
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1.#ctor">
            <summary>
            Creates a container without configuration.
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1.#ctor(GigaSpaces.Core.ISpaceProxy)">
            <summary>
            Creates a container with the specified space proxy.
            </summary>
            <param name="spaceProxy">SpaceProxy that the container will use.</param>
        </member>
        <member name="M:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1.#ctor(GigaSpaces.Core.ISpaceProxy,System.Object)">
            <summary>
            Creates a container with the specified space proxy and template.
            </summary>
            <param name="spaceProxy">SpaceProxy that the container will use.</param>
            <param name="template">Template that is used for event listening.</param>
        </member>
        <member name="M:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1.Validate">
            <summary>
            Validate that the container is configured properly
            <exception cref="T:GigaSpaces.XAP.Events.InvalidEventListenerConfigurationException">The container is not configured properly.</exception>
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1.OnStart">
            <summary>
            Execute container logic that should be done when the container is started, this method should not block.
            The container is space mode aware, and should do its work in <see cref="M:GigaSpaces.XAP.Events.EventListenerContainer`1.OnBecomePrimary"/>.
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1.OnStop(System.Int32)">
            <summary>
            Execute container logic that should be done when the container is stopped, this method should not block.
            </summary>
            <param name="timeout">Maximum time to wait for container to stop (in milliseconds).</param>
            <returns>Returns true if container was stopped, false otherwise.</returns>
        </member>
        <member name="M:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1.OnBecomePrimary">
            <summary>
            Execute container logic that should be done when the underlying space behind the proxy becomes primary, this method should not block.
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1.OnBecomeNotPrimary">
            <summary>
            Execute container logic that should be done when the underlying space behind the proxy is no longer primary, this method should not block.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1.ReceiveTimeout">
            <summary>
            Gets or sets the timeout parameter which is passed to the <see cref="P:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1.ReceiveOperationHandler"/> each poll.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1.ReceiveBatchSize">
            <summary>
            Gets or sets the batch size parameter which is passed to the <see cref="P:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1.ReceiveOperationHandler"/> when subscribed to batch events.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1.ReceiveOperationHandler">
            <summary>
            Gets or sets the receive operation handler that will be used in each polling iteration.
            The receive operation handler executes a polling logic every iteration and any non null return value triggers
            the event.
            <seealso cref="T:GigaSpaces.XAP.Events.Polling.Receive.IReceiveOperationHandler`1"/>
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1.TriggerOperationHandler">
            <summary>
            Gets or sets the trigger operation handler that will be used in each polling iteration.
            The trigger operation handlers executes its logic out side the transacional context and before a transaction is created, doing so
            allows to reduce the overhead of creating a transaction for each polling operation that might be an idle iteration.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1.MinConcurrentConsumers">
            <summary>
            The minimum number of concurrent consumers that polls and then executes events, this number can't be higher
            than <see cref="P:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1.MaxConcurrentConsumers"/> and can't be less than 1.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1.MaxConcurrentConsumers">
            <summary>
            The maximum number of concurrent consumers, that can be scaled up to on demand, that polls and then executes events, this number
            can't be less than <see cref="P:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1.MinConcurrentConsumers"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1.DynamicScaleSampleRate">
            <summary>
            Gets or sets the rate in which to sample the consumers load for scaling up or down. The number represent every how many polling iterations to sample.
            The value can't be less than 1.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1.IdleIterationsThreshold">
            <summary>
            Gets or sets the number of idle polling iterations (A polling operation that didn't trigger an event) that when reached define the consumer as idle.
            The value can't be less than 1.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1.BusyIterationsThreshold">
            <summary>
            Gets or sets the number of busy polling iterations (A polling operation that triggered an event) that when reached define the consumer as busy.
            The value can't be less than 1.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1.ActiveConcurrentConsumers">
            <summary>
            Gets the currently active concurrent consumers, this number can be anywhere between <see cref="P:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1.MinConcurrentConsumers"/> to <see cref="P:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1.MaxConcurrentConsumers"/>
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Polling.PollingEventListenerContainer`1.DynamicTemplate">
            <summary>
            Gets or sets the dynamic template provider that determines which entries this container should listen for, the provider will be used
            in order to create a new template at each polling iteration.
            </summary>
            <remarks>
            This property cannot be changed when the container is running. To change it,  <see cref="M:GigaSpaces.XAP.Events.EventListenerContainer`1.Stop"/> the container, set the new value then <see cref="M:GigaSpaces.XAP.Events.EventListenerContainer`1.Start"/> it again.
            This property cannot be set together with <see cref="P:GigaSpaces.XAP.Events.EventListenerContainer`1.Template"/>
            </remarks>        
        </member>
        <member name="T:GigaSpaces.XAP.Events.Polling.Receive.ExclusiveReadReceiveOperationHandler`1">
            <summary>
            Performs single read operation using <see cref="M:GigaSpaces.Core.IReadOnlySpaceProxy.Read``1(``0,GigaSpaces.Core.ITransaction,System.Int64,GigaSpaces.Core.ReadModifiers)"/>
            under an exclusive read lock. This receive operation handler allows to lock entries so other
            receive operations won't be able to obtain it (mimics the take operation) but without actually
            performing a take from the Space.
            
            <note>this receive operation handler must be performed under a transaction.</note>
            <seealso cref="T:GigaSpaces.XAP.Events.Polling.Receive.IReceiveOperationHandler`1"/>
            </summary>
            <typeparam name="TData">Type of data to receive.</typeparam>
        </member>
        <member name="M:GigaSpaces.XAP.Events.Polling.Receive.ExclusiveReadReceiveOperationHandler`1.ReceiveBlocking(GigaSpaces.Core.IQuery{`0},GigaSpaces.Core.ISpaceProxy,GigaSpaces.Core.ITransaction,System.Int64)">
            <summary>
            Executes receive operation logic in blocking mode
            </summary>
            <param name="template">The template for the receive operation.</param>
            <param name="proxy">The proxy to execute the operation on.</param>
            <param name="tx">Operation's transaction context, can be null.</param>
            <param name="receiveTimeout">Operation's receive timeout</param>
            <returns>An object that will be passed to the event listener, null result doesn't trigger an event.</returns>
        </member>
        <member name="M:GigaSpaces.XAP.Events.Polling.Receive.ExclusiveReadReceiveOperationHandler`1.ReceiveNonBlocking(GigaSpaces.Core.IQuery{`0},GigaSpaces.Core.ISpaceProxy,GigaSpaces.Core.ITransaction)">
            <summary>
            Executes receive operation logic in non blocking mode
            </summary>
            <param name="template">The template for the receive operation.</param>
            <param name="proxy">The proxy to execute the operation on.</param>
            <param name="tx">Operation's transaction context, can be null.</param>		
            <returns>An object that will be passed to the event listener, null result doesn't trigger an event.</returns>
        </member>
        <member name="M:GigaSpaces.XAP.Events.Polling.Receive.ExclusiveReadReceiveOperationHandler`1.ReceiveBatchBlocking(GigaSpaces.Core.IQuery{`0},GigaSpaces.Core.ISpaceProxy,GigaSpaces.Core.ITransaction,System.Int64,System.Int32)">
            <summary>
            Executes receive operation logic in blocking mode
            </summary>
            <param name="template">The template for the receive operation.</param>
            <param name="proxy">The proxy to execute the operation on.</param>
            <param name="tx">Operation's transaction context, can be null.</param>
            <param name="receiveTimeout">Operation's receive timeout</param>
            <param name="batchSize">operation's batch size</param>
            <returns>An object that will be passed to the event listener, null result doesn't trigger an event.</returns>
        </member>
        <member name="M:GigaSpaces.XAP.Events.Polling.Receive.ExclusiveReadReceiveOperationHandler`1.ReceiveBatchNonBlocking(GigaSpaces.Core.IQuery{`0},GigaSpaces.Core.ISpaceProxy,GigaSpaces.Core.ITransaction,System.Int32)">
            <summary>
            Executes receive operation logic in non blocking mode
            </summary>
            <param name="template">The template for the receive operation.</param>
            <param name="proxy">The proxy to execute the operation on.</param>
            <param name="tx">Operation's transaction context, can be null.</param>		
            <param name="batchSize">operation's batch size</param>
            <returns>An object that will be passed to the event listener, null result doesn't trigger an event.</returns>
        </member>
        <member name="T:GigaSpaces.XAP.Events.Polling.Receive.ReadReceiveOperationHandler`1">
            <summary>
            Performs single take operation using <see cref="M:GigaSpaces.Core.IReadOnlySpaceProxy.Read``1(``0,GigaSpaces.Core.ITransaction,System.Int64)"/>
            
            <seealso cref="T:GigaSpaces.XAP.Events.Polling.Receive.IReceiveOperationHandler`1"/>
            </summary>
            <typeparam name="TData">Type of data to receive.</typeparam>
        </member>
        <member name="M:GigaSpaces.XAP.Events.Polling.Receive.ReadReceiveOperationHandler`1.ReceiveBlocking(GigaSpaces.Core.IQuery{`0},GigaSpaces.Core.ISpaceProxy,GigaSpaces.Core.ITransaction,System.Int64)">
            <summary>
            Executes receive operation logic in blocking mode
            </summary>
            <param name="template">The template for the receive operation.</param>
            <param name="proxy">The proxy to execute the operation on.</param>
            <param name="tx">Operation's transaction context, can be null.</param>
            <param name="receiveTimeout">Operation's receive timeout</param>
            <returns>An object that will be passed to the event listener, null result doesn't trigger an event.</returns>
        </member>
        <member name="M:GigaSpaces.XAP.Events.Polling.Receive.ReadReceiveOperationHandler`1.ReceiveNonBlocking(GigaSpaces.Core.IQuery{`0},GigaSpaces.Core.ISpaceProxy,GigaSpaces.Core.ITransaction)">
            <summary>
            Executes receive operation logic in non blocking mode
            </summary>
            <param name="template">The template for the receive operation.</param>
            <param name="proxy">The proxy to execute the operation on.</param>
            <param name="tx">Operation's transaction context, can be null.</param>		
            <returns>An object that will be passed to the event listener, null result doesn't trigger an event.</returns>
        </member>
        <member name="M:GigaSpaces.XAP.Events.Polling.Receive.ReadReceiveOperationHandler`1.ReceiveBatchBlocking(GigaSpaces.Core.IQuery{`0},GigaSpaces.Core.ISpaceProxy,GigaSpaces.Core.ITransaction,System.Int64,System.Int32)">
            <summary>
            Executes receive operation logic in blocking mode
            </summary>
            <param name="template">The template for the receive operation.</param>
            <param name="proxy">The proxy to execute the operation on.</param>
            <param name="tx">Operation's transaction context, can be null.</param>
            <param name="receiveTimeout">Operation's receive timeout</param>
            <param name="batchSize">operation's batch size</param>
            <returns>An object that will be passed to the event listener, null result doesn't trigger an event.</returns>
        </member>
        <member name="M:GigaSpaces.XAP.Events.Polling.Receive.ReadReceiveOperationHandler`1.ReceiveBatchNonBlocking(GigaSpaces.Core.IQuery{`0},GigaSpaces.Core.ISpaceProxy,GigaSpaces.Core.ITransaction,System.Int32)">
            <summary>
            Executes receive operation logic in non blocking mode
            </summary>
            <param name="template">The template for the receive operation.</param>
            <param name="proxy">The proxy to execute the operation on.</param>
            <param name="tx">Operation's transaction context, can be null.</param>		
            <param name="batchSize">operation's batch size</param>
            <returns>An object that will be passed to the event listener, null result doesn't trigger an event.</returns>
        </member>
        <member name="T:GigaSpaces.XAP.Events.Polling.Receive.TakeReceiveOperationHandler`1">
            <summary>
            Performs single take operation using <see cref="M:GigaSpaces.Core.ISpaceProxy.Take``1(``0,GigaSpaces.Core.ITransaction,System.Int64)"/>
            
            <seealso cref="T:GigaSpaces.XAP.Events.Polling.Receive.IReceiveOperationHandler`1"/>
            </summary>
            <typeparam name="TData">Type of data to receive.</typeparam>
        </member>
        <member name="M:GigaSpaces.XAP.Events.Polling.Receive.TakeReceiveOperationHandler`1.ReceiveBlocking(GigaSpaces.Core.IQuery{`0},GigaSpaces.Core.ISpaceProxy,GigaSpaces.Core.ITransaction,System.Int64)">
            <summary>
            Executes receive operation logic in blocking mode
            </summary>
            <param name="template">The template for the receive operation.</param>
            <param name="proxy">The proxy to execute the operation on.</param>
            <param name="tx">Operation's transaction context, can be null.</param>
            <param name="receiveTimeout">Operation's receive timeout</param>
            <returns>An object that will be passed to the event listener, null result doesn't trigger an event.</returns>
        </member>
        <member name="M:GigaSpaces.XAP.Events.Polling.Receive.TakeReceiveOperationHandler`1.ReceiveNonBlocking(GigaSpaces.Core.IQuery{`0},GigaSpaces.Core.ISpaceProxy,GigaSpaces.Core.ITransaction)">
            <summary>
            Executes receive operation logic in non blocking mode
            </summary>
            <param name="template">The template for the receive operation.</param>
            <param name="proxy">The proxy to execute the operation on.</param>
            <param name="tx">Operation's transaction context, can be null.</param>		
            <returns>An object that will be passed to the event listener, null result doesn't trigger an event.</returns>
        </member>
        <member name="M:GigaSpaces.XAP.Events.Polling.Receive.TakeReceiveOperationHandler`1.ReceiveBatchBlocking(GigaSpaces.Core.IQuery{`0},GigaSpaces.Core.ISpaceProxy,GigaSpaces.Core.ITransaction,System.Int64,System.Int32)">
            <summary>
            Executes receive operation logic in blocking mode
            </summary>
            <param name="template">The template for the receive operation.</param>
            <param name="proxy">The proxy to execute the operation on.</param>
            <param name="tx">Operation's transaction context, can be null.</param>
            <param name="receiveTimeout">Operation's receive timeout</param>
            <param name="batchSize">operation's batch size</param>
            <returns>An object that will be passed to the event listener, null result doesn't trigger an event.</returns>
        </member>
        <member name="M:GigaSpaces.XAP.Events.Polling.Receive.TakeReceiveOperationHandler`1.ReceiveBatchNonBlocking(GigaSpaces.Core.IQuery{`0},GigaSpaces.Core.ISpaceProxy,GigaSpaces.Core.ITransaction,System.Int32)">
            <summary>
            Executes receive operation logic in non blocking mode
            </summary>
            <param name="template">The template for the receive operation.</param>
            <param name="proxy">The proxy to execute the operation on.</param>
            <param name="tx">Operation's transaction context, can be null.</param>		
            <param name="batchSize">operation's batch size</param>
            <returns>An object that will be passed to the event listener, null result doesn't trigger an event.</returns>
        </member>
        <member name="T:GigaSpaces.XAP.Events.Polling.Trigger.ITriggerOperationHandler`1">
            <summary>
            Allows to perform a trigger receive operation which control if the active receive operation will
            be performed in a polling event container. This feature is mainly used when having polling event
            operations with transactions where the trigger receive operation is performed outside of a
            transaction thus reducing the creation of transactions did not perform the actual receive
            operation.
            
            If the <see cref="M:GigaSpaces.XAP.Events.Polling.Trigger.ITriggerOperationHandler`1.TriggerReceive(GigaSpaces.Core.IQuery{`0},GigaSpaces.Core.ISpaceProxy,System.Int64)"/> returns a non null value, it means
            that the receive operation should take place. If it returns a null value, no receive operation will
            be attempted, thus no transaction will be created.
            
            A trigger operation handler can also control if the object returned from <see cref="M:GigaSpaces.XAP.Events.Polling.Trigger.ITriggerOperationHandler`1.TriggerReceive(GigaSpaces.Core.IQuery{`0},GigaSpaces.Core.ISpaceProxy,System.Int64)"/>
            will be used as the template for the receive operation by returning true in <see cref="P:GigaSpaces.XAP.Events.Polling.Trigger.ITriggerOperationHandler`1.UseTriggerAsTemplate"/>.
            If false is returned, the actual template configured in the polling event container will be used.
            
            <seealso cref="T:GigaSpaces.XAP.Events.Polling.Trigger.ReadTriggerOperationHandler`1"/>
            </summary>
            <typeparam name="TData">Type of data to trigger.</typeparam>
        </member>
        <member name="M:GigaSpaces.XAP.Events.Polling.Trigger.ITriggerOperationHandler`1.TriggerReceive(GigaSpaces.Core.IQuery{`0},GigaSpaces.Core.ISpaceProxy,System.Int64)">
            <summary>
            Allows to perform a trigger receive operation which control if the active receive operation will
            be performed in a polling event container. This feature is mainly used when having polling event
            operations with transactions where the trigger receive operation is performed outside of a
            transaction thus reducing the creation of transactions did not perform the actual receive
            operation.
            
            If this method returns a non null value, it means
            that the receive operation should take place. If it returns a null value, no receive operation will
            be attempted, thus no transaction will be created.
            </summary>
            <param name="template">The template for the receive operation.</param>
            <param name="proxy">The proxy to execute the operation on.</param>
            <param name="receiveTimeout">Operation's receive timeout</param>
            <returns>Null value when the receive operation should not be triggered, otherwise a non null value that can also
            be used as the receive template if <see cref="P:GigaSpaces.XAP.Events.Polling.Trigger.ITriggerOperationHandler`1.UseTriggerAsTemplate"/> is set to true.</returns>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Polling.Trigger.ITriggerOperationHandler`1.UseTriggerAsTemplate">
            <summary>
            Gets if the object that return from the <see cref="M:GigaSpaces.XAP.Events.Polling.Trigger.ITriggerOperationHandler`1.TriggerReceive(GigaSpaces.Core.IQuery{`0},GigaSpaces.Core.ISpaceProxy,System.Int64)"/> operation should be used as the
            receive template instead of the configured template.
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Events.Polling.Trigger.NonBlockingTriggerHandler`1">
            <summary>
            Support class to perform either non blockin or blocking trigger operation.
            </summary>
            <typeparam name="TData">Type of data to trigger.</typeparam>
        </member>
        <member name="M:GigaSpaces.XAP.Events.Polling.Trigger.NonBlockingTriggerHandler`1.TriggerReceive(GigaSpaces.Core.IQuery{`0},GigaSpaces.Core.ISpaceProxy,System.Int64)">
            <summary>
            Allows to perform a trigger receive operation which control if the active receive operation will
            be performed in a polling event container. This feature is mainly used when having polling event
            operations with transactions where the trigger receive operation is performed outside of a
            transaction thus reducing the creation of transactions did not perform the actual receive
            operation.
            
            If this method returns a non null value, it means
            that the receive operation should take place. If it returns a null value, no receive operation will
            be attempted, thus no transaction will be created.
            </summary>
            <param name="template">The template for the receive operation.</param>
            <param name="proxy">The proxy to execute the operation on.</param>
            <param name="receiveTimeout">Operation's receive timeout</param>
            <returns>Null value when the receive operation should not be triggered, otherwise a non null value that can also
            be used as the receive template if <see cref="P:GigaSpaces.XAP.Events.Polling.Trigger.ITriggerOperationHandler`1.UseTriggerAsTemplate"/> is set to true.</returns>
        </member>
        <member name="M:GigaSpaces.XAP.Events.Polling.Trigger.NonBlockingTriggerHandler`1.TriggerBlocking(GigaSpaces.Core.IQuery{`0},GigaSpaces.Core.ISpaceProxy,System.Int64)">
            <summary>
            Executes trigger operation logic in blocking mode
            </summary>
            <param name="template">The template for the receive operation.</param>
            <param name="proxy">The proxy to execute the operation on.</param>
            <param name="receiveTimeout">Operation's receive timeout</param>
            <returns>Null value when the receive operation should not be triggered, otherwise a non null value that can also
            be used as the receive template if <see cref="P:GigaSpaces.XAP.Events.Polling.Trigger.ITriggerOperationHandler`1.UseTriggerAsTemplate"/> is set to true.</returns>
        </member>
        <member name="M:GigaSpaces.XAP.Events.Polling.Trigger.NonBlockingTriggerHandler`1.TriggerNonBlocking(GigaSpaces.Core.IQuery{`0},GigaSpaces.Core.ISpaceProxy)">
            <summary>
            Executes trigger operation logic in non blocking mode
            </summary>
            <param name="template">The template for the receive operation.</param>
            <param name="proxy">The proxy to execute the operation on.</param>		
            <returns>Null value when the receive operation should not be triggered, otherwise a non null value that can also
            be used as the receive template if <see cref="P:GigaSpaces.XAP.Events.Polling.Trigger.ITriggerOperationHandler`1.UseTriggerAsTemplate"/> is set to true.</returns>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Polling.Trigger.NonBlockingTriggerHandler`1.NonBlocking">
            <summary>
            Gets or sets whether to perform the operation in a non blocking manner.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Polling.Trigger.NonBlockingTriggerHandler`1.NonBlockingFactor">
            <summary>
            Gets or sets the non blocking factor if <see cref="P:GigaSpaces.XAP.Events.Polling.Trigger.NonBlockingTriggerHandler`1.NonBlocking"/> is true.
            For instance if its value is 10 and the receive timeout of the operation is 1 seconds,
            The operation will be executed 10 times with intervals of 100 miliseconds between each executions.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Polling.Trigger.NonBlockingTriggerHandler`1.UseTriggerAsTemplate">
            <summary>
            Gets if the object that return from the <see cref="M:GigaSpaces.XAP.Events.Polling.Trigger.ITriggerOperationHandler`1.TriggerReceive(GigaSpaces.Core.IQuery{`0},GigaSpaces.Core.ISpaceProxy,System.Int64)"/> operation should be used as the
            receive template instead of the configured template.
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Events.Polling.Trigger.ReadTriggerOperationHandler`1">
            <summary>
            A trigger operation handler that performs read based on the provided template and returns its
            result.
            
            <seealso cref="T:GigaSpaces.XAP.Events.Polling.Trigger.ITriggerOperationHandler`1"/>
            </summary>
            <typeparam name="TData">Type of data to trigger.</typeparam>
        </member>
        <member name="M:GigaSpaces.XAP.Events.Polling.Trigger.ReadTriggerOperationHandler`1.TriggerBlocking(GigaSpaces.Core.IQuery{`0},GigaSpaces.Core.ISpaceProxy,System.Int64)">
            <summary>
            Executes trigger operation logic in blocking mode
            </summary>
            <param name="template">The template for the receive operation.</param>
            <param name="proxy">The proxy to execute the operation on.</param>
            <param name="receiveTimeout">Operation's receive timeout</param>
            <returns>Null value when the receive operation should not be triggered, otherwise a non null value that can also
            be used as the receive template if <see cref="P:GigaSpaces.XAP.Events.Polling.Trigger.ITriggerOperationHandler`1.UseTriggerAsTemplate"/> is set to true.</returns>
        </member>
        <member name="M:GigaSpaces.XAP.Events.Polling.Trigger.ReadTriggerOperationHandler`1.TriggerNonBlocking(GigaSpaces.Core.IQuery{`0},GigaSpaces.Core.ISpaceProxy)">
            <summary>
            Executes trigger operation logic in non blocking mode
            </summary>
            <param name="template">The template for the receive operation.</param>
            <param name="proxy">The proxy to execute the operation on.</param>		
            <returns>Null value when the receive operation should not be triggered, otherwise a non null value that can also
            be used as the receive template if <see cref="P:GigaSpaces.XAP.Events.Polling.Trigger.ITriggerOperationHandler`1.UseTriggerAsTemplate"/> is set to true.</returns>
        </member>
        <member name="P:GigaSpaces.XAP.Events.Polling.Trigger.ReadTriggerOperationHandler`1.UseTriggerAsTemplate">
            <summary>
            Gets if the object that return from the <see cref="M:GigaSpaces.XAP.Events.Polling.Trigger.ITriggerOperationHandler`1.TriggerReceive(GigaSpaces.Core.IQuery{`0},GigaSpaces.Core.ISpaceProxy,System.Int64)"/> operation should be used as the
            receive template instead of the configured template.
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Events.UserExceptionEventArgs`1">
            <summary>
            User Exception Event arguments.
            </summary>
            <typeparam name="TData">Type of event data.</typeparam>
        </member>
        <member name="M:GigaSpaces.XAP.Events.UserExceptionEventArgs`1.#ctor(System.Exception,GigaSpaces.XAP.Events.DataEventArgs{`0})">
            <summary>
            Construct a new user exception event args
            </summary>
            <param name="exception">Occuring exception.</param>
            <param name="dataEventArgs">The data event args of the <see cref="E:GigaSpaces.XAP.Events.IEventListenerContainer`1.DataEventArrived"/> that was invoked when this exception occured.</param>
        </member>
        <member name="M:GigaSpaces.XAP.Events.UserExceptionEventArgs`1.#ctor(System.Exception,GigaSpaces.XAP.Events.BatchDataEventArgs{`0})">
            <summary>
            Construct a new user exception event args
            </summary>
            <param name="exception">Occuring exception.</param>
            <param name="batchDataEventArgs">The data event args of the <see cref="E:GigaSpaces.XAP.Events.IEventListenerContainer`1.BatchDataEventArrived"/> that was invoked when this exception occured.</param>
        </member>
        <member name="P:GigaSpaces.XAP.Events.UserExceptionEventArgs`1.Exception">
            <summary>
            Gets the occuring exception.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.UserExceptionEventArgs`1.DataEventArgs">
            <summary>
            Gets the data event args.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.UserExceptionEventArgs`1.BatchDataDataEventArgs">
            <summary>
            Gets the data event args.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Events.UserExceptionEventArgs`1.Ignore">
            <summary>
            Gets or sets whether to ignore this exception. When transactions are used and an exception
            is thrown the transaction will automatically be aborted, if the exception is set to be ignored the
            transaction will not be aborted.
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicProcessingUnitContainer">
            <summary>
            A basic implementation of <see cref="T:GigaSpaces.XAP.ProcessingUnit.Containers.AbstractProcessingUnitContainer"/> which provides capabilities of creating
            space proxies, auto starting components such as <see cref="T:GigaSpaces.XAP.Events.IEventListenerContainer`1"/> and remote services
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicProcessingUnitContainer.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicProcessingUnitContainer.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicProcessingUnitContainer.Initialize">
            <summary>
            Initialize the processing unit.
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicProcessingUnitContainer.ParseSecurityContext">
            <summary>
            Get security context passes to this container.
            </summary>
            <returns>Security context passes to this container, null if none is passed.</returns>
        </member>
        <member name="M:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicProcessingUnitContainer.AfterInitialize">
            <summary>
            Integration point for deriving classes, called after initialization.
            By default does nothing
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicProcessingUnitContainer.BeforeInitialize(GigaSpaces.XAP.Configuration.BasicContainerConfigurationElement)">
            <summary>
            Integration point for deriving classes, called before initialization.
            By default does nothing
            </summary>
            <param name="containerConfigurationElement">Container configuration</param>
        </member>
        <member name="M:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicProcessingUnitContainer.BeforeDispose">
            <summary>
            Integration point for deriving classes, called before dispose.
            By default does nothing
            </summary>		
        </member>
        <member name="M:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicProcessingUnitContainer.CreateSpaceProxies(GigaSpaces.XAP.Configuration.BasicContainerConfigurationElement)">
            <summary>
            Create space proxies according to the specified configuration.
            </summary>
            <param name="containerConfigurationElement">Container configuration.</param>
        </member>
        <member name="M:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicProcessingUnitContainer.ScanAndCreateComponents(GigaSpaces.XAP.Configuration.BasicContainerConfigurationElement)">
            <summary>
            Scans and create container related components. Components are types that has one of the following attributes over them:
            
            <see cref="T:GigaSpaces.XAP.Events.EventDrivenAttribute"/>
            <see cref="T:GigaSpaces.XAP.Remoting.SpaceRemotingServiceAttribute"/>
            <see cref="T:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicProcessingUnitComponentAttribute"/>
            </summary>
            <param name="containerConfigurationElement">Container configuration.</param>
        </member>
        <member name="M:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicProcessingUnitContainer.CreateSpaceProxy(System.String,System.String)">
            <summary>
            Create a space proxy which its lifecycle is managed by the container.
            The caller does not need to take care of shutting down or disposing the proxy when the container is disposing.
            </summary>
            <param name="name">Space proxy name.</param>
            <param name="url">Space proxy creation url.</param>		
            <returns>Space proxy.</returns>
        </member>
        <member name="M:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicProcessingUnitContainer.CreateSpaceProxy(System.String,System.String,GigaSpaces.Core.SpaceConfig)">
            <summary>
            Create a space proxy which its lifecycle is managed by the container.
            The caller does not need to take care of shutting down or disposing the proxy when the container is disposing.
            </summary>
            <param name="name">Space proxy name.</param>
            <param name="url">Space proxy creation url.</param>		
            <param name="spaceConfig">Space proxy configuration.</param>
            <returns>Space proxy.</returns>
        </member>
        <member name="M:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicProcessingUnitContainer.CreateSpaceProxy(System.String,System.String,GigaSpaces.Core.SpaceConfig,System.Boolean)">
            <summary>
            Create a space proxy which its lifecycle is managed by the container.
            The caller does not need to take care of shutting down or disposing the proxy when the container is disposing.
            </summary>
            <param name="name">Space proxy name.</param>
            <param name="url">Space proxy creation url.</param>
            <param name="spaceConfig">Space proxy configuration.</param>
            <param name="clusterInfoAware">Is space proxy aware to the container cluster info.</param>
            <returns>Space proxy.</returns>
        </member>
        <member name="M:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicProcessingUnitContainer.CreateSpaceProxy(System.String,System.String,GigaSpaces.Core.SpaceConfig,System.Boolean,GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.SpaceProxyMode)">
            <summary>
            Create a space proxy which its lifecycle is managed by the container.
            The caller does not need to take care of shutting down or disposing the proxy when the container is disposing.
            </summary>
            <param name="name">Space proxy name.</param>
            <param name="url">Space proxy creation url.</param>
            <param name="spaceConfig">Space proxy configuration.</param>
            <param name="clusterInfoAware">Is space proxy aware to the container cluster info.</param>
            <param name="spaceProxyMode">Should return a clustered proxy or a direct proxy to the created cluster member, only relevant for embedded proxies
            (default for embedded proxies is direct and clustered for remote proxies).</param>
            <returns>Space proxy.</returns>
        </member>
        <member name="M:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicProcessingUnitContainer.GetSpaceProxy(System.String)">
            <summary>
            Gets the space proxy associated with the specified name.
            </summary>
            <param name="name">Space proxy name.</param>
            <returns>Space proxy associated with the specified name.</returns>
        </member>
        <member name="M:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicProcessingUnitContainer.GetSpaceProxies">
            <summary>
            Gets all the space proxies which are managed by this container.
            </summary>
            <returns>All the space proxies which are managed by this container.</returns>
        </member>
        <member name="M:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicProcessingUnitContainer.GetEventListenerContainer``1(System.String)">
            <summary>
            Gets an event listener container which is managed by this container.
            </summary>
            <param name="name">Event listener container name.</param>
            <returns>Event listener container which is managed by this container.</returns>
        </member>
        <member name="M:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicProcessingUnitContainer.GetProcessingUnitComponent(System.String)">
            <summary>
            Gets a processing unit container which is managed by this container.
            </summary>
            <param name="name">Component's name.</param>
            <returns>Processing unit container which is managed by this container.</returns>
        </member>
        <member name="M:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicProcessingUnitContainer.GetProcessingUnitComponents">
            <summary>
            Gets all the basic processing unit components which are managed by this container.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicProcessingUnitContainer.GetRemoteService(System.String)">
            <summary>
            Gets a hosted remote service which is managed by this container.
            </summary>
            <param name="lookupName">Service lookup name.</param>
            <returns>Hosted remote service which is managed by this container.</returns>
        </member>
        <member name="M:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicProcessingUnitContainer.GetRemoteServices">
            <summary>
            Gets all the hosted remote services which are managed by this container.
            </summary>
            <returns>All the hosted remote services which are managed by this container.</returns>
        </member>
        <member name="T:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicProcessingUnitComponentAttribute">
            <summary>
            Marks a processing unit components which will be managed by a <see cref="T:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicProcessingUnitContainer"/>
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.ProcessingUnit.Containers.BasicContainer.BasicProcessingUnitComponentAttribute.Name">
            <summary>
            Gets or sets the component's name.
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.ProcessingUnit.Containers.DataGrid.DataGridProcessingUnitContainer">
            <summary>
            A simple processing unit container which is used to deploy a data grid pu.
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.ProcessingUnit.Containers.ProcessingUnitContainerHost">
            <summary>
            Hosts and executes a processing unit container in a seperate AppDomain.
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.ProcessingUnit.Containers.ProcessingUnitContainerHost.#ctor(System.String,GigaSpaces.Core.ClusterInfo,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates a processing unit container host and initialize the processing unit container which resides in the specified directory
            </summary>
            <param name="puDirectory">Processing unit container directory.</param>
            <param name="clusterInfo">The cluster info that the hosted container will operate by.</param>
            <param name="properties">Properties which will be passed to the hosted container.</param>
        </member>
        <member name="M:GigaSpaces.XAP.ProcessingUnit.Containers.ProcessingUnitContainerHost.Dispose">
            <summary>
            Dispose the hosted container and unload the hosting AppDomain.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Pbs.Executers.ProcessingUnit.ProcessingUnitContainerGateway.InitializeLifetimeService">
            <summary>
            Needs to override this to cause the processing unit to live forever (Until the app domain unloads)
            </summary>
            <returns></returns>
        </member>
        <member name="T:GigaSpaces.Core.SecurityContext">
            <summary>
            Defines security info passed from the proxy to the space, used by the security filters to 
            validate access to space functions.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.SecurityContext.#ctor">
            <summary>
            Create a security context for the anonymous user.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.SecurityContext.#ctor(System.String,System.String)">
            <summary>
            Create a security context using the specified username and password.
            </summary>
            <param name="userName">Username to use.</param>
            <param name="password">Password matching username.</param>
        </member>
        <member name="T:GigaSpaces.Core.Admin.SpaceState">
            <summary>
            Encapsulates information about the state of a space.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Admin.SpaceState.Starting">
            <summary>
            Space is starting.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Admin.SpaceState.Started">
            <summary>
            Space is started.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Admin.SpaceState.Stopped">
            <summary>
            Space is stopped.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Admin.SpaceState.Aborted">
            <summary>
            Space has been aborted.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Admin.SpaceState.Unknown">
            <summary>
            Space is unreachable.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.Admin.SpaceMode">
            <summary>
            Determines the current space mode.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Admin.SpaceMode.None">
            <summary>
            The space mode is not identified.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Admin.SpaceMode.Backup">
            <summary>
            The space is running in backup mode.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.Admin.SpaceMode.Primary">
            <summary>
            The space is running in primary mode.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.SpaceConfig">
            <summary>
            Defines configurations to start a space.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.SpaceConfig.SpaceFiltersConfig">
            <summary>
            Gets or sets the SpaceFilters configuration related to this space configuration.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.SpaceConfig.ExternalDataSourceConfig">
            <summary>
            Gets or sets the ExternalDataSource configuration related to this space configuration.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.SpaceConfig.GatewayConfig">
            <summary>
            Gets or sets the gateway configuration related to this space configuration.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.SpaceConfig.ClusterInfo">
            <summary>
            Gets or sets the cluster info related to this space configuration.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.SpaceConfig.CustomProperties">
            <summary>
            Gets or sets additional custom properties related to this space configuration
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.SpaceConfig.SpaceTypeDescriptors">
            <summary>
            Gets the list of space type descriptors that the space should start with.
            Types added to this list will be registered when the space starts.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.SpaceUrl">
            <summary>
            Encapsulates a space url.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.SpaceUrl.CreatePropertyName">
            <summary>
            Property name for Create property.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.SpaceUrl.UseLocalCachePropertyName">
            <summary>
            Property name for UseLocalCache property.
            </summary>
        </member>
        <member name="F:GigaSpaces.Core.SpaceUrl.ViewsPropertyName">
            <summary>
            Property name for Views property.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.SpaceUrl.ToString">
            <summary>
            Returns the url encapsulated by this instance.
            </summary>
            <returns>A string representation of the url.</returns>
        </member>
        <member name="P:GigaSpaces.Core.SpaceUrl.RemoteProtocol">
            <summary>
            Gets wether the url points at a remote protocol
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.SpaceUrl.LookupGroups">
            <summary>
            Gets the lookup groups, if available.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.SqlQuery`1">
             <summary>
             Represents an Sql-like template you can use to query the space. 
             </summary>
             <remarks>
             SqlQuery provides an alternative means to query the space besides object matching.
            
             Usage: Construct a SqlQuery instance with a generic type of the desired object type, and the query 
             you want to perform. The query syntax is very similar to the WHERE part of a SQL query. You can
             specify dynamic parameters in the query using question marks (?), and these values are replaced
             by the matching fields that were placed using the <see cref="M:GigaSpaces.Core.SqlQuery`1.SetParameter(System.Int32,System.Object)"/> method.
             
             Main advantages of using SqlQuery:
             * Extended matching - Object matching means each field is matched using equality if it is not null.
             Other kinds of matching (greater than, less than, etc.) are not supported in Object matching, but can be 
             implemented using a SqlQuery.
             * Complex matching - Object matching allows you to match each field only once. If you need to 
             implement a more complex query (say, age &gt; 67 AND gender = male OR age &gt; 65 AND gender=female),
             you can use a SqlQuery to implement it.
             * Readability - SQL is a well known standard that many developers are familiar with. Using a
             SqlQuery makes it easier to understand your query.
             
             Disadvanteges:
             * Performance - Naturally, some matches are executed quicker using Object matching than SqlQuery.
             The SqlQuery code is optimized to notice (in most cases) which type of matching is quicker, 
             and behave accordingly. However, the analysis overhead is still an issue when using SqlQuery, so  
             if you have a query that can be implemented using simple matching, you probably shouldn't use SqlQuery.
             
             Behavior:
             A zero length or null string query will operate as a wild card, 
             meaning all instances of the generic type of the SqlQuery are matched by the query. 		
             
             Supported in: Read, ReadIfExists, ReadMultiple, Take, TakeIfExists, TakeMultiple, Count, Clear,
             Notifications, ISpaceIterator. 
             </remarks>
             <typeparam name="T">Type to be used in the instance.</typeparam>
        </member>
        <member name="M:GigaSpaces.Core.SqlQuery`1.#ctor(System.String)">
            <summary>
            Creates a new SqlQuery using the specified query and the generic type.
            </summary>
            <param name="query">Query's text. If null, simple matching is executed using the type.</param>
        </member>
        <member name="M:GigaSpaces.Core.SqlQuery`1.#ctor(System.String,System.String)">
            <summary>
            Creates a new SqlQuery using the specified query and type name.
            </summary>
            <param name="typeName">Query type name.</param>
            <param name="query">Query's text. If null, simple matching is executed using the type.</param>		
        </member>
        <member name="M:GigaSpaces.Core.SqlQuery`1.#ctor(System.Type,System.String,System.String)">
            <summary>
            Internal constructor
            </summary>
            <param name="type"></param>
            <param name="typeName"></param>
            <param name="query"></param>
        </member>
        <member name="M:GigaSpaces.Core.SqlQuery`1.SetParameter(System.Int32,System.Object)">
            <summary>
            Sets the query parameter value, the number of parameters matches the number of question marks (?) in the query.		
            </summary>
            <remarks>When setting an Enum value, it should be cast to underlying primitive value. e.g SetParameter(1, (int)MyEnum.MyValue).</remarks>
            <param name="index">Index of parameter to set (1-based index).</param>
            <param name="value">Value of parameter.</param>
        </member>
        <member name="P:GigaSpaces.Core.SqlQuery`1.TypeName">
            <summary>
            Get's the query's type name.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.SqlQuery`1.Query">
            <summary>
            Gets the query's text.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.SqlQuery`1.Routing">
            <summary>
            Gets or sets the value that controls this query routing behavior.
            </summary>
        </member>
        <member name="P:GigaSpaces.Core.SqlQuery`1.Projections">
            <summary>
            Gets or sets projection properties which specifies that a result for an operation using this query should
            contain data for the specified projection properties.
            Other properties which were not specifies as a projection will not contain data.
            By default, if no projection was added, all the properties are returned with full data.
            </summary>
        </member>
        <member name="T:GigaSpaces.Core.SqlQuery">
            <summary>
            Provides a generic form of an SqlQuery. See SqlQuery's documentation for more info.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.SqlQuery.#ctor(System.String)">
            <summary>
            Creates a new SqlQuery using the specified query and a default type (Object).
            </summary>
            <param name="query">Query's text. If null, simple matching is executed using the instance.</param>
        </member>
        <member name="M:GigaSpaces.Core.SqlQuery.#ctor(System.Type,System.String)">
            <summary>
            Internal constructor
            </summary>
            <param name="type"></param>
            <param name="query"></param>
        </member>
        <member name="M:GigaSpaces.Core.SqlQuery.#ctor(System.String,System.String)">
            <summary>
            Creates a new SqlQuery using the specified query and type name.
            </summary>
            <param name="typeName">Query type name.</param>
            <param name="query">Query's text. If null, simple matching is executed using the type.</param>		
        </member>
        <member name="F:GigaSpaces.Core.Internal.Utils.CommonHelper.Epoch">
            <summary>
            Represents the Epoch - 1/1/1970.
            <remarks>The Epoch is used by many platforms (e.g. Java, Unix) in Date/Time representation.</remarks>
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Utils.CommonHelper.ExportDateTime(System.DateTime)">
            <summary>
            Converts a .NET System.DateTime to an Epoch-based time representation.
            </summary>
            <param name="dateTime">A .Net DateTime</param>
            <returns>The date represented as milliseconds since the Epoch.</returns>
        </member>
        <member name="M:GigaSpaces.Core.Internal.Utils.CommonHelper.ImportDateTime(System.Int64,System.Boolean)">
            <summary>
            Converts an Epoch based time representation to a .NET System.DateTime.
            </summary>
            <param name="millisecondsSinceEpoch">A date represented as milliseconds since the Epoch</param>
            <param name="toLocalTime"></param>
            <returns>A .Net DateTime</returns>
        </member>
        <member name="T:GigaSpaces.Core.View">
            <summary>
            Represents a query used to initialize a local view.
            </summary>
        </member>
        <member name="M:GigaSpaces.Core.View.#ctor(System.Type,System.String)">
            <summary>
             Create an instance using the specified type and query.
            </summary>
            <param name="type">Query type.</param>
            <param name="query">Sql-like query string.</param>
        </member>
        <member name="M:GigaSpaces.Core.View.#ctor(System.String,System.String)">
            <summary>
            Creates an instance using the specified query and type name.
            </summary>
            <param name="typeName">Query type name.</param>
            <param name="query">Sql-like query string.</param>		
        </member>
        <member name="T:GigaSpaces.XAP.Remoting.Aspects.IRemoteInvocationAspect">
            <summary>
            A remote invocation aspect allows to wrap the invocation of the proxy side.
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.Aspects.IRemoteInvocationAspect.Intercept(GigaSpaces.XAP.Remoting.Aspects.IInvocationInterception)">
            <summary>
            Executed each time a remote invocation is requested allowing a pluggable behavior
            for invocation dispatch. The aspect can decide whether to return the invocation result value by
            setting the <see cref="P:GigaSpaces.XAP.Remoting.Aspects.IInvocationInterception.ResultValue"/> or
            to proceed with the remote invocation process pipeline by using <see cref="M:GigaSpaces.XAP.Remoting.Aspects.IInvocationInterception.Proceed"/>		
            </summary>
            <param name="invocation">Object representing the invocation interception.</param>
        </member>
        <member name="T:GigaSpaces.XAP.Remoting.DynamicProxy.IDynamicProxyGenerator">
            <summary>
            Dynamic proxy generator
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Remoting.DynamicProxy.IInvocationHandler">
            <summary>
            Handle method invocation which are generated by a dynamic proxy
            
            <seealso cref="T:GigaSpaces.XAP.Remoting.DynamicProxy.IDynamicProxyGenerator"/>
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Remoting.Aspects.IInvocationInterception">
            <summary>
            An invocation interception
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.Aspects.IInvocationInterception.Proceed">
            <summary>
            Decide to proceed with the execution pipeline.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Remoting.Aspects.IInvocationInterception.SpaceRemotingInvocation">
            <summary>
            Gets the actual space remoting invocation.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Remoting.Aspects.IInvocationInterception.ResultValue">
            <summary>
            Gets or sets the invocation result value.
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Remoting.Aspects.IServiceExecutionAspect">
            <summary>
            A service execution aspect allows to wrap the execution of "server side" service. 
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.Aspects.IServiceExecutionAspect.Intercept(GigaSpaces.XAP.Remoting.Aspects.IInvocationInterception,System.Object)">
            <summary>
            Executed each time a service remote invocation is requested allowing a pluggable behavior
            for service execution. The aspect can decide whether to return the execution result value by
            setting the <see cref="P:GigaSpaces.XAP.Remoting.Aspects.IInvocationInterception.ResultValue"/> or
            to proceed with the execution process pipeline by using <see cref="M:GigaSpaces.XAP.Remoting.Aspects.IInvocationInterception.Proceed"/>		
            </summary>
            <param name="invocation">Object representing the invocation interception.</param>
            <param name="service">The service the invocations refers to.</param>
        </member>
        <member name="T:GigaSpaces.XAP.Remoting.Hosting.DomainServiceHost">
            <summary>
            Used to export and unexport services within its AppDomain
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.Hosting.DomainServiceHost.Initialize(GigaSpaces.XAP.Remoting.Aspects.IServiceExecutionAspect[])">
            <summary>
            Sets pluggable service execution aspect.
            </summary>
            <param name="executionAspects">Execution aspect to plug.</param>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.Hosting.DomainServiceHost.Reset">
            <summary>
            For testing purposes, should not be used in real environment unless _serviceExporter becomes volatile
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Remoting.Hosting.DomainServiceHost.Host">
            <summary>
            Gets the <see cref="T:GigaSpaces.XAP.Remoting.Hosting.IServiceHost"/> that is used for service exporting.
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Remoting.Hosting.DomainServiceHostAlreadyInitializedException">
            <summary>
            Thrown when an attempt to initialize the <see cref="T:GigaSpaces.XAP.Remoting.Hosting.DomainServiceHost"/> was made while 
            it was already initialized.
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Remoting.GigaSpacesRemotingException">
            <summary>
            Thrown when an error which relates to remoting occurrd.
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.GigaSpacesRemotingException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.GigaSpacesRemotingException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.GigaSpacesRemotingException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.GigaSpacesRemotingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.GigaSpacesRemotingException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.GigaSpacesRemotingException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.GigaSpacesRemotingException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.GigaSpacesRemotingException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.Hosting.DomainServiceHostAlreadyInitializedException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.Hosting.DomainServiceHostAlreadyInitializedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.Hosting.DomainServiceHostAlreadyInitializedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.Hosting.DomainServiceHostAlreadyInitializedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.Hosting.DomainServiceHostAlreadyInitializedException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.Hosting.DomainServiceHostAlreadyInitializedException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.Hosting.DomainServiceHostAlreadyInitializedException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.Hosting.DomainServiceHostAlreadyInitializedException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="T:GigaSpaces.XAP.Remoting.Executors.ExecutorBroadcastRemotingProxyBuilder`1">
            <summary>
            A Builder of a proxy for a remote service, specifically for a broadcast remoting, 
            based on space inherited support of executors.
            
            <seealso cref="T:GigaSpaces.Core.Executors.IDistributedSpaceTask`2"/>
            </summary>
            <typeparam name="TService">Type of remote service.</typeparam>
        </member>
        <member name="T:GigaSpaces.XAP.Remoting.AbstractRemotingProxyBuilder`1">
            <summary>
            A base class for builders of a proxy for a remote service
            </summary>
            <typeparam name="TService">Type of the service behind the proxy.</typeparam>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.AbstractRemotingProxyBuilder`1.#ctor(GigaSpaces.Core.ISpaceProxy)">
            <summary>
            Constructs a new instance of the builder.
            </summary>
            <param name="spaceProxy">The proxy which is used to execute the service.</param>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.AbstractRemotingProxyBuilder`1.CreateProxy">
            <summary>
            Create a proxy for the remote service.
            </summary>
            <returns>A proxy for the remote service.</returns>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.AbstractRemotingProxyBuilder`1.SetInvocationAspects(GigaSpaces.XAP.Remoting.Aspects.IRemoteInvocationAspect[])">
            <summary>
            Sets invocation aspects that will be invoked according to the parameters order.
            </summary>
            <param name="aspects">Invocation aspects.</param>
        </member>
        <member name="P:GigaSpaces.XAP.Remoting.AbstractRemotingProxyBuilder`1.Aspects">
            <summary>
            Gets associated remote invocation aspects.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Remoting.AbstractRemotingProxyBuilder`1.SpaceProxy">
            <summary>
            Gets the proxy which is used to execute the service.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Remoting.AbstractRemotingProxyBuilder`1.Timeout">
            <summary>
            Gets or sets the maximum execution time in miliseconds allowed for a remote service invocation,
            after this time has elapsed, a <see cref="T:GigaSpaces.Core.Exceptions.OperationTimeoutException"/> is thrown.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Remoting.AbstractRemotingProxyBuilder`1.LookupName">
            <summary>
            Gets or sets the service lookup name.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Remoting.AbstractRemotingProxyBuilder`1.MetaArgumentsHandler">
            <summary>
            Gets or sets a pluggable <see cref="T:GigaSpaces.XAP.Remoting.IMetaArgumentsHandler"/>.
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.Executors.ExecutorBroadcastRemotingProxyBuilder`1.#ctor(GigaSpaces.Core.ISpaceProxy)">
            <summary>
            Constructs a new instance of the builder.
            </summary>
            <param name="spaceProxy">The proxy which is used to execute the service.</param>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.Executors.ExecutorBroadcastRemotingProxyBuilder`1.CreateProxy">
            <summary>
            Create a proxy for the remote service.
            </summary>
            <returns>A proxy for the remote service.</returns>
        </member>
        <member name="P:GigaSpaces.XAP.Remoting.Executors.ExecutorBroadcastRemotingProxyBuilder`1.ResultReducer">
            <summary>
            Gets or sets a pluggable result reducer, if none is set then <see cref="T:GigaSpaces.XAP.Remoting.FirstResultReducer"/> will be used.
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Remoting.Executors.RemotingBroadcastFilteredTask">
            <summary>
            A space task which is used for broadcast remoting service execution with result filter
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Remoting.Executors.RemotingBroadcastTask">
            <summary>
            A space task which is used for broadcast remoting service execution
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Remoting.Executors.RemotingTask">
            <summary>
            A space task which is used for the remoting service execution
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Remoting.Executors.ExecutorRemotingProxyBuilder`1">
            <summary>
            A Builder of a proxy for a remote service, based on space inherited support of executors.
            
            <seealso cref="T:GigaSpaces.Core.Executors.ISpaceTask`1"/>
            </summary>
            <typeparam name="TService">Type of remote service.</typeparam>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.Executors.ExecutorRemotingProxyBuilder`1.#ctor(GigaSpaces.Core.ISpaceProxy)">
            <summary>
            Constructs a new instance of the builder.
            </summary>
            <param name="spaceProxy">The proxy which is used to execute the service.</param>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.Executors.ExecutorRemotingProxyBuilder`1.CreateProxy">
            <summary>
            Create a proxy for the remote service.
            </summary>
            <returns>A proxy for the remote service.</returns>
        </member>
        <member name="P:GigaSpaces.XAP.Remoting.Executors.ExecutorRemotingProxyBuilder`1.RoutingHandler">
            <summary>
            Gets or sets a pluggable <see cref="T:GigaSpaces.XAP.Remoting.Routing.IRemoteRoutingHandler"/>, 
            if none is set then <see cref="T:GigaSpaces.XAP.Remoting.Routing.AttributedRoutingHandler"/> will be used.		
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Remoting.Hosting.IServiceExecutor">
            <summary>
            Internal: extends service exporter with execution capabilties
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Remoting.Hosting.IServiceHost">
            <summary>
            Exports services which can later on be used remotely over the space.
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.Hosting.IServiceHost.Publish(System.Object,System.String[])">
            <summary>
            Exports a service, register it under the specified lookup names.
            </summary>
            <param name="service">Service to export.</param>
            <param name="lookupNames">Lookup names under which to register the service.</param>
            <returns>Service registration.</returns>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.Hosting.IServiceHost.Publish(System.Object,System.Type[])">
            <summary>
            Exports a service, only register it under the specified types.
            </summary>
            <param name="service">Service to export.</param>
            <param name="types">Types under which to register the service.</param>
            <returns>Service registration.</returns>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.Hosting.IServiceHost.Publish(System.Object)">
            <summary>
            Exports a service, using the default lookup name for the specified service.
            </summary>
            <param name="service">Service to export.</param>
            <returns>Service registration.</returns>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.Hosting.IServiceHost.GetHostedService(System.String)">
            <summary>
            Gets an exported service by lookup name.
            </summary>
            <param name="lookupName">Service lookup name.</param>
            <returns>Matching exported service or null if none exists.</returns>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.Hosting.IServiceHost.Unpublish(GigaSpaces.XAP.Remoting.Hosting.IServiceRegistration)">
            <summary>
            Unexport a specific service according to the specified service registration.
            </summary>
            <param name="registration">service registration to unexport.</param>
        </member>
        <member name="T:GigaSpaces.XAP.Remoting.Hosting.ServiceHostDetails">
            <summary>
            Provide details of the service host
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Remoting.IRemoteServiceDetails">
            <summary>
            Provide details of a hosted remote service.
            <see cref="T:GigaSpaces.XAP.Remoting.SpaceRemotingServiceAttribute"/>
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Remoting.IRemoteServiceDetails.Id">
            <summary>
            Gets the remoting service id.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Remoting.IRemoteServiceDetails.ClassName">
            <summary>
            Gets the remoting service class name.
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Remoting.IRemotingServiceDetails">
            <summary>
            Gets the details of the hosted remoting services within the processing unit.
            <see cref="T:GigaSpaces.XAP.Remoting.SpaceRemotingServiceAttribute"/>
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.IRemotingServiceDetails.GetRemoteService(System.String)">
            <summary>
            Returns details of the specified remote service id.
            </summary>
            <param name="id">Remote service id to get that details of.</param>
            <returns>Remote service details.</returns>
        </member>
        <member name="P:GigaSpaces.XAP.Remoting.IRemotingServiceDetails.RemoteServices">
            <summary>
            Gets a list of the hosted remote services details.
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Remoting.IRemotingServiceMonitors">
            <summary>
            Provide monitoring of the hosted remoting services within the processing unit.
            <see cref="T:GigaSpaces.XAP.Remoting.SpaceRemotingServiceAttribute"/>
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.IRemotingServiceMonitors.GetRemoteServiceStats(System.String)">
            <summary>
            Returns a specific remote service statistics.
            </summary>
            <param name="id">Remote service id to get the statistics for.</param>
            <returns>Remote service statistics.</returns>
        </member>
        <member name="P:GigaSpaces.XAP.Remoting.IRemotingServiceMonitors.RemotingDetails">
            <summary>
            Gets the <see cref="T:GigaSpaces.XAP.Remoting.IRemotingServiceDetails"/> of the remoting services within the processing unit.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Remoting.IRemotingServiceMonitors.Processed">
            <summary>
            Gets the total number of remoting invocations that were successfully executed.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Remoting.IRemotingServiceMonitors.Failed">
            <summary>
            Gets the total number of remoting invocations that failed execution.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Remoting.IRemotingServiceMonitors.RemoteServiceStats">
            <summary>
            Gets a list of the hosted remote services statistics.
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Remoting.IRemoteServiceStats">
            <summary>
            Provide statistics for a remote service
            <see cref="T:GigaSpaces.XAP.Remoting.SpaceRemotingServiceAttribute"/>
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Remoting.IRemoteServiceStats.Id">
            <summary>
            Gets the remote service id.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Remoting.IRemoteServiceStats.Processed">
            <summary>
            Gets the total number of remoting invocations that were successfully executed.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Remoting.IRemoteServiceStats.Failed">
            <summary>
            Gets the total number of remoting invocations that failed execution.
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Remoting.ISpaceRemotingInvocation">
            <summary>
            Represents a remote method invocation.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Remoting.ISpaceRemotingInvocation.GenericArguments">
            <summary>
            Gets the invoked method generic arguments, null if the method is not generic.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Remoting.ISpaceRemotingInvocation.LookupName">
            <summary>
            Gets the invoked service lookup name.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Remoting.ISpaceRemotingInvocation.Method">
            <summary>
            Gets the invoked method.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Remoting.ISpaceRemotingInvocation.Arguments">
            <summary>
            Gets the invocation arguments.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Remoting.ISpaceRemotingInvocation.MetaArguments">
            <summary>
            Gets the invocation meta arguments.
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Remoting.SpaceServiceOperationAttribute">
            <summary>
            Used to specify a behavior of a method of a remote service
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Remoting.SpaceServiceOperationAttribute.OneWay">
            <summary>
            Gets or sets whether the method is one way.
            A one way method cannot return a value and by its nature the invoker will not receive
            exceptions if occured and he will have no guarantee that the method was executed succesfully.
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Remoting.IMetaArgumentsHandler">
            <summary>
            Meta argument handler can control the meta data objects that will be used
            for the remote invocation.
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.IMetaArgumentsHandler.CreateMetaArguments(GigaSpaces.XAP.Remoting.ISpaceRemotingInvocation)">
            <summary>
            Create meta data arguments according to the specified remoting invocation.
            </summary>
            <param name="invocation">Object representing the invocation.</param>
            <returns>meta data arguments.</returns>
        </member>
        <member name="T:GigaSpaces.XAP.Remoting.DynamicProxy.InvocationDescription">
            <summary>
            Describe service invocation 
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Remoting.Protocol.MethodName.MethodNameRemotingProtocol">
            <summary>
            Implementation of <see cref="T:GigaSpaces.XAP.Remoting.Protocol.IRemotingProtocol"/> which uses method name and param names to describe
            the method invocation request
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Remoting.Protocol.IRemotingProtocol">
            <summary>
            The protocol which is used to describe the remoting invocation
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Remoting.IInvocationRequest">
            <summary>
            Marker interface for invocation request, used by <see cref="T:GigaSpaces.XAP.Remoting.Protocol.IRemotingProtocol"/> in order
            to desribe an invocation request
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Remoting.Protocol.MethodName.MethodNameInvocationRequest">
            <summary>
            An object representing the invocation request as part of the <see cref="T:GigaSpaces.XAP.Remoting.Protocol.MethodName.MethodNameRemotingProtocol"/>
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Remoting.FirstResultReducer">
            <summary>
            A <see cref="T:GigaSpaces.XAP.Remoting.IRemoteResultReducer"/> which takes the first returned result of a broadcast remoting
            invocation and returns it as the execution result. The reducer also implements <see cref="T:GigaSpaces.XAP.Remoting.IRemoteResultFilter"/>
            in order to break the broadcast result collection once a single result arrives.
            
            <seealso cref="T:GigaSpaces.XAP.Remoting.Executors.ExecutorBroadcastRemotingProxyBuilder`1"/>
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Remoting.IRemoteResultReducer">
            <summary>
            A remoting result reducer (aka Map Reduce) used when working with
            <see cref="T:GigaSpaces.XAP.Remoting.Executors.ExecutorBroadcastRemotingProxyBuilder`1"/> in order to reduce the broadcast results into 
            a "client side" result value.
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.IRemoteResultReducer.Reduce(GigaSpaces.XAP.Remoting.SpaceRemotingResultsCollection,GigaSpaces.XAP.Remoting.ISpaceRemotingInvocation)">
            <summary>
            Reduce a list of <see cref="T:GigaSpaces.XAP.Remoting.SpaceRemotingResult"/> into a single result.
            </summary>
            <param name="results">The list of remoting invocation results to reduce.</param>
            <param name="invocation">Object representing the invocation.</param>
            <returns>Reduced result.</returns>
        </member>
        <member name="T:GigaSpaces.XAP.Remoting.IRemoteResultFilter">
            <summary>
            An optional filter that can be used with <see cref="T:GigaSpaces.XAP.Remoting.IRemoteResultReducer"/>. Allows to be notified
            for each <see cref="T:GigaSpaces.XAP.Remoting.SpaceRemotingResult"/> that arrives and decide what
            should be done with it.
            
            <seealso cref="T:GigaSpaces.XAP.Remoting.Executors.ExecutorBroadcastRemotingProxyBuilder`1"/>
            </summary>	
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.IRemoteResultFilter.GetFilterDecision(GigaSpaces.XAP.Remoting.SpaceRemotingFilterInfo,GigaSpaces.XAP.Remoting.ISpaceRemotingInvocation)">
            <summary>
            A callback invoked for each result that arrives as a result of a broadcast remote service execution allowing
            to access the result that caused this event, the events received so far, and the total expected results.
            </summary>
            <param name="info">Current filter info.</param>
            <param name="invocation">Object representing the invocation.</param>
            <returns>Filter's decision</returns>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.FirstResultReducer.GetFilterDecision(GigaSpaces.XAP.Remoting.SpaceRemotingFilterInfo,GigaSpaces.XAP.Remoting.ISpaceRemotingInvocation)">
            <summary>
            A callback invoked for each result that arrives as a result of a broadcast remote service execution allowing
            to access the result that caused this event, the events received so far, and the total expected results.
            </summary>
            <param name="info">Current filter info.</param>
            <param name="invocation">Object representing the invocation.</param>
            <returns>Filter's decision</returns>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.FirstResultReducer.Reduce(GigaSpaces.XAP.Remoting.SpaceRemotingResultsCollection,GigaSpaces.XAP.Remoting.ISpaceRemotingInvocation)">
            <summary>
            Reduce a list of <see cref="T:GigaSpaces.XAP.Remoting.SpaceRemotingResult"/> into a single result.
            </summary>
            <param name="results">The list of remoting invocation results to reduce.</param>
            <param name="invocation">Object representing the invocation.</param>
            <returns>Reduced result.</returns>
        </member>
        <member name="T:GigaSpaces.XAP.Remoting.MethodInvocationMetadata">
            <summary>
            Holds method specific remoting invocation metadata
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Remoting.Protocol.RemotingProtocolException">
            <summary>
            Thrown when there is a mismatch with the remoting protocol.
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.Protocol.RemotingProtocolException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.Protocol.RemotingProtocolException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.Protocol.RemotingProtocolException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.Protocol.RemotingProtocolException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.Protocol.RemotingProtocolException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.Protocol.RemotingProtocolException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.Protocol.RemotingProtocolException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.Protocol.RemotingProtocolException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="T:GigaSpaces.XAP.Remoting.Routing.IRemoteRoutingHandler">
            <summary>
            A general interface allowing for pluggable computation of the remoting invocation routing field.
            Routing field controls the partition the invocation will be directed to when working with a
            partitioned space.
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.Routing.IRemoteRoutingHandler.ComputeRouting(GigaSpaces.XAP.Remoting.ISpaceRemotingInvocation)">
            <summary>
            Compute the routing field value based on the remoting invocation. If null
            is returned, will use internal calcualtion of the routing index.
            </summary>
            <param name="invocation">Object representing the invocation.</param>
            <returns>routing field value based on the remoting invocation. If null
            is returned, will use internal calcualtion of the routing index.</returns>
        </member>
        <member name="T:GigaSpaces.XAP.Remoting.Hosting.IServiceRegistration">
            <summary>
            Represents service registration to an <see cref="T:GigaSpaces.XAP.Remoting.Hosting.IServiceHost"/>.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Remoting.Hosting.IServiceRegistration.LookupNames">
            <summary>
            Service registered lookup names
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Remoting.Routing.AttributedRoutingHandler">
            <summary>
            A routing handler implementation which identify the routing parameter of a method according to 
            the <see cref="T:GigaSpaces.XAP.Remoting.Routing.ServiceRoutingAttribute"/>.
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.Routing.AttributedRoutingHandler.ComputeRouting(GigaSpaces.XAP.Remoting.ISpaceRemotingInvocation)">
            <summary>
            Compute the routing field value based on the remoting invocation. If null
            is returned, will use internal calcualtion of the routing index.
            </summary>
            <param name="invocation">Object representing the invocation.</param>
            <returns>routing field value based on the remoting invocation. If null
            is returned, will use internal calcualtion of the routing index.</returns>
        </member>
        <member name="T:GigaSpaces.XAP.Remoting.Hosting.ServiceExecutor">
            <summary>
            The default implementation of service executor
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Remoting.ServiceNotFoundException">
            <summary>
            Thrown when trying to invoke a method on a service which is not found.
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.ServiceNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.ServiceNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.ServiceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.ServiceNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.ServiceNotFoundException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.ServiceNotFoundException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.ServiceNotFoundException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.ServiceNotFoundException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="T:GigaSpaces.XAP.Remoting.Hosting.ServiceRegistration">
            <summary>
            Default implementation of <see cref="T:GigaSpaces.XAP.Remoting.Hosting.IServiceRegistration"/>
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Remoting.Routing.ServiceRoutingAttribute">
            <summary>
            Specify which parameter of the method is used to determine the routing value for the invocation
            <seealso cref="T:GigaSpaces.XAP.Remoting.Routing.IRemoteRoutingHandler"/>
            <seealso cref="T:GigaSpaces.XAP.Remoting.Routing.AttributedRoutingHandler"/>
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.Routing.ServiceRoutingAttribute.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.Routing.ServiceRoutingAttribute.#ctor(System.String)">
            <summary>
            Construct a service routing attribute with specific property name
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="P:GigaSpaces.XAP.Remoting.Routing.ServiceRoutingAttribute.PropertyName">
            <summary>
            Gets the routing property name
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Remoting.SpaceRemotingFilterInfo">
            <summary>
            Contains a single remoting filter decision invocation required info.
            
            <seealso cref="T:GigaSpaces.XAP.Remoting.IRemoteResultFilter"/>
            <seealso cref="T:GigaSpaces.XAP.Remoting.Executors.ExecutorBroadcastRemotingProxyBuilder`1"/>
            <seealso cref="T:GigaSpaces.XAP.Remoting.IRemoteResultReducer"/>
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.SpaceRemotingFilterInfo.#ctor(System.Int32,GigaSpaces.XAP.Remoting.SpaceRemotingResult,GigaSpaces.XAP.Remoting.SpaceRemotingResultsCollection)">
            <summary>
            Constructs a new space remoting filter info
            </summary>
            <param name="totalExpectedResults">Total expected result of this execution.</param>
            <param name="currentResult">Current result.</param>
            <param name="receivedResults">Previously received results without the current result.</param>
        </member>
        <member name="P:GigaSpaces.XAP.Remoting.SpaceRemotingFilterInfo.TotalExpectedResults">
            <summary>
            Gets the total expected results of this execution.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Remoting.SpaceRemotingFilterInfo.CurrentResult">
            <summary>
            Gets the current result.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Remoting.SpaceRemotingFilterInfo.ReceivedResults">
            <summary>
            Gets the previously received results without the current result.
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Remoting.SpaceRemotingInvocation">
            <summary>
            Represents a remote method invocation.
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.SpaceRemotingInvocation.#ctor(System.String,System.Reflection.MethodInfo,System.Object[],System.Type[],System.Object[])">
            <summary>
            Construct a new instance
            </summary>
            <param name="lookupName">Service lookup name.</param>
            <param name="method">Service invoked method.</param>
            <param name="arguments">Invocation arguments.</param>
            <param name="genericArguments">Invoked method generic arguments.</param>
            <param name="metaArguments">Additional invocation meta arguments.</param>
        </member>
        <member name="P:GigaSpaces.XAP.Remoting.SpaceRemotingInvocation.GenericArguments">
            <summary>
            Gets the invoked method generic arguments, null if the method is not generic.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Remoting.SpaceRemotingInvocation.LookupName">
            <summary>
            Gets the invoked service lookup name.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Remoting.SpaceRemotingInvocation.Method">
            <summary>
            Gets the invoked method.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Remoting.SpaceRemotingInvocation.Arguments">
            <summary>
            Gets the invocation arguments.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Remoting.SpaceRemotingInvocation.MetaArguments">
            <summary>
            Gets the invocation meta arguments.
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Remoting.Hosting.UninitializedDomainServiceHostException">
            <summary>
            Thrown when an attempt to use the <see cref="T:GigaSpaces.XAP.Remoting.Hosting.DomainServiceHost"/> was made while it 
            is not initialized.
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.Hosting.UninitializedDomainServiceHostException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.Hosting.UninitializedDomainServiceHostException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the exception with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.Hosting.UninitializedDomainServiceHostException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.Hosting.UninitializedDomainServiceHostException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the exception with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.Hosting.UninitializedDomainServiceHostException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.Hosting.UninitializedDomainServiceHostException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.Hosting.UninitializedDomainServiceHostException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception)">
            <summary>
            Initializes a new instance of the exception with the specified message, and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.Hosting.UninitializedDomainServiceHostException.#ctor(GigaSpaces.Core.Internal.Utils.LogEvent,System.Exception,System.Object[])">
            <summary>
            Initializes a new instance of the exception with the specified message, params and logs it.
            </summary>
            <param name="logEvent"></param>
            <param name="innerException"></param>
            <param name="logEventParams"></param>
        </member>
        <member name="T:GigaSpaces.XAP.Remoting.SpaceRemotingResult">
            <summary>
            Result of remote service invocation
            </summary>
        </member>
        <member name="M:GigaSpaces.XAP.Remoting.SpaceRemotingResult.#ctor(System.Object,System.Exception)">
            <summary>
            Constructs a new space remote execution result.
            </summary>
            <param name="result">Remote execution result.</param>
            <param name="exception">Remote execution exception.</param>
        </member>
        <member name="P:GigaSpaces.XAP.Remoting.SpaceRemotingResult.Exception">
            <summary>
            Gets remote execution exception or null if no exception occurd.
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Remoting.SpaceRemotingResult.Result">
            <summary>
            Gets remote execution result.
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Remoting.SpaceRemotingResultsCollection">
            <summary>
            Collection of <see cref="T:GigaSpaces.XAP.Remoting.SpaceRemotingResult"/>
            </summary>
        </member>
        <member name="T:GigaSpaces.XAP.Remoting.SpaceRemotingServiceAttribute">
            <summary>
            Used to give optional additional attributes for a remoting service
            </summary>
        </member>
        <member name="P:GigaSpaces.XAP.Remoting.SpaceRemotingServiceAttribute.LookupName">
            <summary>
            Gets or sets the service lookup name.
            </summary>
        </member>
    </members>
</doc>
