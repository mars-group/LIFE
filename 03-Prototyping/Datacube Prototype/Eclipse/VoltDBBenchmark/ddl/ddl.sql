CREATE TABLE dOne
(
  dId INTEGER UNIQUE NOT NULL,
  Value VARCHAR(36) NOT NULL,
  Time BIGINT NOT NULL,
  PRIMARY KEY (dId)
);

CREATE TABLE dTwo
(
  dId INTEGER UNIQUE NOT NULL,
  Value VARCHAR(36) NOT NULL,
  Time BIGINT NOT NULL,
  PRIMARY KEY (dId)
);

CREATE TABLE dThree
(
  dId INTEGER UNIQUE NOT NULL,
  Value VARCHAR(36) NOT NULL,
  Time BIGINT NOT NULL,
  PRIMARY KEY (dId)
);

CREATE TABLE dFour
(
  dId INTEGER UNIQUE NOT NULL,
  Value VARCHAR(36) NOT NULL,
  Time BIGINT NOT NULL,
  PRIMARY KEY (dId)
);

CREATE TABLE dFive
(
  dId INTEGER UNIQUE NOT NULL,
  Value VARCHAR(36) NOT NULL,
  Time BIGINT NOT NULL,
  PRIMARY KEY (dId)
);

CREATE TABLE dSix
(
  dId INTEGER UNIQUE NOT NULL,
  Value VARCHAR(36) NOT NULL,
  Time BIGINT NOT NULL,
  PRIMARY KEY (dId)
);

CREATE TABLE dSeven
(
  dId INTEGER UNIQUE NOT NULL,
  Value VARCHAR(36) NOT NULL,
  Time BIGINT NOT NULL,
  PRIMARY KEY (dId)
);

CREATE TABLE dEight
(
  dId INTEGER UNIQUE NOT NULL,
  Value VARCHAR(36) NOT NULL,
  Time BIGINT NOT NULL,
  PRIMARY KEY (dId)
);

CREATE TABLE dNine
(
  dId INTEGER UNIQUE NOT NULL,
  Value VARCHAR(36) NOT NULL,
  Time BIGINT NOT NULL,
  PRIMARY KEY (dId)
);

CREATE TABLE dTen
(
  dId INTEGER UNIQUE NOT NULL,
  Value VARCHAR(36) NOT NULL,
  Time BIGINT NOT NULL,
  PRIMARY KEY (dId)
);

CREATE TABLE facts
(
  fId INTEGER NOT NULL,
  dIdOne INTEGER NOT NULL REFERENCES dOne ( dId ),
  dIdTwo INTEGER NOT NULL REFERENCES dTwo ( dId ),
  dIdThree INTEGER NOT NULL REFERENCES dThree ( dId ),
  dIdFour INTEGER NOT NULL REFERENCES dFour ( dId ),
  dIdFive INTEGER NOT NULL REFERENCES dFive ( dId ),
  dIdSix INTEGER NOT NULL REFERENCES dSix ( dId ),
  dIdSeven INTEGER NOT NULL REFERENCES dSeven ( dId ),
  dIdEight INTEGER NOT NULL REFERENCES dEight ( dId ),
  dIdNine INTEGER NOT NULL REFERENCES dNine ( dId ),
  dIdTen INTEGER NOT NULL REFERENCES dTen ( dId ),
  PRIMARY KEY (fId, dIdOne, dIdTwo, dIdThree, dIdFour, dIdFive, dIdSix, dIdSeven, dIdEight, dIdNine, dIdTen),
);

PARTITION TABLE dOne ON COLUMN dId;
PARTITION TABLE dTwo ON COLUMN dId;
PARTITION TABLE dThree ON COLUMN dId;
PARTITION TABLE dFour ON COLUMN dId;
PARTITION TABLE dFive ON COLUMN dId;
PARTITION TABLE dSix ON COLUMN dId;
PARTITION TABLE dSeven ON COLUMN dId;
PARTITION TABLE dEight ON COLUMN dId;
PARTITION TABLE dNine ON COLUMN dId;
PARTITION TABLE dTen ON COLUMN dId;
PARTITION TABLE facts ON COLUMN fId;

CREATE PROCEDURE FROM CLASS de.janbusch.voltdb.benchmark.storedprocs.InsertDimensionX;
PARTITION PROCEDURE InsertDimensionX ON TABLE dOne COLUMN dId;
PARTITION PROCEDURE InsertDimensionX ON TABLE dTwo COLUMN dId;
PARTITION PROCEDURE InsertDimensionX ON TABLE dThree COLUMN dId;
PARTITION PROCEDURE InsertDimensionX ON TABLE dFour COLUMN dId;
PARTITION PROCEDURE InsertDimensionX ON TABLE dFive COLUMN dId;
PARTITION PROCEDURE InsertDimensionX ON TABLE dSix COLUMN dId;
PARTITION PROCEDURE InsertDimensionX ON TABLE dSeven COLUMN dId;
PARTITION PROCEDURE InsertDimensionX ON TABLE dEight COLUMN dId;
PARTITION PROCEDURE InsertDimensionX ON TABLE dNine COLUMN dId;
PARTITION PROCEDURE InsertDimensionX ON TABLE dTen COLUMN dId;
