CREATE TABLE dOne
(
  dId INTEGER UNIQUE NOT NULL,
  Value VARCHAR(36) NOT NULL,
  Time BIGINT NOT NULL,
  PRIMARY KEY (dId)
);

CREATE TABLE dTwo
(
  dId INTEGER UNIQUE NOT NULL,
  Value VARCHAR(36) NOT NULL,
  Time BIGINT NOT NULL,
  PRIMARY KEY (dId)
);

CREATE TABLE dThree
(
  dId INTEGER UNIQUE NOT NULL,
  Value VARCHAR(36) NOT NULL,
  Time BIGINT NOT NULL,
  PRIMARY KEY (dId)
);

CREATE TABLE dFour
(
  dId INTEGER UNIQUE NOT NULL,
  Value VARCHAR(36) NOT NULL,
  Time BIGINT NOT NULL,
  PRIMARY KEY (dId)
);

CREATE TABLE dFive
(
  dId INTEGER UNIQUE NOT NULL,
  Value VARCHAR(36) NOT NULL,
  Time BIGINT NOT NULL,
  PRIMARY KEY (dId)
);

CREATE TABLE dSix
(
  dId INTEGER UNIQUE NOT NULL,
  Value VARCHAR(36) NOT NULL,
  Time BIGINT NOT NULL,
  PRIMARY KEY (dId)
);

CREATE TABLE dSeven
(
  dId INTEGER UNIQUE NOT NULL,
  Value VARCHAR(36) NOT NULL,
  Time BIGINT NOT NULL,
  PRIMARY KEY (dId)
);

CREATE TABLE dEight
(
  dId INTEGER UNIQUE NOT NULL,
  Value VARCHAR(36) NOT NULL,
  Time BIGINT NOT NULL,
  PRIMARY KEY (dId)
);

CREATE TABLE dNine
(
  dId INTEGER UNIQUE NOT NULL,
  Value VARCHAR(36) NOT NULL,
  Time BIGINT NOT NULL,
  PRIMARY KEY (dId)
);

CREATE TABLE dTen
(
  dId INTEGER UNIQUE NOT NULL,
  Value VARCHAR(36) NOT NULL,
  Time BIGINT NOT NULL,
  PRIMARY KEY (dId)
);

CREATE TABLE facts
(
  fId INTEGER UNIQUE NOT NULL,
  dIdOne INTEGER UNIQUE NOT NULL REFERENCES dOne ( dId ),
  dIdTwo INTEGER UNIQUE NOT NULL REFERENCES dTwo ( dId ),
  dIdThree INTEGER UNIQUE NOT NULL REFERENCES dThree ( dId ),
  dIdFour INTEGER UNIQUE NOT NULL REFERENCES dFour ( dId ),
  dIdFive INTEGER UNIQUE NOT NULL REFERENCES dFive ( dId ),
  dIdSix INTEGER UNIQUE NOT NULL REFERENCES dSix ( dId ),
  dIdSeven INTEGER UNIQUE NOT NULL REFERENCES dSeven ( dId ),
  dIdEight INTEGER UNIQUE NOT NULL REFERENCES dEight ( dId ),
  dIdNine INTEGER UNIQUE NOT NULL REFERENCES dNine ( dId ),
  dIdTen INTEGER UNIQUE NOT NULL REFERENCES dTen ( dId ),
  PRIMARY KEY (fId),
);

PARTITION TABLE dOne ON COLUMN dId
PARTITION TABLE dTwo ON COLUMN dId
PARTITION TABLE dThree ON COLUMN dId
PARTITION TABLE dFour ON COLUMN dId
PARTITION TABLE dFive ON COLUMN dId
PARTITION TABLE dSix ON COLUMN dId
PARTITION TABLE dSeven ON COLUMN dId
PARTITION TABLE dEight ON COLUMN dId
PARTITION TABLE dNine ON COLUMN dId
PARTITION TABLE dTen ON COLUMN dId
PARTITION TABLE facts ON COLUMN fId

CREATE PROCEDURE FROM CLASS de.janbusch.voltdb.benchmark.storedprocedures.InsertFact;
PARTITION PROCEDURE de.janbusch.voltdb.benchmark.storedprocedures.InsertFact ON TABLE facts COLUMN fId;